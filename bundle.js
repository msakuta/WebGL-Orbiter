!function(e){var t={};function i(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,i),o.l=!0,o.exports}i.m=e,i.c=t,i.d=function(e,t,n){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(i.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)i.d(n,o,function(t){return e[t]}.bind(null,o));return n},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="",i(i.s=0)}([function(e,t,i){"use strict";i.r(t);var n=i.p+"c542c9e670acf7dd150f01148609482a.png",o=i.p+"0903534682db27dd03c9dba0263ad643.png",a=i.p+"46990c85cd649b70619843a555b3345d.png",l=i.p+"5f08f4fee6db3d4ad6f3b3cbc13dffcc.png",r=i.p+"c0bfef7c4934217b189c009df9d42a8e.png",s=i.p+"3cf13f3b90a3052e7dc75ff247679ee0.png",d=i.p+"48ffe930b952be145bd67bb9bb553c40.jpg",c=i.p+"f6c59da0e169b32276ea9d120b2d83a7.png",p=i.p+"d98a8545f507fb162034fa9d06cdfb72.png",h=i.p+"8153e8068f33d353b6e0d34edce8a763.png",u=i.p+"eef1518820fc0e6e41c21d04e400c383.png",m=i.p+"617d26819b20ea642f9dc2ed225ba5c0.png",y=i.p+"9934fc7e310513e1967f35e98cb66338.png",f=i.p+"c9a829c8a314a8bbcf3bd77b2bd05637.png",g=i.p+"db810c34d55dd5c68eebdb44d13d9100.png",E=i.p+"f68c3b0cf7824e644b8ba01bba09e50c.png",b=i.p+"95bc5e9f590806b4ff7025016f4e3555.png",v=i.p+"bcbafcfa9576c0f07976cc3e1c8b70aa.png",w=i.p+"438d6cd4d119b2dbd787c9ec46bd9da9.png",x=i.p+"0dc2237489e2fecac996663764ddf930.png",T=i.p+"08b4446f4489bff43f4ba80abd365abd.png",M=i.p+"8e9ea6ca84ceb4f1e320506e19a1e8a2.png",H=i.p+"a059c92c97525713cff53fe09db2f593.png",R=i.p+"e95cc5d5de5551f50559002e1713e35c.png",S=i.p+"6198c1ce9003c1f24816ca4ffe53d011.jpg",C=i.p+"24b4343b0a0ddfebabf3f9d1e75b1644.png",k=i.p+"00e79a1eabdbbce2ff8a2da94eeb7ff6.jpg",V=i.p+"ff6c47a2547885b72d4b1470b67a40e9.jpg",L=i.p+"04b62b942b35b72b3d705d568f516777.jpg",I=i.p+"f247fc590e02c428df8c1ab82bda7b52.jpg",P=i.p+"c85875692a5e7b3597bd453be9270327.jpg",q=i.p+"53f370615a82114fe6eba8f794472013.png",D=i.p+"28565d0e33dec1956aeaac0ec053295e.png",W=i.p+"8896fc86681757cab4f1db417cbbc403.png",_=i.p+"444ba38fc532a73de637844f74c3c11d.png",z=i.p+"56191d80ec90ed7d3809c403db84c980.obj";!function(){var e,t,i,O,G,j,B,Q,A,F,N,J,U,Y,K,X,Z,$,ee,te,ie,ne,oe,ae,le,re,se,de,ce,pe,he,ue=window.innerWidth/2,me=window.innerHeight/2,ye=!1,fe=null,ge=!0,Ee=!1,be=!0,ve=!1,we={up:!1,down:!1,left:!1,right:!1,counterclockwise:!1,clockwise:!1},xe=!1,Te=!1,Me={},He=149597871,Re=13271244e4/He/He/He,Se=1,Ce=Math.PI/180;function ke(e,t,i,n){var o=new THREE.Quaternion;return o.setFromAxisAngle(new THREE.Vector3(e,t,i),n),o}function Ve(e,t,i,n,o,a){this.position=t,this.velocity=new THREE.Vector3,this.quaternion=new THREE.Quaternion,this.angularVelocity=new THREE.Vector3,n&&(this.orbitMaterial=new THREE.LineBasicMaterial({color:n})),this.children=[],this.parent=e,this.GM=o||Re,e&&e.children.push(this),this.radius=1/He,this.controllable=!1,this.throttle=0,this.totalDeltaV=0,this.ignitionCount=0,this.name=a,Me[a]=this}function Le(e){return new THREE.Vector3(e.x,e.y,e.z)}function Ie(){ue=window.innerWidth/2,me=window.innerHeight/2,i.aspect=window.innerWidth/window.innerHeight,i.updateProjectionMatrix(),G.setSize(window.innerWidth,window.innerHeight)}function Pe(e){return e<10?"0"+e:e}function qe(e){var t=String.fromCharCode(e.which||e.keyCode).toLowerCase();switch(t){case"i":if(null===fe)fe=ce.children[0];else{fe.orbit&&(fe.orbit.material=fe.orbitMaterial);var i=fe.children;if(0<i.length)fe=i[0];else{for(var n=!1,o=fe,a=fe.parent;a;a=a.parent){i=a.children;for(var l=0;l<i.length;l++){if(i[l]===o&&l+1<i.length){fe=i[l+1],n=!0;break}}if(n)break;o=a}a||(fe=ce)}}fe.orbit&&(fe.orbit.material=he);break;case"c":ye=!ye;break;case"n":ge=!ge;break;case"g":Ee=!Ee;break;case"h":ve=!ve;break;case"k":be=!be}if(fe&&fe.controllable)switch(t){case"w":we.up=!0;break;case"s":we.down=!0;break;case"q":we.counterclockwise=!0;break;case"e":we.clockwise=!0;break;case"a":we.left=!0;break;case"d":we.right=!0;break;case"z":Y.setThrottle(1);break;case"x":Y.setThrottle(0)}var r=e.which||e.keyCode;(107===r||187===r&&e.shiftKey)&&U.increment(),109!==r&&189!==r||U.decrement(),16===r&&(xe=!0),17===r&&(Te=!0)}function De(e){switch(String.fromCharCode(e.which||e.keyCode).toLowerCase()){case"w":we.up=!1;break;case"s":we.down=!1;break;case"q":we.counterclockwise=!1;break;case"e":we.clockwise=!1;break;case"a":we.left=!1;break;case"d":we.right=!1}var t=e.which||e.keyCode;16===t&&(xe=!1),17===t&&(Te=!1)}Ve.prototype.init=function(){this.ascending_node=Math.random()*Math.PI*2,this.epoch=Math.random(),this.mean_anomaly=Math.random(),this.update()},Ve.prototype.get_eccentric_anomaly=function(e){var t=e-this.epoch,i=2*Math.PI*Math.sqrt(Math.pow(this.semimajor_axis*He,3)/this.parent.GM),n=this.mean_anomaly+2*t*Math.PI/i;return n+this.eccentricity*Math.sin(n)},Ve.prototype.getWorldPosition=function(){return this.parent?this.parent.getWorldPosition().clone().add(this.position):this.position},Ve.prototype.setOrbitingVelocity=function(e,t){this.velocity=new THREE.Vector3(1,0,0).multiplyScalar(Math.sqrt(this.parent.GM*(2/this.position.length()-1/e))).applyQuaternion(t)},Ve.prototype.serialize=function(){return{name:this.name,parent:this.parent?this.parent.name:null,position:this.position,velocity:this.velocity,quaternion:this.quaternion,angularVelocity:this.angularVelocity,totalDeltaV:this.totalDeltaV||void 0,ignitionCount:this.ignitionCount||void 0}},Ve.prototype.serializeTree=function(){var e=[];e.push(this.serialize());for(var t=0;t<this.children.length;t++)e=e.concat(this.children[t].serializeTree());return e},Ve.prototype.deserialize=function(e){this.name=e.name,this.setParent(Me[e.parent]),this.position=Le(e.position),this.velocity=Le(e.velocity),this.quaternion=function(e){return new THREE.Quaternion(e._x,e._y,e._z,e._w)}(e.quaternion),this.angularVelocity=Le(e.angularVelocity),this.totalDeltaV=e.totalDeltaV||0,this.ignitionCount=e.ignitionCount||0},Ve.prototype.setParent=function(e){if(this.parent!==e){if(this.parent){var t=this.parent.children.indexOf(this);0<=t&&this.parent.children.splice(t,1)}this.parent=e,this.parent&&this.parent.children.push(this)}},Ve.prototype.update=function(){function e(e){var t=e.getWorldPosition();return fe&&ye&&t.sub(fe.getWorldPosition()),t.multiplyScalar(100),t}function t(e,t){var n=d.clone().normalize().multiplyScalar(e*o.semimajor_axis*(1-e*o.eccentricity)).sub(o.position).multiplyScalar(100).applyMatrix4(i.matrixWorldInverse).applyProjection(i.projectionMatrix);n.x*=ue,n.y*=me,n.y-=8*e,0<n.z&&n.z<1?(t.position.copy(n),t.visible=!0):t.visible=!1}var n,o=this;if(this.vertex&&this.vertex.copy(e(this)),this.model&&(this.model.position.copy(e(this)),this.model.scale.set(1,1,1).multiplyScalar((n=this,ge?e(n).distanceTo(i.position)/100/n.radius*1e6+1:1)),this.model.quaternion.copy(this.quaternion)),this.parent){var a=this.velocity.clone().cross(this.position),l=this.position.length(),r=this.velocity.length(),s=new THREE.Vector3(0,0,1).cross(a),d=this.position.clone().multiplyScalar(1/this.parent.GM*(r*r-this.parent.GM/l)).sub(this.velocity.clone().multiplyScalar(this.position.dot(this.velocity)/this.parent.GM));this.eccentricity=d.length(),this.inclination=Math.acos(-a.z/a.length()),s.lengthSq()<=1e-40?this.ascending_node=0:(this.ascending_node=Math.acos(s.x/s.length()),s.y<0&&(this.ascending_node=2*Math.PI-this.ascending_node)),this.semimajor_axis=1/(2/l-r*r/this.parent.GM);var c=ke(0,0,1,this.ascending_node-Math.PI/2).multiply(ke(0,1,0,Math.PI-this.inclination)),p=-this.position.dot(this.velocity)/Math.abs(this.position.dot(this.velocity));s.lengthSq()<=1e-40||d.lengthSq()<=1e-40?this.argument_of_perihelion=Math.atan2(-d.y,d.x):(this.argument_of_perihelion=Math.acos(s.dot(d)/s.length()/d.length()),d.z<0&&(this.argument_of_perihelion=2*Math.PI-this.argument_of_perihelion));var h=c.clone().multiply(ke(0,0,1,this.argument_of_perihelion));function u(e){return be?(e*He).toPrecision(10)+" km":e.toFixed(10)+" AU"}if(this===fe&&X.setText('<table class="table1"> <tr><td>e</td><td>'+this.eccentricity.toFixed(10)+"</td></tr> <tr><td>a</td><td>"+u(this.semimajor_axis)+"</td></tr> <tr><td>i</td><td>"+(this.inclination/Math.PI).toFixed(10)+"</td></tr> <tr><td>Omega</td><td>"+(this.ascending_node/Math.PI).toFixed(10)+"</td></tr> <tr><td>w</td><td>"+(this.argument_of_perihelion/Math.PI).toFixed(10)+"</td></tr> <tr><td>Periapsis</td><td>"+u(o.semimajor_axis*(1-o.eccentricity))+"</td></tr> <tr><td>Apoapsis</td><td>"+u(o.semimajor_axis*(1+o.eccentricity))+"</td></tr> <tr><td>head</td><td>"+p.toFixed(5)+"</td></tr></table>"),1<this.eccentricity){this.hyperbolicGeometry||(this.hyperbolicGeometry=new THREE.Geometry);var m=Math.acos(-1/this.eccentricity);this.hyperbolicGeometry.vertices.length=0;for(var y=a.lengthSq(),f=-19;f<20;f++){var g=m*(f<0?-1:1)*Math.sqrt(Math.abs(f)/20);this.hyperbolicGeometry.vertices.push(new THREE.Vector3(Math.sin(g),Math.cos(g),0).multiplyScalar(y/this.parent.GM/(1+this.eccentricity*Math.cos(g))))}this.hyperbolicGeometry.verticesNeedUpdate=!0,this.hyperbolicMesh||(this.hyperbolicMesh=new THREE.Line(this.hyperbolicGeometry,this.orbitMaterial),O.add(this.hyperbolicMesh)),this.hyperbolicMesh.quaternion.copy(h),this.hyperbolicMesh.scale.x=100,this.hyperbolicMesh.scale.y=100,this.hyperbolicMesh.position.copy(this.parent.getWorldPosition()),fe&&ye&&this.hyperbolicMesh.position.sub(fe.getWorldPosition()),this.hyperbolicMesh.position.multiplyScalar(100),this.hyperbolicMesh.visible=!0,this.orbit&&(this.orbit.visible=!1)}else this.hyperbolicMesh&&(this.orbit&&(this.orbit.visible=!0),this.hyperbolicMesh.visible=!1);this.orbit&&(this.orbit.quaternion.copy(h),this.orbit.scale.x=100*this.semimajor_axis*Math.sqrt(1-this.eccentricity*this.eccentricity),this.orbit.scale.y=100*this.semimajor_axis,this.orbit.position.copy(new THREE.Vector3(0,-this.semimajor_axis*this.eccentricity,0).applyQuaternion(h).add(this.parent.getWorldPosition())),fe&&ye&&this.orbit.position.sub(fe.getWorldPosition()),this.orbit.position.multiplyScalar(100)),this.apoapsis&&(this===fe&&0<this.eccentricity&&this.eccentricity<1?t(-1,this.apoapsis):this.apoapsis.visible=!1),this.periapsis&&(this===fe&&0<this.eccentricity?t(1,this.periapsis):this.periapsis.visible=!1)}for(f=0;f<this.children.length;f++){this.children[f].update()}},function(){e=document.getElementById("container"),(i=new THREE.PerspectiveCamera(60,window.innerWidth/window.innerHeight,1,1e4)).position.y=300,i.position.z=1e3,i.up.set(0,0,1),(B=new THREE.Scene).rotation.x=Math.PI/2,(new THREE.TextureLoader).load(S,(function(e){var t=new THREE.SphereGeometry(2,20,20),i=new THREE.MeshBasicMaterial({map:e,overdraw:.5,depthTest:!1,depthWrite:!1,side:THREE.BackSide});i.depthWrite=!1;var n=new THREE.Mesh(t,i);B.add(n)})),A=new THREE.OrthographicCamera(window.innerWidth/-2,window.innerWidth/2,window.innerHeight/2,window.innerHeight/-2,-1e3,1e3),window.addEventListener("resize",(function(){A.left=window.innerWidth/-2,A.right=window.innerWidth/2,A.top=window.innerHeight/2,A.bottom=window.innerHeight/-2,A.updateProjectionMatrix()})),Q=new THREE.Scene,(new THREE.TextureLoader).load(H,(function(e){var t=new THREE.SphereGeometry(64,20,20),i=new THREE.MeshBasicMaterial({map:e,overdraw:.5,depthTest:!1,depthWrite:!1});F=new THREE.Mesh(t,i),Q.add(F);var n=new THREE.SpriteMaterial({map:THREE.ImageUtils.loadTexture(R),depthTest:!1,depthWrite:!1,transparent:!0}),o=new THREE.Sprite(n);o.scale.set(64,32,64),F.add(o)}));var me=new THREE.PlaneGeometry(40,40);N=new THREE.Mesh(me,new THREE.MeshBasicMaterial({map:THREE.ImageUtils.loadTexture(c),color:16777215,side:THREE.DoubleSide,depthTest:!1,depthWrite:!1,transparent:!0})),Q.add(N),J=new THREE.Mesh(me,new THREE.MeshBasicMaterial({map:THREE.ImageUtils.loadTexture(p),color:16777215,side:THREE.DoubleSide,depthTest:!1,depthWrite:!1,transparent:!0})),Q.add(J),O=new THREE.Scene,j=new THREE.Object3D,O.add(j);var xe=new THREE.ParticleSystemMaterial({size:.1}),Te=new THREE.SphereGeometry(695800/He*100,20,20),Le=new THREE.Mesh(Te,xe);j.add(Le),pe=new THREE.PointLight(16777215,1,0,1e-6),O.add(pe),O.add(new THREE.AmbientLight(2105376));for(var We=new THREE.LineBasicMaterial({color:4144959}),_e=new THREE.Geometry,ze=-10;ze<=10;ze++)_e.vertices.push(new THREE.Vector3(-10,ze,0),new THREE.Vector3(10,ze,0));for(ze=-10;ze<=10;ze++)_e.vertices.push(new THREE.Vector3(ze,-10,0),new THREE.Vector3(ze,10,0));ne=new THREE.Object3D;var Oe=new THREE.LineSegments(_e,We);Oe.scale.x=Oe.scale.y=100,ne.add(Oe);var Ge=new THREE.LineSegments(_e,We);function je(e,t){var i=new THREE.LineBasicMaterial({color:t}),n=new THREE.Geometry;n.vertices.push(new THREE.Vector3(0,0,0),e);var o=new THREE.Line(n,i);o.scale.multiplyScalar(100),ne.add(o)}Ge.scale.x=Ge.scale.y=1e4/He*100,ne.add(Ge),je(new THREE.Vector3(100,0,0),16711680),je(new THREE.Vector3(0,100,0),65280),je(new THREE.Vector3(0,0,100),255),O.add(ne);var Be=new THREE.LineBasicMaterial({color:4145023});Ve.prototype.orbitMaterial=Be,he=new THREE.LineBasicMaterial({color:16744447});var Qe=new THREE.Geometry,Ae=new THREE.EllipseCurve(0,0,1,1,0,2*Math.PI,!1,90);function Fe(e,t,i,o,a,l,d,c,p,h,u,m){var y=ke(0,0,1,o-Math.PI/2).multiply(ke(0,1,0,Math.PI-i)).multiply(ke(0,0,1,a)),f=new THREE.Object3D,g=new Ve(c||ce,new THREE.Vector3(0,1-t,0).multiplyScalar(e).applyQuaternion(y),f.position,l,d,m);if(g.model=f,g.radius=h,O.add(f),p)(new THREE.TextureLoader).load(p||P,(function(e){var t=new THREE.SphereGeometry(1,20,20),i=new THREE.MeshLambertMaterial({map:e,color:16777215,shading:THREE.FlatShading,overdraw:.5}),n=new THREE.Mesh(t,i),o=100*(h||6534)/He;n.scale.set(o,o,o),n.rotation.x=Math.PI/2,f.add(n)}));else if(u.modelName){(new THREE.OBJLoader).load(u.modelName,(function(e){var t=100*(h||6534)/He;e.scale.set(t,t,t),f.add(e)}));var E=new THREE.Object3D;f.add(E),E.visible=!1,E.position.x=-60/He,g.blastModel=E;var b,v=new THREE.SpriteMaterial({map:THREE.ImageUtils.loadTexture(n),blending:THREE.AdditiveBlending,depthWrite:!1,transparent:!0}),w=new THREE.Sprite(v);w.position.x=-30/He,w.scale.multiplyScalar(100/He),E.add(w),(b=new THREE.Sprite(v)).position.x=-60/He,b.scale.multiplyScalar(50/He),E.add(b),(b=new THREE.Sprite(v)).position.x=-80/He,b.scale.multiplyScalar(30/He),E.add(b)}u&&u.controllable&&(g.controllable=u.controllable),g.soi=u&&u.soi?u.soi/He:0,g.apoapsis=new THREE.Sprite(new THREE.SpriteMaterial({map:THREE.ImageUtils.loadTexture(r),transparent:!0})),g.apoapsis.scale.set(16,16,16),Q.add(g.apoapsis),g.periapsis=new THREE.Sprite(new THREE.SpriteMaterial({map:THREE.ImageUtils.loadTexture(s),transparent:!0})),g.periapsis.scale.set(16,16,16),Q.add(g.periapsis),g.setOrbitingVelocity(e,y),u&&u.axialTilt&&u.rotationPeriod&&(g.quaternion=ke(1,0,0,u.axialTilt),g.angularVelocity=new THREE.Vector3(0,0,2*Math.PI/u.rotationPeriod).applyQuaternion(g.quaternion)),u&&u.angularVelocity&&(g.angularVelocity=u.angularVelocity),u&&u.quaternion&&(g.quaternion=u.quaternion);var x=new THREE.Line(Qe,g.orbitMaterial);return g.orbit=x,O.add(x),g.init(),g.update(),g}Qe=new THREE.Path(Ae.getPoints(256)).createPointsGeometry(256),(ce=new Ve(null,new THREE.Vector3,null,16777215,Re,"sun")).radius=695800,ce.model=j,Fe(.387098,.20563,7.005*Ce,48.331*Ce,29.124*Ce,4161407,22032/He/He/He,ce,k,2439.7,{soi:2e5},"mercury");var Ne=Fe(.723332,.00677323,3.39458*Ce,76.678*Ce,55.186*Ce,8355647,324859/He/He/He,ce,L,6051.8,{soi:5e5},"mars"),Je=Fe(1,.0167086,0,-11.26064*Ce,114.20783*Ce,4161343,398600/He/He/He,ce,P,6534,{axialTilt:23.4392811*Ce,rotationPeriod:86164.1,soi:5e5},"earth"),Ue=Fe(1e4/He,0,0,0,0,4161407,100/He/He/He,Je,void 0,.1,{modelName:z,controllable:!0},"rocket");Ue.quaternion.multiply(ke(1,0,0,Math.PI/2)).multiply(ke(0,1,0,Math.PI/2));var Ye=Fe(384399/He,.0167086,0,-11.26064*Ce,114.20783*Ce,6250335,4904.8695/He/He/He,Je,C,1737.1,{soi:1e5},"moon"),Ke=Fe(1.523679,.0935,1.85*Ce,49.562*Ce,286.537*Ce,8339263,42828/He/He/He,ce,V,3389.5,{soi:3e5},"mars"),Xe=Fe(5.204267,.048775,1.305*Ce,100.492*Ce,275.066*Ce,8355647,126686534/He/He/He,ce,I,69911,{soi:1e7},"jupiter");fe=Ue,ye=!0,i.position.set(.005,.003,.005);for(var Ze=new THREE.IcosahedronGeometry(1,2),$e=0;$e<Ze.vertices.length;$e++)Ze.vertices[$e].multiplyScalar(.3*(Math.random()-.5)+1);Ze.computeFaceNormals(),Ze.computeVertexNormals();var et=THREE.ImageUtils.loadTexture(d);et.wrapS=THREE.RepeatWrapping,et.wrapT=THREE.RepeatWrapping,et.repeat.set(4,4);var tt=new THREE.MeshLambertMaterial({map:et,color:16756607,shading:THREE.SmoothShading,overdraw:.5});for($e=0;$e<3;$e++){var it=Math.random()*Math.PI*2,nt=new THREE.Vector3;nt.x=.1*(Math.random()-.5),nt.y=.1*(Math.random()-.5)+1,nt.z=.1*(Math.random()-.5),nt.applyQuaternion(ke(0,0,1,it)),nt.multiplyScalar(2.5);var ot=new Ve(ce,nt,void 0,void 0,void 0,"asteroid"+$e);ot.velocity=new THREE.Vector3(.3*(Math.random()-.5)-1,.3*(Math.random()-.5),.3*(Math.random()-.5)).multiplyScalar(Math.sqrt(Re/nt.length())).applyQuaternion(ke(0,0,1,it)),ot.radius=1*Math.random()+.1,ot.model=new THREE.Object3D;var at=new THREE.Mesh(Ze,tt);ot.model.add(at);var lt=100*ot.radius/He;at.scale.set(lt,lt,lt),at.up.set(0,0,1),O.add(ot.model);var rt=new THREE.Line(Qe,ot.orbitMaterial);ot.orbit=rt,O.add(rt),ot.init(),ot.update()}(G=new THREE.WebGLRenderer).setClearColor(0),G.setSize(window.innerWidth,window.innerHeight),G.autoClear=!1,(ie=new THREE.OrbitControls(i,G.domElement)).target.set(0,0,0),ie.noPan=!0,ie.maxDistance=4e3,ie.minDistance=1/He,ie.zoomSpeed=5,ie.update(),e.appendChild(G.domElement),(t=new Stats).domElement.style.position="absolute",t.domElement.style.top="0px",e.appendChild(t.domElement),U=new function(){function e(e){if(fe&&0<fe.throttle)te.setText("You cannot timewarp while accelerating");else{for(var l=0;l<t.length;l++)t[l].src=l<=e?o:a;s.innerHTML="Timescale: x"+i[e],Se=i[e],n=e}}this.domElement=document.createElement("div"),this.domElement.style.position="absolute",this.domElement.style.top="50px",this.domElement.style.background="#7f7f7f",this.domElement.style.zIndex=10;for(var t=[],i=[1,5,10,100,1e3,1e4,1e5,1e6],n=0,l=0;l<i.length;l++){var r=document.createElement("img");r.src=l<=n?o:a,r.style.width="15px",r.style.height="20px",r.number=l,r.addEventListener("click",(function(t){e(this.number)})),this.domElement.appendChild(r),t.push(r)}var s=document.createElement("div");s.innerHTML="Timescale: x1",this.domElement.appendChild(s);var d=document.createElement("div");this.domElement.appendChild(d),this.setDate=function(e){d.innerHTML=e},this.increment=function(){fe&&0<fe.throttle?te.setText("You cannot timewarp while accelerating"):(n+1<i.length&&n++,e(n))},this.decrement=function(){0<=n-1&&n--,e(n)}},e.appendChild(U.domElement),Y=new function(){function e(e){1<Se&&0<e?te.setText("You cannot accelerate while timewarping"):t(e)}function t(e){var t=n.getBoundingClientRect(),i=r.getBoundingClientRect(),o=d.getBoundingClientRect(),a=i.height-o.height;if(d.style.top=(1-e)*a+(i.top-t.top)+"px",0===fe.throttle&&0<e&&fe.ignitionCount++,fe.throttle=e,fe&&fe.blastModel){fe.blastModel.visible=0<fe.throttle;var l=(fe.throttle+.1)/1.1;fe.blastModel.scale.set(l,l,l)}}function i(t){var i=r.getBoundingClientRect(),n=d.getBoundingClientRect(),o=i.height-n.height;e(1-Math.min(o,Math.max(0,t.clientY-i.top-n.height/2))/o)}this.domElement=document.createElement("div"),this.domElement.style.position="absolute",this.domElement.style.top=window.innerHeight-128+"px",this.domElement.style.left=ue-64-32+"px",this.domElement.style.background="#7f7f7f",this.domElement.style.zIndex=10;var n=this.domElement,o=!1,a=this,l=document.createElement("img");l.src=q,l.style.position="absolute",l.style.left="0px",l.style.top="0px",l.onmousedown=function(e){a.setThrottle(1)},l.ondragstart=function(e){e.preventDefault()},this.domElement.appendChild(l);var r=document.createElement("img");r.src=W,r.style.position="absolute",r.style.left="0px",r.style.top="25px",r.onmousedown=function(e){o=!0,i(e)},r.onmousemove=function(e){o&&1&e.buttons&&i(e)},r.onmouseup=function(e){o=!1},r.draggable=!0,r.ondragstart=function(e){e.preventDefault()},this.domElement.appendChild(r);var s=document.createElement("img");s.src=D,s.style.position="absolute",s.style.left="0px",s.style.top="106px",s.onmousedown=function(e){a.setThrottle(0)},s.ondragstart=function(e){e.preventDefault()},this.domElement.appendChild(s);var d=document.createElement("img");d.src=_,d.style.position="absolute",d.style.top="112px",d.style.left="0px",d.onmousemove=r.onmousemove,d.onmousedown=r.onmousedown,d.onmouseup=r.onmouseup,d.ondragstart=r.ondragstart,this.domElement.appendChild(d),this.increment=function(t){fe&&e(Math.min(1,fe.throttle+t))},this.decrement=function(t){fe&&e(Math.max(0,fe.throttle-t))},this.setThrottle=function(t){e(t)},window.addEventListener("resize",(function(){n.style.top=window.innerHeight-128+"px",n.style.left=window.innerWidth/2-64-32+"px"})),window.addEventListener("load",(function(){t(fe.throttle)}))},e.appendChild(Y.domElement);var st=new function(){function e(){a.style.top=window.innerHeight-128+"px",a.style.left=window.innerWidth/2-64+"px"}function t(e){var t=e||window.event;return t.preventDefault&&t.preventDefault(),t.stopPropagation&&t.stopPropagation(),t.cancelBubble=!0,t.returnValue=!1,!1}function i(e,i,a,r){var s=document.createElement("img");s.src=e,s.width=o,s.height=n,s.style.position="absolute",s.style.top=r+"px",s.style.left=a+"px",s.onmousedown=function(e){we[i]=!0},s.onmouseup=function(e){we[i]=!1,s.style.boxShadow=""},s.ondragstart=function(e){e.preventDefault()},s.ontouchstart=function(e){we[i]=!0,e.preventDefault(),e.stopPropagation()},s.ontouchmove=t,s.ontouchend=function(e){we[i]=!1,s.style.boxShadow="",e.preventDefault(),e.stopPropagation()},s.ontouchcancel=t,l.appendChild(s)}var n=32,o=32;this.domElement=document.createElement("div");var a=this.domElement;this.domElement.style.position="absolute",this.domElement.style.width="128px",this.domElement.style.height="128px",e(),this.domElement.style.zIndex=5;var l=document.createElement("div");l.style.width="100%",l.style.height="100%",l.style.display="none",this.domElement.appendChild(l),this.domElement.onmouseenter=function(e){l.style.display="block"},this.domElement.onmouseleave=function(e){l.style.display="none",up=down=left=right=!1},i(h,"up",64-o/2,0),i(u,"down",64-o/2,128-n),i(m,"left",0,64-n/2),i(y,"right",128-o,64-n/2),i(f,"clockwise",128-o,0),i(g,"counterclockwise",0,0),window.addEventListener("resize",e)};function dt(e,t){var i=e.getBoundingClientRect(),n=t.getBoundingClientRect();e.style.top=n.height-i.height+"px",e.style.right=n.width+"px"}function ct(e,t,i){this.domElement=document.createElement("div");var n=this.domElement;n.style.position="absolute",n.style.textAlign="left",n.style.top=i.buttonTop+"px",n.style.right="0px",n.style.zIndex=7,this.icon=document.createElement("img"),this.icon.src=t,this.icon.style.width=i.buttonWidth+"px",this.icon.style.height=i.buttonHeight+"px";var o=this;this.iconMouseOver=!1,this.icon.ondragstart=function(e){e.preventDefault()},this.icon.onclick=function(e){o.setVisible(!o.visible)},this.icon.onmouseenter=function(e){o.visible||(o.title.style.display="block"),dt(o.title,o.icon),o.iconMouseOver=!0},this.icon.onmouseleave=function(e){o.visible||(o.title.style.display="none"),o.iconMouseOver=!1},n.appendChild(this.icon);var a=document.createElement("div");a.innerHTML=e,a.style.display="none",a.style.position="absolute",a.style.background="rgba(0, 0, 0, 0.5)",a.style.zIndex=20,n.appendChild(a),this.title=a,this.visible=!1;var l=document.createElement("div");l.style.cssText="display: none; position: fixed; left: 50%;width: 300px; top: 50%; background-color: rgba(0,0,0,0.85); border: 5px ridge #7fff7f;font-size: 15px; text-align: center; font-family: Sans-Serif",this.valueElement=l;var r=document.createElement("div");r.style.margin="15px",r.style.padding="15px",r.style.fontSize="25px",r.innerHTML=i.innerTitle||e,this.valueElement.appendChild(r),this.closeIcon=document.createElement("img"),this.closeIcon.src=E,this.closeIcon.style.cssText="position: absolute; top: 0px; right: 0px; border: inset 1px #7f7f7f;",this.closeIcon.ondragstart=function(e){e.preventDefault()},this.closeIcon.onclick=function(e){o.setVisible(!1)},this.valueElement.appendChild(this.closeIcon),this.domElement.appendChild(this.valueElement)}function pt(){return{simTime:re,startTime:se,bodies:ce.serializeTree()}}function ht(e){re=new Date(e.simTime),se=new Date(e.startTime);for(var t=e.bodies,i=0;i<t.length;i++){var n=t[i];n.name in Me&&Me[n.name].deserialize(n)}Y.setThrottle(Ue.throttle)}e.appendChild(st.domElement),K=new function(){function e(){t.style.top=window.innerHeight-128-32+"px",t.style.left=window.innerWidth/2-t.getBoundingClientRect().width/2+"px"}this.domElement=document.createElement("div");var t=this.domElement;t.style.position="absolute",e(),t.style.zIndex=7,t.style.background="rgba(0, 0, 0, 0.5)",window.addEventListener("resize",e);var i=document.createElement("div");i.innerHTML="Orbit",t.appendChild(i);var n=document.createElement("div");t.appendChild(n),this.setSpeed=function(){if(fe){var e=fe.velocity.length()*He;n.innerHTML=e<1?(1e3*e).toFixed(4)+"m/s":e.toFixed(4)+"km/s"}else n.innerHTML="";t.style.left=window.innerWidth/2-t.getBoundingClientRect().width/2+"px"}},e.appendChild(K.domElement),X=new function(){this.domElement=document.createElement("div");var e=this.domElement;e.style.position="absolute",e.style.textAlign="left",e.style.top="120px",e.style.left="0px",e.style.zIndex=7;var t=!1,i=document.createElement("img");i.src=l,e.appendChild(i);var n=document.createElement("div");n.innerHTML="Orbital Elements",n.style.display="none",e.appendChild(n);var o=document.createElement("div");e.appendChild(o),o.id="orbit",o.style.display="none",i.ondragstart=function(e){e.preventDefault()},i.onclick=function(i){(t=!t)?(o.style.display="block",e.style.background="rgba(0, 0, 0, 0.5)"):(o.style.display="none",e.style.background="rgba(0, 0, 0, 0)")},i.onmouseenter=function(e){t||(n.style.display="block")},i.onmouseleave=function(e){t||(n.style.display="none")},this.setText=function(e){o.innerHTML=e}},e.appendChild(X.domElement),Z=new function(){function e(){i.style.left=window.innerWidth-t+"px",dt(a,o)}var t=32;this.domElement=document.createElement("div");var i=this.domElement;i.style.position="absolute",i.style.textAlign="left",i.style.top="120px",i.style.left="0px",i.style.zIndex=7;var n=!1,o=document.createElement("img");o.src=x,o.style.width=t+"px",o.style.height="32px",i.appendChild(o);var a=document.createElement("div");a.innerHTML="Statistics",a.style.display="none",a.style.position="absolute",a.style.top="120px",a.style.background="rgba(0, 0, 0, 0.5)",a.style.zIndex=20,i.appendChild(a);var l=document.createElement("div");i.appendChild(l),l.style.display="none",l.style.position="absolute",l.style.background="rgba(0, 0, 0, 0.5)",l.style.border="3px ridge #7f3f3f",l.style.padding="3px";for(var r=[],s=0;s<3;s++){var d=document.createElement("div");d.innerHTML=["Mission Time","Delta-V","Ignition&nbsp;Count"][s],d.style.fontWeight="bold",d.style.paddingRight="1em",l.appendChild(d);var c=document.createElement("div");c.style.textAlign="right",r.push(c),l.appendChild(c)}e(),window.addEventListener("resize",e),o.ondragstart=function(e){e.preventDefault()},o.onclick=function(e){(n=!n)?(l.style.display="block",i.style.background="rgba(0, 0, 0, 0.5)"):(l.style.display="none",i.style.background="rgba(0, 0, 0, 0)",$.domElement.style.top=i.getBoundingClientRect().bottom+"px")},o.onmouseenter=function(e){n||(a.style.display="block"),dt(a,o)},o.onmouseleave=function(e){n||(a.style.display="none")},this.setText=function(e){if(n)if(fe){var i=(re.getTime()-se.getTime())/1e3,o=Math.floor(i)%60,a=Math.floor(i/60)%60,s=Math.floor(i/60/60)%24,d=Math.floor(i/60/60/24);r[0].innerHTML=d+"d "+Pe(s)+":"+Pe(a)+":"+Pe(o);var c,p=fe.totalDeltaV*He;c=p<10?(1e3*p).toFixed(1)+"m/s":p.toFixed(4)+"km/s",r[1].innerHTML=c,r[2].innerHTML=fe.ignitionCount,l.style.marginLeft=t-l.getBoundingClientRect().width+"px",$.domElement.style.top=l.getBoundingClientRect().bottom+"px"}else r[3].innerHTML=r[2]=""}},e.appendChild(Z.domElement),$=new function(){function e(){i.style.left=window.innerWidth-t+"px",dt(a,o)}var t=32;this.domElement=document.createElement("div");var i=this.domElement;i.style.position="absolute",i.style.textAlign="left",i.style.top="154px",i.style.left="0px",i.style.zIndex=7;var n=!1,o=document.createElement("img");o.src=T,o.style.width=t+"px",o.style.height="32px",i.appendChild(o);var a=document.createElement("div");a.innerHTML="Settings",a.style.display="none",a.style.position="absolute",a.style.background="rgba(0, 0, 0, 0.5)",a.style.zIndex=20,i.appendChild(a);var l=document.createElement("div");i.appendChild(l),l.style.display="none",l.style.position="absolute",l.style.background="rgba(0, 0, 0, 0.5)",l.style.border="3px ridge #7f3f3f",l.style.padding="3px";for(var r=[function(){Ee=!Ee},function(){ve=!ve},function(){ge=!ge},function(){be=!be}],s=[],d=0;d<r.length;d++){var c=document.createElement("div"),p=document.createElement("input");p.type="checkbox",p.onclick=r[d];var h="settings_check_"+d;p.setAttribute("id",h),c.appendChild(p),s.push(p);var u=document.createElement("label");u.setAttribute("for",h),u.innerHTML=["Show&nbsp;grid&nbsp;(G)","Chase&nbsp;camera&nbsp;(H)","Nonlinear&nbsp;scale&nbsp;(N)","Units in KM&nbsp;(K)"][d],c.appendChild(u),c.style.fontWeight="bold",c.style.paddingRight="1em",c.style.whiteSpace="nowrap",l.appendChild(c)}e(),window.addEventListener("resize",e),o.ondragstart=function(e){e.preventDefault()},o.onclick=function(e){(n=!n)?(l.style.display="block",i.style.background="rgba(0, 0, 0, 0.5)"):(l.style.display="none",i.style.background="rgba(0, 0, 0, 0)")},o.onmouseenter=function(e){n||(a.style.display="block"),dt(a,o)},o.onmouseleave=function(e){n||(a.style.display="none")},this.setText=function(e){n&&(s[0].checked=Ee,s[1].checked=ve,s[2].checked=ge,s[3].checked=be,l.style.marginLeft=t-l.getBoundingClientRect().width+"px")}},e.appendChild($.domElement),ee=new function(){this.domElement=document.createElement("div");var e=this.domElement;e.style.position="absolute",e.style.top="2em",e.style.left="50%",e.style.background="rgba(0,0,0,0.5)",e.style.zIndex=8;e.ondragstart=function(e){e.preventDefault()},this.setText=function(t){var i;i=t<1e5?t.toFixed(4)+"km":t<1e8?(t/1e3).toFixed(4)+"Mm":(t/He).toFixed(4)+"AU",e.innerHTML=i,e.style.marginLeft=-e.getBoundingClientRect().width/2+"px"}},e.appendChild(ee.domElement),te=new function(){this.domElement=document.createElement("div");var e=this.domElement;e.style.position="absolute",e.style.top="25%",e.style.left="50%",e.style.fontSize="20px",e.style.fontWeight="bold",e.style.textShadow="0px 0px 5px rgba(0,0,0,1)",e.style.zIndex=20;var t=0;e.ondragstart=function(e){e.preventDefault()},e.onselectstart=function(){return!1},this.setText=function(i){e.innerHTML=i,e.style.display="block",e.style.opacity="1",e.style.marginTop=-e.getBoundingClientRect().height/2+"px",e.style.marginLeft=-e.getBoundingClientRect().width/2+"px",t=5},this.timeStep=function(i){if(t<i)return e.style.display="none",void(t=0);t-=i,e.style.opacity=(t/2).toString()}},e.appendChild(te.domElement),ct.prototype.setVisible=function(e){if(this.visible=e,this.visible){this.valueElement.style.display="block";var t=this.valueElement.getBoundingClientRect();this.valueElement.style.marginLeft=-t.width/2+"px",this.valueElement.style.marginTop=-t.height/2+"px"}else this.valueElement.style.display="none",this.iconMouseOver||(this.title.style.display="none")},oe=new function(){var e=this;ct.call(this,"Scenarios",b,{buttonTop:0,buttonHeight:32,buttonWidth:32,innerTitle:"Scenario Selector"}),this.valueElement.style.border="5px ridge #ffff7f";for(var t=[{title:"Earth orbit",parent:Je,semimajor_axis:1e4/He},{title:"Moon orbit",parent:Ye,semimajor_axis:3e3/He},{title:"Mars orbit",parent:Ke,semimajor_axis:5e3/He},{title:"Venus orbit",parent:Ne,semimajor_axis:1e4/He,ascending_node:Math.PI},{title:"Jupiter orbit",parent:Xe,semimajor_axis:1e5/He}],i=0;i<t.length;i++){var n=document.createElement("div");n.style.margin="15px",n.style.padding="15px",n.style.border="1px solid #ffff00",n.innerHTML=t[i].title,n.onclick=function(t){return function(){var i=t.ascending_node||0,n=t.eccentricity||0,o=t.rotation||function(){var e=ke(0,0,1,i-Math.PI/2);return e.multiply(ke(0,1,0,Math.PI)),e}();Ue.setParent(t.parent),Ue.position=new THREE.Vector3(0,1-n,0).multiplyScalar(t.semimajor_axis).applyQuaternion(o),Ue.quaternion=o.clone(),Ue.quaternion.multiply(ke(1,0,0,-Math.PI/2)),Ue.angularVelocity=new THREE.Vector3,Y.setThrottle(0),Ue.setOrbitingVelocity(t.semimajor_axis,o),Ue.totalDeltaV=0,Ue.ignitionCount=0,re=new Date,de=re,se=re,te.setText("Scenario "+t.title+" Loaded!"),e.title.style.display="none",e.visible=!1,e.valueElement.style.display="none"}}(t[i]),this.valueElement.appendChild(n)}this.setVisible=function(e){ct.prototype.setVisible.call(this,e),this.visible&&[ae,le].map((function(e){e.setVisible(!1)}))}},e.appendChild(oe.domElement),ae=new function(){var e=this;ct.call(this,"Save data",w,{buttonTop:34,buttonHeight:32,buttonWidth:32});var t=document.createElement("div");t.style.border="1px solid #7fff7f",t.style.margin="5px",t.style.padding="5px";var i=document.createElement("div");i.innerHTML="New Save Name";var n=document.createElement("input");n.setAttribute("type","text");var o=document.createElement("button");o.innerHTML="save",o.onclick=function(t){var i=localStorage.getItem("WebGLOrbiterSavedData")?JSON.parse(localStorage.getItem("WebGLOrbiterSavedData")):[];i.push({title:n.value,state:pt()}),localStorage.setItem("WebGLOrbiterSavedData",JSON.stringify(i)),te.setText("Game State Saved!"),e.title.style.display="none",e.visible=!1,e.valueElement.style.display="none"},n.onkeydown=function(e){e.stopPropagation()},t.appendChild(i),t.appendChild(n),t.appendChild(o),this.valueElement.appendChild(t);var a=document.createElement("div");this.valueElement.appendChild(a),this.setVisible=function(t){t&&([oe,le].map((function(e){e.setVisible(!1)})),function(){for(;0<a.children.length;)a.removeChild(a.children[0]);for(var t=localStorage.getItem("WebGLOrbiterSavedData")?JSON.parse(localStorage.getItem("WebGLOrbiterSavedData")):[],i=0;i<t.length;i++){var n=document.createElement("div");n.style.margin="5px",n.style.padding="5px",n.style.border="1px solid #00ff00";var o=document.createElement("div");o.innerHTML=t[i].title,o.style.cssText="width: 100%; margin-right: -32px; display: inline-block; text-align: overflow: auto;",n.appendChild(o);var l=document.createElement("img");l.setAttribute("src",M),l.style.width="20px",l.onclick=function(i){return function(n){t.splice(i,1),localStorage.setItem("WebGLOrbiterSavedData",JSON.stringify(t)),te.setText("Game State Deleted!"),e.title.style.display="none",e.visible=!1,e.valueElement.style.display="none",n.stopPropagation()}}(i),n.appendChild(l),n.onclick=function(i){return function(){i.state=pt(),localStorage.setItem("WebGLOrbiterSavedData",JSON.stringify(t)),te.setText("Game State Saved!"),e.title.style.display="none",e.visible=!1,e.valueElement.style.display="none"}}(t[i]),a.appendChild(n)}}()),ct.prototype.setVisible.call(this,t)}},e.appendChild(ae.domElement),le=new function(){ct.call(this,"Load data",v,{buttonTop:68,buttonHeight:32,buttonWidth:32});var e=this;this.valueElement.style.border="5px ridge #ff7fff";var t=document.createElement("div");this.valueElement.appendChild(t),this.setVisible=function(i){i&&([oe,ae].map((function(e){e.setVisible(!1)})),function(){for(;0<t.children.length;)t.removeChild(t.children[0]);for(var i=localStorage.getItem("WebGLOrbiterSavedData")?JSON.parse(localStorage.getItem("WebGLOrbiterSavedData")):[],n=0;n<i.length;n++){var o=document.createElement("div");o.style.margin="5px",o.style.padding="5px",o.style.border="1px solid #ff00ff";var a=document.createElement("div");a.innerHTML=i[n].title,a.style.cssText="width: 100%; margin-right: -32px; display: inline-block; text-align: overflow: auto;",o.appendChild(a);var l=document.createElement("img");l.setAttribute("src",M),l.style.width="20px",l.onclick=function(t){return function(n){i.splice(t,1),localStorage.setItem("WebGLOrbiterSavedData",JSON.stringify(i)),te.setText("Game State Deleted!"),e.title.style.display="none",e.visible=!1,e.valueElement.style.display="none",n.stopPropagation()}}(n),o.appendChild(l),o.onclick=function(t){return function(){ht(t.state),te.setText("Game State Loaded!"),e.title.style.display="none",e.visible=!1,e.valueElement.style.display="none"}}(i[n]),t.appendChild(o)}}()),ct.prototype.setVisible.call(this,i)}},e.appendChild(le.domElement),window.addEventListener("resize",Ie,!1),window.addEventListener("keydown",qe,!1),window.addEventListener("keyup",De,!1),window.addEventListener("pageshow",(function(){var e=localStorage.getItem("WebGLOrbiterAutoSave");e&&ht(JSON.parse(e))})),window.addEventListener("beforeunload",(function(){localStorage.setItem("WebGLOrbiterAutoSave",JSON.stringify(pt()))})),re=new Date,de=re,se=re}(),function e(){requestAnimationFrame(e),function(){var e=new Date,t=e.getTime()-de.getTime(),n=new Date(re.getTime()+t*Se),o=.001*(n.getTime()-re.getTime());de=e,re=n,U.setDate(n.getFullYear()+"/"+Pe(n.getMonth()+1)+"/"+Pe(n.getDate())+" "+Pe(n.getHours())+":"+Pe(n.getMinutes())+":"+Pe(n.getSeconds())),K.setSpeed(),Z.setText(),$.setText(),te.timeStep(.001*t),i.near=Math.min(1,ie.target.distanceTo(i.position)/10),i.updateProjectionMatrix();function a(e){for(var t=e.children,i=0;i<t.length;){var n=t[i],l=n.position.lengthSq();if(0!==l){var r=n.position.clone().negate().normalize().multiplyScalar(o/100*n.parent.GM/l);if(fe===n&&fe.controllable&&Se<=1&&(we.up&&fe.angularVelocity.add(new THREE.Vector3(0,0,1).applyQuaternion(fe.quaternion).multiplyScalar(1*o/100)),we.down&&fe.angularVelocity.add(new THREE.Vector3(0,0,-1).applyQuaternion(fe.quaternion).multiplyScalar(1*o/100)),we.left&&fe.angularVelocity.add(new THREE.Vector3(0,1,0).applyQuaternion(fe.quaternion).multiplyScalar(1*o/100)),we.right&&fe.angularVelocity.add(new THREE.Vector3(0,-1,0).applyQuaternion(fe.quaternion).multiplyScalar(1*o/100)),we.counterclockwise&&fe.angularVelocity.add(new THREE.Vector3(1,0,0).applyQuaternion(fe.quaternion).multiplyScalar(1*o/100)),we.clockwise&&fe.angularVelocity.add(new THREE.Vector3(-1,0,0).applyQuaternion(fe.quaternion).multiplyScalar(1*o/100)),we.up||we.down||we.left||we.right||we.counterclockwise||we.clockwise||(1e-6<fe.angularVelocity.lengthSq()?fe.angularVelocity.add(fe.angularVelocity.clone().normalize().multiplyScalar(-1*o/100)):fe.angularVelocity.set(0,0,0)),0<fe.throttle)){var s=5e-10*fe.throttle*o/100;fe.velocity.add(new THREE.Vector3(1,0,0).applyQuaternion(fe.quaternion).multiplyScalar(s)),fe.totalDeltaV+=s}var d=r.clone().multiplyScalar(.5),c=n.position.clone().add(n.velocity.clone().multiplyScalar(o/100/2)),p=c.clone().negate().normalize().multiplyScalar(o/100*n.parent.GM/c.lengthSq()),h=n.velocity.clone().add(d);if(n.velocity.add(p),n.position.add(h.multiplyScalar(o/100)),0<n.angularVelocity.lengthSq()){var u=n.angularVelocity.clone().normalize();n.quaternion.multiplyQuaternions(ke(u.x,u.y,u.z,n.angularVelocity.length()*o/100),n.quaternion)}}if(n.controllable){if(n.parent.parent&&n.parent.soi&&1.01*n.parent.soi<n.position.length()){n.position.add(e.position),n.velocity.add(e.velocity),0<=(y=t.indexOf(n))&&t.splice(y,1),n.parent=e.parent,n.parent.children.push(n);continue}for(var m=!1,y=0;y<t.length;y++){var f=t[y];if(f!==n&&(f.soi&&f.position.distanceTo(n.position)<.99*f.soi)){n.position.sub(f.position),n.velocity.sub(f.velocity);var g=t.indexOf(n);0<=g&&t.splice(g,1),n.parent=f,f.children.push(n),m=!0;break}}if(m)continue}a(n),i++}}for(var l=0;l<100;l++)xe&&Y.increment(o/100),Te&&Y.decrement(o/100),a(ce);ce.update();ke(-1,0,0,Math.PI/2);pe.position.copy(ce.model.position),ne.visible=Ee,ie.update();var r=i.position.clone(),s=i.quaternion.clone();ve&&fe&&(i.quaternion.copy(fe.quaternion.clone().multiply(ke(0,1,0,-1*Math.PI/2))),i.position.copy(new THREE.Vector3(0,.2,1).normalize().multiplyScalar(i.position.length()).applyQuaternion(i.quaternion)));var d=i.position.clone();if(i.position.set(0,0,0),G.render(B,i),i.position.copy(d),G.render(O,i),F&&fe&&fe.controllable){var c,p,h=new THREE.Vector3(0,0,1).applyQuaternion(fe.parent.quaternion).cross(fe.position).normalize(),u=new THREE.Quaternion,m=new THREE.Matrix4,y=fe.position.clone().normalize().negate();m.makeBasis(h.clone().cross(y),h,y),u.setFromRotationMatrix(m),F.quaternion.copy(ke(0,1,0,-1*Math.PI/2).multiply(ke(0,0,1,Math.PI)).multiply(fe.quaternion.clone().conjugate()).multiply(u).multiply(ke(1,0,0,Math.PI/2))),F.position.y=-window.innerHeight/2+64,new THREE.Vector3(1,0,0).applyQuaternion(fe.quaternion).dot(fe.velocity)<0?(c=J,N.visible=!1,p=-1):(c=N,J.visible=!1,p=1),c.visible=!0,c.position.y=-window.innerHeight/2+64+p*new THREE.Vector3(0,1,0).applyQuaternion(fe.quaternion).dot(fe.velocity)/fe.velocity.length()*64,c.position.x=p*new THREE.Vector3(0,0,1).applyQuaternion(fe.quaternion).dot(fe.velocity)/fe.velocity.length()*64,i.position.set(0,0,0),i.quaternion.set(1,0,0,0),G.render(Q,A)}i.quaternion.copy(s),i.position.copy(r),fe&&fe.parent?ee.setText(fe.position.length()*He-fe.parent.radius):ee.setText(0)}(),t.update()}()}()}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,