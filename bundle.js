!function(e){var t={};function i(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,i),o.l=!0,o.exports}i.m=e,i.c=t,i.d=function(e,t,n){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(i.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)i.d(n,o,function(t){return e[t]}.bind(null,o));return n},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="",i(i.s=0)}([function(e,t,i){"use strict";i.r(t);var n=i.p+"c542c9e670acf7dd150f01148609482a.png",o=i.p+"0903534682db27dd03c9dba0263ad643.png",a=i.p+"46990c85cd649b70619843a555b3345d.png",l=i.p+"5f08f4fee6db3d4ad6f3b3cbc13dffcc.png",r=i.p+"c0bfef7c4934217b189c009df9d42a8e.png",s=i.p+"3cf13f3b90a3052e7dc75ff247679ee0.png",d=i.p+"48ffe930b952be145bd67bb9bb553c40.jpg",c=i.p+"f6c59da0e169b32276ea9d120b2d83a7.png",p=i.p+"d98a8545f507fb162034fa9d06cdfb72.png",h=i.p+"8153e8068f33d353b6e0d34edce8a763.png",u=i.p+"eef1518820fc0e6e41c21d04e400c383.png",m=i.p+"617d26819b20ea642f9dc2ed225ba5c0.png",y=i.p+"9934fc7e310513e1967f35e98cb66338.png",f=i.p+"c9a829c8a314a8bbcf3bd77b2bd05637.png",g=i.p+"db810c34d55dd5c68eebdb44d13d9100.png",E=i.p+"f68c3b0cf7824e644b8ba01bba09e50c.png",b=i.p+"95bc5e9f590806b4ff7025016f4e3555.png",v=i.p+"bcbafcfa9576c0f07976cc3e1c8b70aa.png",w=i.p+"438d6cd4d119b2dbd787c9ec46bd9da9.png",x=i.p+"0dc2237489e2fecac996663764ddf930.png",T=i.p+"08b4446f4489bff43f4ba80abd365abd.png",M=i.p+"8e9ea6ca84ceb4f1e320506e19a1e8a2.png",H=i.p+"a059c92c97525713cff53fe09db2f593.png",R=i.p+"e95cc5d5de5551f50559002e1713e35c.png",S=i.p+"6198c1ce9003c1f24816ca4ffe53d011.jpg",C=i.p+"24b4343b0a0ddfebabf3f9d1e75b1644.png",k=i.p+"00e79a1eabdbbce2ff8a2da94eeb7ff6.jpg",V=i.p+"ff6c47a2547885b72d4b1470b67a40e9.jpg",L=i.p+"04b62b942b35b72b3d705d568f516777.jpg",I=i.p+"f247fc590e02c428df8c1ab82bda7b52.jpg",P=i.p+"c85875692a5e7b3597bd453be9270327.jpg",q=i.p+"53f370615a82114fe6eba8f794472013.png",D=i.p+"28565d0e33dec1956aeaac0ec053295e.png",W=i.p+"8896fc86681757cab4f1db417cbbc403.png",_=i.p+"444ba38fc532a73de637844f74c3c11d.png",z=i.p+"d1933328c6d26733994f7e317515858b.obj";!function(){var e,t,i,O,G,j,B,Q,A,F,N,J,U,Y,K,X,Z,$,ee,te,ie,ne,oe,ae,le,re,se,de,ce,pe,he,ue=window.innerWidth/2,me=window.innerHeight/2,ye=!1,fe=null,ge=!0,Ee=!1,be=!0,ve=!1,we={up:!1,down:!1,left:!1,right:!1,counterclockwise:!1,clockwise:!1},xe=!1,Te=!1,Me={},He=149597871,Re=13271244e4/He/He/He,Se=1,Ce=Math.PI/180;function ke(e,t,i,n){var o=new THREE.Quaternion;return o.setFromAxisAngle(new THREE.Vector3(e,t,i),n),o}function Ve(e,t,i,n,o,a){this.position=t,this.velocity=new THREE.Vector3,this.quaternion=new THREE.Quaternion,this.angularVelocity=new THREE.Vector3,n&&(this.orbitMaterial=new THREE.LineBasicMaterial({color:n})),this.children=[],this.parent=e,this.GM=o||Re,e&&e.children.push(this),this.radius=1/He,this.controllable=!1,this.throttle=0,this.totalDeltaV=0,this.ignitionCount=0,this.name=a,Me[a]=this}function Le(e){return new THREE.Vector3(e.x,e.y,e.z)}function Ie(){ue=window.innerWidth/2,me=window.innerHeight/2,i.aspect=window.innerWidth/window.innerHeight,i.updateProjectionMatrix(),G.setSize(window.innerWidth,window.innerHeight)}function Pe(e){return e<10?"0"+e:e}function qe(e){var t=String.fromCharCode(e.which||e.keyCode).toLowerCase();switch(t){case"i":if(null===fe)fe=ce.children[0];else{fe.orbit&&(fe.orbit.material=fe.orbitMaterial);var i=fe.children;if(0<i.length)fe=i[0];else{for(var n=!1,o=fe,a=fe.parent;a;a=a.parent){i=a.children;for(var l=0;l<i.length;l++){if(i[l]===o&&l+1<i.length){fe=i[l+1],n=!0;break}}if(n)break;o=a}a||(fe=ce)}}fe.orbit&&(fe.orbit.material=he);break;case"c":ye=!ye;break;case"n":ge=!ge;break;case"g":Ee=!Ee;break;case"h":ve=!ve;break;case"k":be=!be}if(fe&&fe.controllable)switch(t){case"w":we.up=!0;break;case"s":we.down=!0;break;case"q":we.counterclockwise=!0;break;case"e":we.clockwise=!0;break;case"a":we.left=!0;break;case"d":we.right=!0;break;case"z":Y.setThrottle(1);break;case"x":Y.setThrottle(0)}var r=e.which||e.keyCode;(107===r||187===r&&e.shiftKey)&&U.increment(),109!==r&&189!==r||U.decrement(),16===r&&(xe=!0),17===r&&(Te=!0)}function De(e){switch(String.fromCharCode(e.which||e.keyCode).toLowerCase()){case"w":we.up=!1;break;case"s":we.down=!1;break;case"q":we.counterclockwise=!1;break;case"e":we.clockwise=!1;break;case"a":we.left=!1;break;case"d":we.right=!1}var t=e.which||e.keyCode;16===t&&(xe=!1),17===t&&(Te=!1)}Ve.prototype.init=function(){this.ascending_node=Math.random()*Math.PI*2,this.epoch=Math.random(),this.mean_anomaly=Math.random(),this.update()},Ve.prototype.get_eccentric_anomaly=function(e){var t=e-this.epoch,i=2*Math.PI*Math.sqrt(Math.pow(this.semimajor_axis*He,3)/this.parent.GM),n=this.mean_anomaly+2*t*Math.PI/i;return n+this.eccentricity*Math.sin(n)},Ve.prototype.getWorldPosition=function(){return this.parent?this.parent.getWorldPosition().clone().add(this.position):this.position},Ve.prototype.setOrbitingVelocity=function(e,t){this.velocity=new THREE.Vector3(1,0,0).multiplyScalar(Math.sqrt(this.parent.GM*(2/this.position.length()-1/e))).applyQuaternion(t)},Ve.prototype.serialize=function(){return{name:this.name,parent:this.parent?this.parent.name:null,position:this.position,velocity:this.velocity,quaternion:this.quaternion,angularVelocity:this.angularVelocity,totalDeltaV:this.totalDeltaV||void 0,ignitionCount:this.ignitionCount||void 0}},Ve.prototype.serializeTree=function(){var e=[];e.push(this.serialize());for(var t=0;t<this.children.length;t++)e=e.concat(this.children[t].serializeTree());return e},Ve.prototype.deserialize=function(e){this.name=e.name,this.setParent(Me[e.parent]),this.position=Le(e.position),this.velocity=Le(e.velocity),this.quaternion=function(e){return new THREE.Quaternion(e._x,e._y,e._z,e._w)}(e.quaternion),this.angularVelocity=Le(e.angularVelocity),this.totalDeltaV=e.totalDeltaV||0,this.ignitionCount=e.ignitionCount||0},Ve.prototype.setParent=function(e){if(this.parent!==e){if(this.parent){var t=this.parent.children.indexOf(this);0<=t&&this.parent.children.splice(t,1)}this.parent=e,this.parent&&this.parent.children.push(this)}},Ve.prototype.update=function(){function e(e){var t=e.getWorldPosition();return fe&&ye&&t.sub(fe.getWorldPosition()),t.multiplyScalar(100),t}function t(e,t){var n=d.clone().normalize().multiplyScalar(e*o.semimajor_axis*(1-e*o.eccentricity)).sub(o.position).multiplyScalar(100).applyMatrix4(i.matrixWorldInverse).applyProjection(i.projectionMatrix);n.x*=ue,n.y*=me,n.y-=8*e,0<n.z&&n.z<1?(t.position.copy(n),t.visible=!0):t.visible=!1}var n,o=this;if(this.vertex&&this.vertex.copy(e(this)),this.model&&(this.model.position.copy(e(this)),this.model.scale.set(1,1,1).multiplyScalar((n=this,ge?e(n).distanceTo(i.position)/100/n.radius*1e6+1:1)),this.model.quaternion.copy(this.quaternion)),this.parent){var a=this.velocity.clone().cross(this.position),l=this.position.length(),r=this.velocity.length(),s=new THREE.Vector3(0,0,1).cross(a),d=this.position.clone().multiplyScalar(1/this.parent.GM*(r*r-this.parent.GM/l)).sub(this.velocity.clone().multiplyScalar(this.position.dot(this.velocity)/this.parent.GM));this.eccentricity=d.length(),this.inclination=Math.acos(-a.z/a.length()),s.lengthSq()<=1e-40?this.ascending_node=0:(this.ascending_node=Math.acos(s.x/s.length()),s.y<0&&(this.ascending_node=2*Math.PI-this.ascending_node)),this.semimajor_axis=1/(2/l-r*r/this.parent.GM);var c=ke(0,0,1,this.ascending_node-Math.PI/2).multiply(ke(0,1,0,Math.PI-this.inclination)),p=-this.position.dot(this.velocity)/Math.abs(this.position.dot(this.velocity));s.lengthSq()<=1e-40||d.lengthSq()<=1e-40?this.argument_of_perihelion=Math.atan2(-d.y,d.x):(this.argument_of_perihelion=Math.acos(s.dot(d)/s.length()/d.length()),d.z<0&&(this.argument_of_perihelion=2*Math.PI-this.argument_of_perihelion));var h=c.clone().multiply(ke(0,0,1,this.argument_of_perihelion));function u(e){return be?(e*He).toPrecision(10)+" km":e.toFixed(10)+" AU"}if(this===fe&&X.setText('<table class="table1"> <tr><td>e</td><td>'+this.eccentricity.toFixed(10)+"</td></tr> <tr><td>a</td><td>"+u(this.semimajor_axis)+"</td></tr> <tr><td>i</td><td>"+(this.inclination/Math.PI).toFixed(10)+"</td></tr> <tr><td>Omega</td><td>"+(this.ascending_node/Math.PI).toFixed(10)+"</td></tr> <tr><td>w</td><td>"+(this.argument_of_perihelion/Math.PI).toFixed(10)+"</td></tr> <tr><td>Periapsis</td><td>"+u(o.semimajor_axis*(1-o.eccentricity))+"</td></tr> <tr><td>Apoapsis</td><td>"+u(o.semimajor_axis*(1+o.eccentricity))+"</td></tr> <tr><td>head</td><td>"+p.toFixed(5)+"</td></tr></table>"),1<this.eccentricity){this.hyperbolicGeometry||(this.hyperbolicGeometry=new THREE.Geometry);var m=Math.acos(-1/this.eccentricity);this.hyperbolicGeometry.vertices.length=0;for(var y=a.lengthSq(),f=-19;f<20;f++){var g=m*(f<0?-1:1)*Math.sqrt(Math.abs(f)/20);this.hyperbolicGeometry.vertices.push(new THREE.Vector3(Math.sin(g),Math.cos(g),0).multiplyScalar(y/this.parent.GM/(1+this.eccentricity*Math.cos(g))))}this.hyperbolicGeometry.verticesNeedUpdate=!0,this.hyperbolicMesh||(this.hyperbolicMesh=new THREE.Line(this.hyperbolicGeometry,this.orbitMaterial),O.add(this.hyperbolicMesh)),this.hyperbolicMesh.quaternion.copy(h),this.hyperbolicMesh.scale.x=100,this.hyperbolicMesh.scale.y=100,this.hyperbolicMesh.position.copy(this.parent.getWorldPosition()),fe&&ye&&this.hyperbolicMesh.position.sub(fe.getWorldPosition()),this.hyperbolicMesh.position.multiplyScalar(100),this.hyperbolicMesh.visible=!0,this.orbit&&(this.orbit.visible=!1)}else this.hyperbolicMesh&&(this.orbit&&(this.orbit.visible=!0),this.hyperbolicMesh.visible=!1);this.orbit&&(this.orbit.quaternion.copy(h),this.orbit.scale.x=100*this.semimajor_axis*Math.sqrt(1-this.eccentricity*this.eccentricity),this.orbit.scale.y=100*this.semimajor_axis,this.orbit.position.copy(new THREE.Vector3(0,-this.semimajor_axis*this.eccentricity,0).applyQuaternion(h).add(this.parent.getWorldPosition())),fe&&ye&&this.orbit.position.sub(fe.getWorldPosition()),this.orbit.position.multiplyScalar(100)),this.apoapsis&&(this===fe&&0<this.eccentricity&&this.eccentricity<1?t(-1,this.apoapsis):this.apoapsis.visible=!1),this.periapsis&&(this===fe&&0<this.eccentricity?t(1,this.periapsis):this.periapsis.visible=!1)}for(f=0;f<this.children.length;f++){this.children[f].update()}},function(){e=document.getElementById("container"),(i=new THREE.PerspectiveCamera(60,window.innerWidth/window.innerHeight,1,1e4)).position.y=300,i.position.z=1e3,i.up.set(0,0,1),(B=new THREE.Scene).rotation.x=Math.PI/2,(new THREE.TextureLoader).load(S,(function(e){var t=new THREE.SphereGeometry(2,20,20),i=new THREE.MeshBasicMaterial({map:e,overdraw:.5,depthTest:!1,depthWrite:!1,side:THREE.BackSide});i.depthWrite=!1;var n=new THREE.Mesh(t,i);B.add(n)})),A=new THREE.OrthographicCamera(window.innerWidth/-2,window.innerWidth/2,window.innerHeight/2,window.innerHeight/-2,-1e3,1e3),window.addEventListener("resize",(function(){A.left=window.innerWidth/-2,A.right=window.innerWidth/2,A.top=window.innerHeight/2,A.bottom=window.innerHeight/-2,A.updateProjectionMatrix()})),Q=new THREE.Scene,(new THREE.TextureLoader).load(H,(function(e){var t=new THREE.SphereGeometry(64,20,20),i=new THREE.MeshBasicMaterial({map:e,overdraw:.5,depthTest:!1,depthWrite:!1});F=new THREE.Mesh(t,i),Q.add(F);var n=new THREE.SpriteMaterial({map:THREE.ImageUtils.loadTexture(R),depthTest:!1,depthWrite:!1,transparent:!0}),o=new THREE.Sprite(n);o.scale.set(64,32,64),F.add(o)}));var me=new THREE.PlaneGeometry(40,40);N=new THREE.Mesh(me,new THREE.MeshBasicMaterial({map:THREE.ImageUtils.loadTexture(c),color:16777215,side:THREE.DoubleSide,depthTest:!1,depthWrite:!1,transparent:!0})),Q.add(N),J=new THREE.Mesh(me,new THREE.MeshBasicMaterial({map:THREE.ImageUtils.loadTexture(p),color:16777215,side:THREE.DoubleSide,depthTest:!1,depthWrite:!1,transparent:!0})),Q.add(J),O=new THREE.Scene,j=new THREE.Object3D,O.add(j);var xe=new THREE.ParticleSystemMaterial({size:.1}),Te=new THREE.SphereGeometry(695800/He*100,20,20),Le=new THREE.Mesh(Te,xe);j.add(Le),pe=new THREE.PointLight(16777215,1,0,1e-6),O.add(pe),O.add(new THREE.AmbientLight(2105376));for(var We=new THREE.LineBasicMaterial({color:4144959}),_e=new THREE.Geometry,ze=-10;ze<=10;ze++)_e.vertices.push(new THREE.Vector3(-10,ze,0),new THREE.Vector3(10,ze,0));for(ze=-10;ze<=10;ze++)_e.vertices.push(new THREE.Vector3(ze,-10,0),new THREE.Vector3(ze,10,0));ne=new THREE.Object3D;var Oe=new THREE.LineSegments(_e,We);Oe.scale.x=Oe.scale.y=100,ne.add(Oe);var Ge=new THREE.LineSegments(_e,We);function je(e,t){var i=new THREE.LineBasicMaterial({color:t}),n=new THREE.Geometry;n.vertices.push(new THREE.Vector3(0,0,0),e);var o=new THREE.Line(n,i);o.scale.multiplyScalar(100),ne.add(o)}Ge.scale.x=Ge.scale.y=1e4/He*100,ne.add(Ge),je(new THREE.Vector3(100,0,0),16711680),je(new THREE.Vector3(0,100,0),65280),je(new THREE.Vector3(0,0,100),255),O.add(ne);var Be=new THREE.LineBasicMaterial({color:4145023});Ve.prototype.orbitMaterial=Be,he=new THREE.LineBasicMaterial({color:16744447});var Qe=new THREE.Geometry,Ae=new THREE.EllipseCurve(0,0,1,1,0,2*Math.PI,!1,90);function Fe(e,t,i,o,a,l,d,c,p,h,u,m){var y=ke(0,0,1,o-Math.PI/2).multiply(ke(0,1,0,Math.PI-i)).multiply(ke(0,0,1,a)),f=new THREE.Object3D,g=new Ve(c||ce,new THREE.Vector3(0,1-t,0).multiplyScalar(e).applyQuaternion(y),f.position,l,d,m);if(g.model=f,g.radius=h,O.add(f),p)(new THREE.TextureLoader).load(p||P,(function(e){var t=new THREE.SphereGeometry(1,20,20),i=new THREE.MeshLambertMaterial({map:e,color:16777215,shading:THREE.FlatShading,overdraw:.5}),n=new THREE.Mesh(t,i),o=100*(h||6534)/He;n.scale.set(o,o,o),n.rotation.x=Math.PI/2,f.add(n)}));else if(u.modelName){(new THREE.OBJLoader).load(u.modelName,(function(e){var t=100*(h||6534)/He;e.scale.set(t,t,t),f.add(e)}));var E=new THREE.Object3D;f.add(E),E.visible=!1,E.position.x=-60/He,g.blastModel=E;var b,v=new THREE.SpriteMaterial({map:THREE.ImageUtils.loadTexture(n),blending:THREE.AdditiveBlending,depthWrite:!1,transparent:!0}),w=new THREE.Sprite(v);w.position.x=-30/He,w.scale.multiplyScalar(100/He),E.add(w),(b=new THREE.Sprite(v)).position.x=-60/He,b.scale.multiplyScalar(50/He),E.add(b),(b=new THREE.Sprite(v)).position.x=-80/He,b.scale.multiplyScalar(30/He),E.add(b)}u&&u.controllable&&(g.controllable=u.controllable),g.soi=u&&u.soi?u.soi/He:0,g.apoapsis=new THREE.Sprite(new THREE.SpriteMaterial({map:THREE.ImageUtils.loadTexture(r),transparent:!0})),g.apoapsis.scale.set(16,16,16),Q.add(g.apoapsis),g.periapsis=new THREE.Sprite(new THREE.SpriteMaterial({map:THREE.ImageUtils.loadTexture(s),transparent:!0})),g.periapsis.scale.set(16,16,16),Q.add(g.periapsis),g.setOrbitingVelocity(e,y),u&&u.axialTilt&&u.rotationPeriod&&(g.quaternion=ke(1,0,0,u.axialTilt),g.angularVelocity=new THREE.Vector3(0,0,2*Math.PI/u.rotationPeriod).applyQuaternion(g.quaternion)),u&&u.angularVelocity&&(g.angularVelocity=u.angularVelocity),u&&u.quaternion&&(g.quaternion=u.quaternion);var x=new THREE.Line(Qe,g.orbitMaterial);return g.orbit=x,O.add(x),g.init(),g.update(),g}Qe=new THREE.Path(Ae.getPoints(256)).createPointsGeometry(256),(ce=new Ve(null,new THREE.Vector3,null,16777215,Re,"sun")).radius=695800,ce.model=j,Fe(.387098,.20563,7.005*Ce,48.331*Ce,29.124*Ce,4161407,22032/He/He/He,ce,k,2439.7,{soi:2e5},"mercury");var Ne=Fe(.723332,.00677323,3.39458*Ce,76.678*Ce,55.186*Ce,8355647,324859/He/He/He,ce,L,6051.8,{soi:5e5},"mars"),Je=Fe(1,.0167086,0,-11.26064*Ce,114.20783*Ce,4161343,398600/He/He/He,ce,P,6534,{axialTilt:23.4392811*Ce,rotationPeriod:86164.1,soi:5e5},"earth"),Ue=Fe(1e4/He,0,0,0,0,4161407,100/He/He/He,Je,void 0,.1,{modelName:z,controllable:!0},"rocket");Ue.quaternion.multiply(ke(1,0,0,Math.PI/2)).multiply(ke(0,1,0,Math.PI/2));var Ye=Fe(384399/He,.0167086,0,-11.26064*Ce,114.20783*Ce,6250335,4904.8695/He/He/He,Je,C,1737.1,{soi:1e5},"moon"),Ke=Fe(1.523679,.0935,1.85*Ce,49.562*Ce,286.537*Ce,8339263,42828/He/He/He,ce,V,3389.5,{soi:3e5},"mars"),Xe=Fe(5.204267,.048775,1.305*Ce,100.492*Ce,275.066*Ce,8355647,126686534/He/He/He,ce,I,69911,{soi:1e7},"jupiter");fe=Ue,ye=!0,i.position.set(.005,.003,.005);for(var Ze=new THREE.IcosahedronGeometry(1,2),$e=0;$e<Ze.vertices.length;$e++)Ze.vertices[$e].multiplyScalar(.3*(Math.random()-.5)+1);Ze.computeFaceNormals(),Ze.computeVertexNormals();var et=THREE.ImageUtils.loadTexture(d);et.wrapS=THREE.RepeatWrapping,et.wrapT=THREE.RepeatWrapping,et.repeat.set(4,4);var tt=new THREE.MeshLambertMaterial({map:et,color:16756607,shading:THREE.SmoothShading,overdraw:.5});for($e=0;$e<3;$e++){var it=Math.random()*Math.PI*2,nt=new THREE.Vector3;nt.x=.1*(Math.random()-.5),nt.y=.1*(Math.random()-.5)+1,nt.z=.1*(Math.random()-.5),nt.applyQuaternion(ke(0,0,1,it)),nt.multiplyScalar(2.5);var ot=new Ve(ce,nt,void 0,void 0,void 0,"asteroid"+$e);ot.velocity=new THREE.Vector3(.3*(Math.random()-.5)-1,.3*(Math.random()-.5),.3*(Math.random()-.5)).multiplyScalar(Math.sqrt(Re/nt.length())).applyQuaternion(ke(0,0,1,it)),ot.radius=1*Math.random()+.1,ot.model=new THREE.Object3D;var at=new THREE.Mesh(Ze,tt);ot.model.add(at);var lt=100*ot.radius/He;at.scale.set(lt,lt,lt),at.up.set(0,0,1),O.add(ot.model);var rt=new THREE.Line(Qe,ot.orbitMaterial);ot.orbit=rt,O.add(rt),ot.init(),ot.update()}(G=new THREE.WebGLRenderer).setClearColor(0),G.setSize(window.innerWidth,window.innerHeight),G.autoClear=!1,(ie=new THREE.OrbitControls(i,G.domElement)).target.set(0,0,0),ie.noPan=!0,ie.maxDistance=4e3,ie.minDistance=1/He,ie.zoomSpeed=5,ie.update(),e.appendChild(G.domElement),(t=new Stats).domElement.style.position="absolute",t.domElement.style.top="0px",e.appendChild(t.domElement),U=new function(){function e(e){if(fe&&0<fe.throttle)te.setText("You cannot timewarp while accelerating");else{for(var l=0;l<t.length;l++)t[l].src=l<=e?o:a;s.innerHTML="Timescale: x"+i[e],Se=i[e],n=e}}this.domElement=document.createElement("div"),this.domElement.style.position="absolute",this.domElement.style.top="50px",this.domElement.style.background="#7f7f7f",this.domElement.style.zIndex=10;for(var t=[],i=[1,5,10,100,1e3,1e4,1e5,1e6],n=0,l=0;l<i.length;l++){var r=document.createElement("img");r.src=l<=n?o:a,r.style.width="15px",r.style.height="20px",r.number=l,r.addEventListener("click",(function(t){e(this.number)})),this.domElement.appendChild(r),t.push(r)}var s=document.createElement("div");s.innerHTML="Timescale: x1",this.domElement.appendChild(s);var d=document.createElement("div");this.domElement.appendChild(d),this.setDate=function(e){d.innerHTML=e},this.increment=function(){fe&&0<fe.throttle?te.setText("You cannot timewarp while accelerating"):(n+1<i.length&&n++,e(n))},this.decrement=function(){0<=n-1&&n--,e(n)}},e.appendChild(U.domElement),Y=new function(){function e(e){1<Se&&0<e?te.setText("You cannot accelerate while timewarping"):t(e)}function t(e){var t=n.getBoundingClientRect(),i=r.getBoundingClientRect(),o=d.getBoundingClientRect(),a=i.height-o.height;if(d.style.top=(1-e)*a+(i.top-t.top)+"px",0===fe.throttle&&0<e&&fe.ignitionCount++,fe.throttle=e,fe&&fe.blastModel){fe.blastModel.visible=0<fe.throttle;var l=(fe.throttle+.1)/1.1;fe.blastModel.scale.set(l,l,l)}}function i(t){var i=r.getBoundingClientRect(),n=d.getBoundingClientRect(),o=i.height-n.height;e(1-Math.min(o,Math.max(0,t.clientY-i.top-n.height/2))/o)}this.domElement=document.createElement("div"),this.domElement.style.position="absolute",this.domElement.style.top=window.innerHeight-128+"px",this.domElement.style.left=ue-64-32+"px",this.domElement.style.background="#7f7f7f",this.domElement.style.zIndex=10;var n=this.domElement,o=!1,a=this,l=document.createElement("img");l.src=q,l.style.position="absolute",l.style.left="0px",l.style.top="0px",l.onmousedown=function(e){a.setThrottle(1)},l.ondragstart=function(e){e.preventDefault()},this.domElement.appendChild(l);var r=document.createElement("img");r.src=W,r.style.position="absolute",r.style.left="0px",r.style.top="25px",r.onmousedown=function(e){o=!0,i(e)},r.onmousemove=function(e){o&&1&e.buttons&&i(e)},r.onmouseup=function(e){o=!1},r.draggable=!0,r.ondragstart=function(e){e.preventDefault()},this.domElement.appendChild(r);var s=document.createElement("img");s.src=D,s.style.position="absolute",s.style.left="0px",s.style.top="106px",s.onmousedown=function(e){a.setThrottle(0)},s.ondragstart=function(e){e.preventDefault()},this.domElement.appendChild(s);var d=document.createElement("img");d.src=_,d.style.position="absolute",d.style.top="112px",d.style.left="0px",d.onmousemove=r.onmousemove,d.onmousedown=r.onmousedown,d.onmouseup=r.onmouseup,d.ondragstart=r.ondragstart,this.domElement.appendChild(d),this.increment=function(t){fe&&e(Math.min(1,fe.throttle+t))},this.decrement=function(t){fe&&e(Math.max(0,fe.throttle-t))},this.setThrottle=function(t){e(t)},window.addEventListener("resize",(function(){n.style.top=window.innerHeight-128+"px",n.style.left=window.innerWidth/2-64-32+"px"})),window.addEventListener("load",(function(){t(fe.throttle)}))},e.appendChild(Y.domElement);var st=new function(){function e(){a.style.top=window.innerHeight-128+"px",a.style.left=window.innerWidth/2-64+"px"}function t(e){var t=e||window.event;return t.preventDefault&&t.preventDefault(),t.stopPropagation&&t.stopPropagation(),t.cancelBubble=!0,t.returnValue=!1,!1}function i(e,i,a,r){var s=document.createElement("img");s.src=e,s.width=o,s.height=n,s.style.position="absolute",s.style.top=r+"px",s.style.left=a+"px",s.onmousedown=function(e){we[i]=!0},s.onmouseup=function(e){we[i]=!1,s.style.boxShadow=""},s.ondragstart=function(e){e.preventDefault()},s.ontouchstart=function(e){we[i]=!0,e.preventDefault(),e.stopPropagation()},s.ontouchmove=t,s.ontouchend=function(e){we[i]=!1,s.style.boxShadow="",e.preventDefault(),e.stopPropagation()},s.ontouchcancel=t,l.appendChild(s)}var n=32,o=32;this.domElement=document.createElement("div");var a=this.domElement;this.domElement.style.position="absolute",this.domElement.style.width="128px",this.domElement.style.height="128px",e(),this.domElement.style.zIndex=5;var l=document.createElement("div");l.style.width="100%",l.style.height="100%",l.style.display="none",this.domElement.appendChild(l),this.domElement.onmouseenter=function(e){l.style.display="block"},this.domElement.onmouseleave=function(e){l.style.display="none",up=down=left=right=!1},i(h,"up",64-o/2,0),i(u,"down",64-o/2,128-n),i(m,"left",0,64-n/2),i(y,"right",128-o,64-n/2),i(f,"clockwise",128-o,0),i(g,"counterclockwise",0,0),window.addEventListener("resize",e)};function dt(e,t){var i=e.getBoundingClientRect(),n=t.getBoundingClientRect();e.style.top=n.height-i.height+"px",e.style.right=n.width+"px"}function ct(e,t,i){this.domElement=document.createElement("div");var n=this.domElement;n.style.position="absolute",n.style.textAlign="left",n.style.top=i.buttonTop+"px",n.style.right="0px",n.style.zIndex=7,this.icon=document.createElement("img"),this.icon.src=t,this.icon.style.width=i.buttonWidth+"px",this.icon.style.height=i.buttonHeight+"px";var o=this;this.iconMouseOver=!1,this.icon.ondragstart=function(e){e.preventDefault()},this.icon.onclick=function(e){o.setVisible(!o.visible)},this.icon.onmouseenter=function(e){o.visible||(o.title.style.display="block"),dt(o.title,o.icon),o.iconMouseOver=!0},this.icon.onmouseleave=function(e){o.visible||(o.title.style.display="none"),o.iconMouseOver=!1},n.appendChild(this.icon);var a=document.createElement("div");a.innerHTML=e,a.style.display="none",a.style.position="absolute",a.style.background="rgba(0, 0, 0, 0.5)",a.style.zIndex=20,n.appendChild(a),this.title=a,this.visible=!1;var l=document.createElement("div");l.style.cssText="display: none; position: fixed; left: 50%;width: 300px; top: 50%; background-color: rgba(0,0,0,0.85); border: 5px ridge #7fff7f;font-size: 15px; text-align: center; font-family: Sans-Serif",this.valueElement=l;var r=document.createElement("div");r.style.margin="15px",r.style.padding="15px",r.style.fontSize="25px",r.innerHTML=i.innerTitle||e,this.valueElement.appendChild(r),this.closeIcon=document.createElement("img"),this.closeIcon.src=E,this.closeIcon.style.cssText="position: absolute; top: 0px; right: 0px; border: inset 1px #7f7f7f;",this.closeIcon.ondragstart=function(e){e.preventDefault()},this.closeIcon.onclick=function(e){o.setVisible(!1)},this.valueElement.appendChild(this.closeIcon),this.domElement.appendChild(this.valueElement)}function pt(){return{simTime:re,startTime:se,bodies:ce.serializeTree()}}function ht(e){re=new Date(e.simTime),se=new Date(e.startTime);for(var t=e.bodies,i=0;i<t.length;i++){var n=t[i];n.name in Me&&Me[n.name].deserialize(n)}Y.setThrottle(Ue.throttle)}e.appendChild(st.domElement),K=new function(){function e(){t.style.top=window.innerHeight-128-32+"px",t.style.left=window.innerWidth/2-t.getBoundingClientRect().width/2+"px"}this.domElement=document.createElement("div");var t=this.domElement;t.style.position="absolute",e(),t.style.zIndex=7,t.style.background="rgba(0, 0, 0, 0.5)",window.addEventListener("resize",e);var i=document.createElement("div");i.innerHTML="Orbit",t.appendChild(i);var n=document.createElement("div");t.appendChild(n),this.setSpeed=function(){if(fe){var e=fe.velocity.length()*He;n.innerHTML=e<1?(1e3*e).toFixed(4)+"m/s":e.toFixed(4)+"km/s"}else n.innerHTML="";t.style.left=window.innerWidth/2-t.getBoundingClientRect().width/2+"px"}},e.appendChild(K.domElement),X=new function(){this.domElement=document.createElement("div");var e=this.domElement;e.style.position="absolute",e.style.textAlign="left",e.style.top="120px",e.style.left="0px",e.style.zIndex=7;var t=!1,i=document.createElement("img");i.src=l,e.appendChild(i);var n=document.createElement("div");n.innerHTML="Orbital Elements",n.style.display="none",e.appendChild(n);var o=document.createElement("div");e.appendChild(o),o.id="orbit",o.style.display="none",i.ondragstart=function(e){e.preventDefault()},i.onclick=function(i){(t=!t)?(o.style.display="block",e.style.background="rgba(0, 0, 0, 0.5)"):(o.style.display="none",e.style.background="rgba(0, 0, 0, 0)")},i.onmouseenter=function(e){t||(n.style.display="block")},i.onmouseleave=function(e){t||(n.style.display="none")},this.setText=function(e){o.innerHTML=e}},e.appendChild(X.domElement),Z=new function(){function e(){i.style.left=window.innerWidth-t+"px",dt(a,o)}var t=32;this.domElement=document.createElement("div");var i=this.domElement;i.style.position="absolute",i.style.textAlign="left",i.style.top="120px",i.style.left="0px",i.style.zIndex=7;var n=!1,o=document.createElement("img");o.src=x,o.style.width=t+"px",o.style.height="32px",i.appendChild(o);var a=document.createElement("div");a.innerHTML="Statistics",a.style.display="none",a.style.position="absolute",a.style.top="120px",a.style.background="rgba(0, 0, 0, 0.5)",a.style.zIndex=20,i.appendChild(a);var l=document.createElement("div");i.appendChild(l),l.style.display="none",l.style.position="absolute",l.style.background="rgba(0, 0, 0, 0.5)",l.style.border="3px ridge #7f3f3f",l.style.padding="3px";for(var r=[],s=0;s<3;s++){var d=document.createElement("div");d.innerHTML=["Mission Time","Delta-V","Ignition&nbsp;Count"][s],d.style.fontWeight="bold",d.style.paddingRight="1em",l.appendChild(d);var c=document.createElement("div");c.style.textAlign="right",r.push(c),l.appendChild(c)}e(),window.addEventListener("resize",e),o.ondragstart=function(e){e.preventDefault()},o.onclick=function(e){(n=!n)?(l.style.display="block",i.style.background="rgba(0, 0, 0, 0.5)"):(l.style.display="none",i.style.background="rgba(0, 0, 0, 0)",$.domElement.style.top=i.getBoundingClientRect().bottom+"px")},o.onmouseenter=function(e){n||(a.style.display="block"),dt(a,o)},o.onmouseleave=function(e){n||(a.style.display="none")},this.setText=function(e){if(n)if(fe){var i=(re.getTime()-se.getTime())/1e3,o=Math.floor(i)%60,a=Math.floor(i/60)%60,s=Math.floor(i/60/60)%24,d=Math.floor(i/60/60/24);r[0].innerHTML=d+"d "+Pe(s)+":"+Pe(a)+":"+Pe(o);var c,p=fe.totalDeltaV*He;c=p<10?(1e3*p).toFixed(1)+"m/s":p.toFixed(4)+"km/s",r[1].innerHTML=c,r[2].innerHTML=fe.ignitionCount,l.style.marginLeft=t-l.getBoundingClientRect().width+"px",$.domElement.style.top=l.getBoundingClientRect().bottom+"px"}else r[3].innerHTML=r[2]=""}},e.appendChild(Z.domElement),$=new function(){function e(){i.style.left=window.innerWidth-t+"px",dt(a,o)}var t=32;this.domElement=document.createElement("div");var i=this.domElement;i.style.position="absolute",i.style.textAlign="left",i.style.top="154px",i.style.left="0px",i.style.zIndex=7;var n=!1,o=document.createElement("img");o.src=T,o.style.width=t+"px",o.style.height="32px",i.appendChild(o);var a=document.createElement("div");a.innerHTML="Settings",a.style.display="none",a.style.position="absolute",a.style.background="rgba(0, 0, 0, 0.5)",a.style.zIndex=20,i.appendChild(a);var l=document.createElement("div");i.appendChild(l),l.style.display="none",l.style.position="absolute",l.style.background="rgba(0, 0, 0, 0.5)",l.style.border="3px ridge #7f3f3f",l.style.padding="3px";for(var r=[function(){Ee=!Ee},function(){ve=!ve},function(){ge=!ge},function(){be=!be}],s=[],d=0;d<r.length;d++){var c=document.createElement("div"),p=document.createElement("input");p.type="checkbox",p.onclick=r[d];var h="settings_check_"+d;p.setAttribute("id",h),c.appendChild(p),s.push(p);var u=document.createElement("label");u.setAttribute("for",h),u.innerHTML=["Show&nbsp;grid&nbsp;(G)","Chase&nbsp;camera&nbsp;(H)","Nonlinear&nbsp;scale&nbsp;(N)","Units in KM&nbsp;(K)"][d],c.appendChild(u),c.style.fontWeight="bold",c.style.paddingRight="1em",c.style.whiteSpace="nowrap",l.appendChild(c)}e(),window.addEventListener("resize",e),o.ondragstart=function(e){e.preventDefault()},o.onclick=function(e){(n=!n)?(l.style.display="block",i.style.background="rgba(0, 0, 0, 0.5)"):(l.style.display="none",i.style.background="rgba(0, 0, 0, 0)")},o.onmouseenter=function(e){n||(a.style.display="block"),dt(a,o)},o.onmouseleave=function(e){n||(a.style.display="none")},this.setText=function(e){n&&(s[0].checked=Ee,s[1].checked=ve,s[2].checked=ge,s[3].checked=be,l.style.marginLeft=t-l.getBoundingClientRect().width+"px")}},e.appendChild($.domElement),ee=new function(){this.domElement=document.createElement("div");var e=this.domElement;e.style.position="absolute",e.style.top="2em",e.style.left="50%",e.style.background="rgba(0,0,0,0.5)",e.style.zIndex=8;e.ondragstart=function(e){e.preventDefault()},this.setText=function(t){var i;i=t<1e5?t.toFixed(4)+"km":t<1e8?(t/1e3).toFixed(4)+"Mm":(t/He).toFixed(4)+"AU",e.innerHTML=i,e.style.marginLeft=-e.getBoundingClientRect().width/2+"px"}},e.appendChild(ee.domElement),te=new function(){this.domElement=document.createElement("div");var e=this.domElement;e.style.position="absolute",e.style.top="25%",e.style.left="50%",e.style.fontSize="20px",e.style.fontWeight="bold",e.style.textShadow="0px 0px 5px rgba(0,0,0,1)",e.style.zIndex=20;var t=0;e.ondragstart=function(e){e.preventDefault()},e.onselectstart=function(){return!1},this.setText=function(i){e.innerHTML=i,e.style.display="block",e.style.opacity="1",e.style.marginTop=-e.getBoundingClientRect().height/2+"px",e.style.marginLeft=-e.getBoundingClientRect().width/2+"px",t=5},this.timeStep=function(i){if(t<i)return e.style.display="none",void(t=0);t-=i,e.style.opacity=(t/2).toString()}},e.appendChild(te.domElement),ct.prototype.setVisible=function(e){if(this.visible=e,this.visible){this.valueElement.style.display="block";var t=this.valueElement.getBoundingClientRect();this.valueElement.style.marginLeft=-t.width/2+"px",this.valueElement.style.marginTop=-t.height/2+"px"}else this.valueElement.style.display="none",this.iconMouseOver||(this.title.style.display="none")},oe=new function(){var e=this;ct.call(this,"Scenarios",b,{buttonTop:0,buttonHeight:32,buttonWidth:32,innerTitle:"Scenario Selector"}),this.valueElement.style.border="5px ridge #ffff7f";for(var t=[{title:"Earth orbit",parent:Je,semimajor_axis:1e4/He},{title:"Moon orbit",parent:Ye,semimajor_axis:3e3/He},{title:"Mars orbit",parent:Ke,semimajor_axis:5e3/He},{title:"Venus orbit",parent:Ne,semimajor_axis:1e4/He,ascending_node:Math.PI},{title:"Jupiter orbit",parent:Xe,semimajor_axis:1e5/He}],i=0;i<t.length;i++){var n=document.createElement("div");n.style.margin="15px",n.style.padding="15px",n.style.border="1px solid #ffff00",n.innerHTML=t[i].title,n.onclick=function(t){return function(){var i=t.ascending_node||0,n=t.eccentricity||0,o=t.rotation||function(){var e=ke(0,0,1,i-Math.PI/2);return e.multiply(ke(0,1,0,Math.PI)),e}();Ue.setParent(t.parent),Ue.position=new THREE.Vector3(0,1-n,0).multiplyScalar(t.semimajor_axis).applyQuaternion(o),Ue.quaternion=o.clone(),Ue.quaternion.multiply(ke(1,0,0,-Math.PI/2)),Ue.angularVelocity=new THREE.Vector3,Y.setThrottle(0),Ue.setOrbitingVelocity(t.semimajor_axis,o),Ue.totalDeltaV=0,Ue.ignitionCount=0,re=new Date,de=re,se=re,te.setText("Scenario "+t.title+" Loaded!"),e.title.style.display="none",e.visible=!1,e.valueElement.style.display="none"}}(t[i]),this.valueElement.appendChild(n)}this.setVisible=function(e){ct.prototype.setVisible.call(this,e),this.visible&&[ae,le].map((function(e){e.setVisible(!1)}))}},e.appendChild(oe.domElement),ae=new function(){var e=this;ct.call(this,"Save data",w,{buttonTop:34,buttonHeight:32,buttonWidth:32});var t=document.createElement("div");t.style.border="1px solid #7fff7f",t.style.margin="5px",t.style.padding="5px";var i=document.createElement("div");i.innerHTML="New Save Name";var n=document.createElement("input");n.setAttribute("type","text");var o=document.createElement("button");o.innerHTML="save",o.onclick=function(t){var i=localStorage.getItem("WebGLOrbiterSavedData")?JSON.parse(localStorage.getItem("WebGLOrbiterSavedData")):[];i.push({title:n.value,state:pt()}),localStorage.setItem("WebGLOrbiterSavedData",JSON.stringify(i)),te.setText("Game State Saved!"),e.title.style.display="none",e.visible=!1,e.valueElement.style.display="none"},n.onkeydown=function(e){e.stopPropagation()},t.appendChild(i),t.appendChild(n),t.appendChild(o),this.valueElement.appendChild(t);var a=document.createElement("div");this.valueElement.appendChild(a),this.setVisible=function(t){t&&([oe,le].map((function(e){e.setVisible(!1)})),function(){for(;0<a.children.length;)a.removeChild(a.children[0]);for(var t=localStorage.getItem("WebGLOrbiterSavedData")?JSON.parse(localStorage.getItem("WebGLOrbiterSavedData")):[],i=0;i<t.length;i++){var n=document.createElement("div");n.style.margin="5px",n.style.padding="5px",n.style.border="1px solid #00ff00";var o=document.createElement("div");o.innerHTML=t[i].title,o.style.cssText="width: 100%; margin-right: -32px; display: inline-block; text-align: overflow: auto;",n.appendChild(o);var l=document.createElement("img");l.setAttribute("src",M),l.style.width="20px",l.onclick=function(i){return function(n){t.splice(i,1),localStorage.setItem("WebGLOrbiterSavedData",JSON.stringify(t)),te.setText("Game State Deleted!"),e.title.style.display="none",e.visible=!1,e.valueElement.style.display="none",n.stopPropagation()}}(i),n.appendChild(l),n.onclick=function(i){return function(){i.state=pt(),localStorage.setItem("WebGLOrbiterSavedData",JSON.stringify(t)),te.setText("Game State Saved!"),e.title.style.display="none",e.visible=!1,e.valueElement.style.display="none"}}(t[i]),a.appendChild(n)}}()),ct.prototype.setVisible.call(this,t)}},e.appendChild(ae.domElement),le=new function(){ct.call(this,"Load data",v,{buttonTop:68,buttonHeight:32,buttonWidth:32});var e=this;this.valueElement.style.border="5px ridge #ff7fff";var t=document.createElement("div");this.valueElement.appendChild(t),this.setVisible=function(i){i&&([oe,ae].map((function(e){e.setVisible(!1)})),function(){for(;0<t.children.length;)t.removeChild(t.children[0]);for(var i=localStorage.getItem("WebGLOrbiterSavedData")?JSON.parse(localStorage.getItem("WebGLOrbiterSavedData")):[],n=0;n<i.length;n++){var o=document.createElement("div");o.style.margin="5px",o.style.padding="5px",o.style.border="1px solid #ff00ff";var a=document.createElement("div");a.innerHTML=i[n].title,a.style.cssText="width: 100%; margin-right: -32px; display: inline-block; text-align: overflow: auto;",o.appendChild(a);var l=document.createElement("img");l.setAttribute("src",M),l.style.width="20px",l.onclick=function(t){return function(n){i.splice(t,1),localStorage.setItem("WebGLOrbiterSavedData",JSON.stringify(i)),te.setText("Game State Deleted!"),e.title.style.display="none",e.visible=!1,e.valueElement.style.display="none",n.stopPropagation()}}(n),o.appendChild(l),o.onclick=function(t){return function(){ht(t.state),te.setText("Game State Loaded!"),e.title.style.display="none",e.visible=!1,e.valueElement.style.display="none"}}(i[n]),t.appendChild(o)}}()),ct.prototype.setVisible.call(this,i)}},e.appendChild(le.domElement),window.addEventListener("resize",Ie,!1),window.addEventListener("keydown",qe,!1),window.addEventListener("keyup",De,!1),window.addEventListener("pageshow",(function(){var e=localStorage.getItem("WebGLOrbiterAutoSave");e&&ht(JSON.parse(e))})),window.addEventListener("beforeunload",(function(){localStorage.setItem("WebGLOrbiterAutoSave",JSON.stringify(pt()))})),re=new Date,de=re,se=re}(),function e(){requestAnimationFrame(e),function(){var e=new Date,t=e.getTime()-de.getTime(),n=new Date(re.getTime()+t*Se),o=.001*(n.getTime()-re.getTime());de=e,re=n,U.setDate(n.getFullYear()+"/"+Pe(n.getMonth()+1)+"/"+Pe(n.getDate())+" "+Pe(n.getHours())+":"+Pe(n.getMinutes())+":"+Pe(n.getSeconds())),K.setSpeed(),Z.setText(),$.setText(),te.timeStep(.001*t),i.near=Math.min(1,ie.target.distanceTo(i.position)/10),i.updateProjectionMatrix();function a(e){for(var t=e.children,i=0;i<t.length;){var n=t[i],l=n.position.lengthSq();if(0!==l){var r=n.position.clone().negate().normalize().multiplyScalar(o/100*n.parent.GM/l);if(fe===n&&fe.controllable&&Se<=1&&(we.up&&fe.angularVelocity.add(new THREE.Vector3(0,0,1).applyQuaternion(fe.quaternion).multiplyScalar(1*o/100)),we.down&&fe.angularVelocity.add(new THREE.Vector3(0,0,-1).applyQuaternion(fe.quaternion).multiplyScalar(1*o/100)),we.left&&fe.angularVelocity.add(new THREE.Vector3(0,1,0).applyQuaternion(fe.quaternion).multiplyScalar(1*o/100)),we.right&&fe.angularVelocity.add(new THREE.Vector3(0,-1,0).applyQuaternion(fe.quaternion).multiplyScalar(1*o/100)),we.counterclockwise&&fe.angularVelocity.add(new THREE.Vector3(1,0,0).applyQuaternion(fe.quaternion).multiplyScalar(1*o/100)),we.clockwise&&fe.angularVelocity.add(new THREE.Vector3(-1,0,0).applyQuaternion(fe.quaternion).multiplyScalar(1*o/100)),we.up||we.down||we.left||we.right||we.counterclockwise||we.clockwise||(1e-6<fe.angularVelocity.lengthSq()?fe.angularVelocity.add(fe.angularVelocity.clone().normalize().multiplyScalar(-1*o/100)):fe.angularVelocity.set(0,0,0)),0<fe.throttle)){var s=5e-10*fe.throttle*o/100;fe.velocity.add(new THREE.Vector3(1,0,0).applyQuaternion(fe.quaternion).multiplyScalar(s)),fe.totalDeltaV+=s}var d=r.clone().multiplyScalar(.5),c=n.position.clone().add(n.velocity.clone().multiplyScalar(o/100/2)),p=c.clone().negate().normalize().multiplyScalar(o/100*n.parent.GM/c.lengthSq()),h=n.velocity.clone().add(d);if(n.velocity.add(p),n.position.add(h.multiplyScalar(o/100)),0<n.angularVelocity.lengthSq()){var u=n.angularVelocity.clone().normalize();n.quaternion.multiplyQuaternions(ke(u.x,u.y,u.z,n.angularVelocity.length()*o/100),n.quaternion)}}if(n.controllable){if(n.parent.parent&&n.parent.soi&&1.01*n.parent.soi<n.position.length()){n.position.add(e.position),n.velocity.add(e.velocity),0<=(y=t.indexOf(n))&&t.splice(y,1),n.parent=e.parent,n.parent.children.push(n);continue}for(var m=!1,y=0;y<t.length;y++){var f=t[y];if(f!==n&&(f.soi&&f.position.distanceTo(n.position)<.99*f.soi)){n.position.sub(f.position),n.velocity.sub(f.velocity);var g=t.indexOf(n);0<=g&&t.splice(g,1),n.parent=f,f.children.push(n),m=!0;break}}if(m)continue}a(n),i++}}for(var l=0;l<100;l++)xe&&Y.increment(o/100),Te&&Y.decrement(o/100),a(ce);ce.update();ke(-1,0,0,Math.PI/2);pe.position.copy(ce.model.position),ne.visible=Ee,ie.update();var r=i.position.clone(),s=i.quaternion.clone();ve&&fe&&(i.quaternion.copy(fe.quaternion.clone().multiply(ke(0,1,0,-1*Math.PI/2))),i.position.copy(new THREE.Vector3(0,.2,1).normalize().multiplyScalar(i.position.length()).applyQuaternion(i.quaternion)));var d=i.position.clone();if(i.position.set(0,0,0),G.render(B,i),i.position.copy(d),G.render(O,i),F&&fe&&fe.controllable){var c,p,h=new THREE.Vector3(0,0,1).applyQuaternion(fe.parent.quaternion).cross(fe.position).normalize(),u=new THREE.Quaternion,m=new THREE.Matrix4,y=fe.position.clone().normalize().negate();m.makeBasis(h.clone().cross(y),h,y),u.setFromRotationMatrix(m),F.quaternion.copy(ke(0,1,0,-1*Math.PI/2).multiply(ke(0,0,1,Math.PI)).multiply(fe.quaternion.clone().conjugate()).multiply(u).multiply(ke(1,0,0,Math.PI/2))),F.position.y=-window.innerHeight/2+64,new THREE.Vector3(1,0,0).applyQuaternion(fe.quaternion).dot(fe.velocity)<0?(c=J,N.visible=!1,p=-1):(c=N,J.visible=!1,p=1),c.visible=!0,c.position.y=-window.innerHeight/2+64+p*new THREE.Vector3(0,1,0).applyQuaternion(fe.quaternion).dot(fe.velocity)/fe.velocity.length()*64,c.position.x=p*new THREE.Vector3(0,0,1).applyQuaternion(fe.quaternion).dot(fe.velocity)/fe.velocity.length()*64,i.position.set(0,0,0),i.quaternion.set(1,0,0,0),G.render(Q,A)}i.quaternion.copy(s),i.position.copy(r),fe&&fe.parent?ee.setText(fe.position.length()*He-fe.parent.radius):ee.setText(0)}(),t.update()}()}()}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vc3JjL2ltYWdlcy9ibGFzdC5wbmciLCJ3ZWJwYWNrOi8vLy4vc3JjL2ltYWdlcy9mb3J3YXJkLnBuZyIsIndlYnBhY2s6Ly8vLi9zcmMvaW1hZ2VzL2ZvcndhcmQtaW5hY3RpdmUucG5nIiwid2VicGFjazovLy8uL3NyYy9pbWFnZXMvb3JiaXRJY29uLnBuZyIsIndlYnBhY2s6Ly8vLi9zcmMvaW1hZ2VzL2Fwb2Fwc2lzLnBuZyIsIndlYnBhY2s6Ly8vLi9zcmMvaW1hZ2VzL3BlcmlhcHNpcy5wbmciLCJ3ZWJwYWNrOi8vLy4vc3JjL2ltYWdlcy9wZXJsaW4uanBnIiwid2VicGFjazovLy8uL3NyYy9pbWFnZXMvcHJvZ3JhZGUucG5nIiwid2VicGFjazovLy8uL3NyYy9pbWFnZXMvcmV0cm9ncmFkZS5wbmciLCJ3ZWJwYWNrOi8vLy4vc3JjL2ltYWdlcy9yb3RhdGUtdXAucG5nIiwid2VicGFjazovLy8uL3NyYy9pbWFnZXMvcm90YXRlLWRvd24ucG5nIiwid2VicGFjazovLy8uL3NyYy9pbWFnZXMvcm90YXRlLWxlZnQucG5nIiwid2VicGFjazovLy8uL3NyYy9pbWFnZXMvcm90YXRlLXJpZ2h0LnBuZyIsIndlYnBhY2s6Ly8vLi9zcmMvaW1hZ2VzL3JvdGF0ZS1jdy5wbmciLCJ3ZWJwYWNrOi8vLy4vc3JjL2ltYWdlcy9yb3RhdGUtY2N3LnBuZyIsIndlYnBhY2s6Ly8vLi9zcmMvaW1hZ2VzL2Nsb3NlSWNvbi5wbmciLCJ3ZWJwYWNrOi8vLy4vc3JjL2ltYWdlcy9tZW51SWNvbi5wbmciLCJ3ZWJwYWNrOi8vLy4vc3JjL2ltYWdlcy9sb2FkSWNvbi5wbmciLCJ3ZWJwYWNrOi8vLy4vc3JjL2ltYWdlcy9zYXZlSWNvbi5wbmciLCJ3ZWJwYWNrOi8vLy4vc3JjL2ltYWdlcy9zdGF0c0ljb24ucG5nIiwid2VicGFjazovLy8uL3NyYy9pbWFnZXMvc2V0dGluZ3NJY29uLnBuZyIsIndlYnBhY2s6Ly8vLi9zcmMvaW1hZ2VzL3RyYXNoY2FuLnBuZyIsIndlYnBhY2s6Ly8vLi9zcmMvaW1hZ2VzL25hdmJhbGwucG5nIiwid2VicGFjazovLy8uL3NyYy9pbWFnZXMvd2F0ZXJtYXJrLnBuZyIsIndlYnBhY2s6Ly8vLi9zcmMvaW1hZ2VzL2hpcHBhcmNvc2N5bDEuanBnIiwid2VicGFjazovLy8uL3NyYy9pbWFnZXMvbW9vbi5wbmciLCJ3ZWJwYWNrOi8vLy4vc3JjL2ltYWdlcy9tZXJjdXJ5LmpwZyIsIndlYnBhY2s6Ly8vLi9zcmMvaW1hZ2VzL21hcnMuanBnIiwid2VicGFjazovLy8uL3NyYy9pbWFnZXMvdmVudXMuanBnIiwid2VicGFjazovLy8uL3NyYy9pbWFnZXMvanVwaXRlci5qcGciLCJ3ZWJwYWNrOi8vLy4vc3JjL2ltYWdlcy9sYW5kX29jZWFuX2ljZV9jbG91ZF8yMDQ4LmpwZyIsIndlYnBhY2s6Ly8vLi9zcmMvaW1hZ2VzL3Rocm90dGxlLW1heC5wbmciLCJ3ZWJwYWNrOi8vLy4vc3JjL2ltYWdlcy90aHJvdHRsZS1taW4ucG5nIiwid2VicGFjazovLy8uL3NyYy9pbWFnZXMvdGhyb3R0bGUtYmFjay5wbmciLCJ3ZWJwYWNrOi8vLy4vc3JjL2ltYWdlcy90aHJvdHRsZS1oYW5kbGUucG5nIiwid2VicGFjazovLy8uL3NyYy9yb2NrZXQub2JqIiwid2VicGFjazovLy8uL3NyYy9vcmJpdGVyLmpzIl0sIm5hbWVzIjpbImluc3RhbGxlZE1vZHVsZXMiLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJleHBvcnRzIiwibW9kdWxlIiwiaSIsImwiLCJtb2R1bGVzIiwiY2FsbCIsIm0iLCJjIiwiZCIsIm5hbWUiLCJnZXR0ZXIiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiciIsIlN5bWJvbCIsInRvU3RyaW5nVGFnIiwidmFsdWUiLCJ0IiwibW9kZSIsIl9fZXNNb2R1bGUiLCJucyIsImNyZWF0ZSIsImtleSIsImJpbmQiLCJuIiwib2JqZWN0IiwicHJvcGVydHkiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsInAiLCJzIiwiY29udGFpbmVyIiwic3RhdHMiLCJjYW1lcmEiLCJzY2VuZSIsInJlbmRlcmVyIiwiZ3JvdXAiLCJiYWNrZ3JvdW5kIiwib3ZlcmxheSIsIm92ZXJsYXlDYW1lcmEiLCJuYXZiYWxsTWVzaCIsInByb2dyYWRlIiwicmV0cm9ncmFkZSIsInRpbWVzY2FsZUNvbnRyb2wiLCJ0aHJvdHRsZUNvbnRyb2wiLCJzcGVlZENvbnRyb2wiLCJvcmJpdGFsRWxlbWVudENvbnRyb2wiLCJzdGF0c0NvbnRyb2wiLCJzZXR0aW5nc0NvbnRyb2wiLCJhbHRpdHVkZUNvbnRyb2wiLCJtZXNzYWdlQ29udHJvbCIsImNhbWVyYUNvbnRyb2xzIiwiZ3JpZHMiLCJzY2VuYXJpb1NlbGVjdG9yQ29udHJvbCIsInNhdmVDb250cm9sIiwibG9hZENvbnRyb2wiLCJzaW1UaW1lIiwic3RhcnRUaW1lIiwicmVhbFRpbWUiLCJzdW4iLCJsaWdodCIsInNlbGVjdGVkT3JiaXRNYXRlcmlhbCIsIndpbmRvd0hhbGZYIiwid2luZG93IiwiaW5uZXJXaWR0aCIsIndpbmRvd0hhbGZZIiwiaW5uZXJIZWlnaHQiLCJjZW50ZXJfc2VsZWN0Iiwic2VsZWN0X29iaiIsIm5saXBzX2VuYWJsZSIsImdyaWRfZW5hYmxlIiwidW5pdHNfa20iLCJzeW5jX3JvdGF0ZSIsImJ1dHRvbnMiLCJ1cCIsImRvd24iLCJsZWZ0IiwicmlnaHQiLCJjb3VudGVyY2xvY2t3aXNlIiwiY2xvY2t3aXNlIiwiYWNjZWxlcmF0ZSIsImRlY2VsZXJhdGUiLCJjZWxlc3RpYWxCb2RpZXMiLCJBVSIsIkdNc3VuIiwidGltZXNjYWxlIiwicmFkX3Blcl9kZWciLCJNYXRoIiwiUEkiLCJBeGlzQW5nbGVRdWF0ZXJuaW9uIiwieCIsInkiLCJ6IiwiYW5nbGUiLCJxIiwiVEhSRUUiLCJRdWF0ZXJuaW9uIiwic2V0RnJvbUF4aXNBbmdsZSIsIlZlY3RvcjMiLCJDZWxlc3RpYWxCb2R5IiwicGFyZW50IiwicG9zaXRpb24iLCJ2ZXJ0ZXgiLCJvcmJpdENvbG9yIiwiR00iLCJ0aGlzIiwidmVsb2NpdHkiLCJxdWF0ZXJuaW9uIiwiYW5ndWxhclZlbG9jaXR5Iiwib3JiaXRNYXRlcmlhbCIsIkxpbmVCYXNpY01hdGVyaWFsIiwiY29sb3IiLCJjaGlsZHJlbiIsInB1c2giLCJyYWRpdXMiLCJjb250cm9sbGFibGUiLCJ0aHJvdHRsZSIsInRvdGFsRGVsdGFWIiwiaWduaXRpb25Db3VudCIsImRlc2VyaWFsaXplVmVjdG9yMyIsImpzb24iLCJvbldpbmRvd1Jlc2l6ZSIsImFzcGVjdCIsInVwZGF0ZVByb2plY3Rpb25NYXRyaXgiLCJzZXRTaXplIiwiemVyb2ZpbGwiLCJ2Iiwib25LZXlEb3duIiwiZXZlbnQiLCJjaGFyIiwiU3RyaW5nIiwiZnJvbUNoYXJDb2RlIiwid2hpY2giLCJrZXlDb2RlIiwidG9Mb3dlckNhc2UiLCJvcmJpdCIsIm1hdGVyaWFsIiwib2JqcyIsImxlbmd0aCIsInNlbGVjdGVkIiwicHJldiIsInNldFRocm90dGxlIiwiY29kZSIsInNoaWZ0S2V5IiwiaW5jcmVtZW50IiwiZGVjcmVtZW50Iiwib25LZXlVcCIsImluaXQiLCJhc2NlbmRpbmdfbm9kZSIsInJhbmRvbSIsImVwb2NoIiwibWVhbl9hbm9tYWx5IiwidXBkYXRlIiwiZ2V0X2VjY2VudHJpY19hbm9tYWx5IiwidGltZSIsInRkIiwicGVyaW9kIiwic3FydCIsInBvdyIsInNlbWltYWpvcl9heGlzIiwibm93X2Fub21hbHkiLCJlY2NlbnRyaWNpdHkiLCJzaW4iLCJnZXRXb3JsZFBvc2l0aW9uIiwiY2xvbmUiLCJhZGQiLCJzZXRPcmJpdGluZ1ZlbG9jaXR5Iiwicm90YXRpb24iLCJtdWx0aXBseVNjYWxhciIsImFwcGx5UXVhdGVybmlvbiIsInNlcmlhbGl6ZSIsInVuZGVmaW5lZCIsInNlcmlhbGl6ZVRyZWUiLCJyZXQiLCJjb25jYXQiLCJkZXNlcmlhbGl6ZSIsInNldFBhcmVudCIsIl94IiwiX3kiLCJfeiIsIl93IiwiZGVzZXJpYWxpemVRdWF0ZXJuaW9uIiwibmV3UGFyZW50IiwiaiIsImluZGV4T2YiLCJzcGxpY2UiLCJ2aXN1YWxQb3NpdGlvbiIsInN1YiIsImNhbGNBcHNlUG9zaXRpb24iLCJwZXJpIiwiYXBzaXMiLCJwZXJzUG9zIiwiZSIsIm5vcm1hbGl6ZSIsInNjb3BlIiwiYXBwbHlNYXRyaXg0IiwibWF0cml4V29ybGRJbnZlcnNlIiwiYXBwbHlQcm9qZWN0aW9uIiwicHJvamVjdGlvbk1hdHJpeCIsImNvcHkiLCJ2aXNpYmxlIiwibW9kZWwiLCJzY2FsZSIsInNldCIsImRpc3RhbmNlVG8iLCJhbmciLCJjcm9zcyIsIk4iLCJkb3QiLCJpbmNsaW5hdGlvbiIsImFjb3MiLCJsZW5ndGhTcSIsInBsYW5lUm90IiwibXVsdGlwbHkiLCJoZWFkaW5nQXBvYXBzaXMiLCJhYnMiLCJhcmd1bWVudF9vZl9wZXJpaGVsaW9uIiwiYXRhbjIiLCJ1bml0Q29udkxlbmd0aCIsImF1IiwidG9QcmVjaXNpb24iLCJ0b0ZpeGVkIiwic2V0VGV4dCIsImh5cGVyYm9saWNHZW9tZXRyeSIsIkdlb21ldHJ5IiwidGhldGFJbmYiLCJ2ZXJ0aWNlcyIsImgyIiwidGhldGEiLCJjb3MiLCJ2ZXJ0aWNlc05lZWRVcGRhdGUiLCJoeXBlcmJvbGljTWVzaCIsIkxpbmUiLCJhcG9hcHNpcyIsInBlcmlhcHNpcyIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJQZXJzcGVjdGl2ZUNhbWVyYSIsIlNjZW5lIiwiVGV4dHVyZUxvYWRlciIsImxvYWQiLCJ0ZXh0dXJlIiwiZ2VvbWV0cnkiLCJTcGhlcmVHZW9tZXRyeSIsIk1lc2hCYXNpY01hdGVyaWFsIiwibWFwIiwib3ZlcmRyYXciLCJkZXB0aFRlc3QiLCJkZXB0aFdyaXRlIiwic2lkZSIsIkJhY2tTaWRlIiwibWVzaCIsIk1lc2giLCJPcnRob2dyYXBoaWNDYW1lcmEiLCJhZGRFdmVudExpc3RlbmVyIiwidG9wIiwiYm90dG9tIiwibmF2YmFsbCIsInNwcml0ZU1hdGVyaWFsIiwiU3ByaXRlTWF0ZXJpYWwiLCJJbWFnZVV0aWxzIiwibG9hZFRleHR1cmUiLCJ0cmFuc3BhcmVudCIsIndhdGVybWFyayIsIlNwcml0ZSIsInNwcml0ZUdlb21ldHJ5IiwiUGxhbmVHZW9tZXRyeSIsIkRvdWJsZVNpZGUiLCJPYmplY3QzRCIsIlBhcnRpY2xlU3lzdGVtTWF0ZXJpYWwiLCJzaXplIiwic2dlb21ldHJ5Iiwic3VuTWVzaCIsIlBvaW50TGlnaHQiLCJBbWJpZW50TGlnaHQiLCJtZXNoTWF0ZXJpYWwiLCJtZXNoR2VvbWV0cnkiLCJMaW5lU2VnbWVudHMiLCJtZXNoMiIsImFkZEF4aXMiLCJheGlzVmVjdG9yIiwiYXhpc1hNYXRlcmlhbCIsImF4aXNYR2VvbWV0cnkiLCJheGlzWCIsIm9yYml0R2VvbWV0cnkiLCJjdXJ2ZSIsIkVsbGlwc2VDdXJ2ZSIsIkFkZFBsYW5ldCIsInBhcmFtcyIsIk1lc2hMYW1iZXJ0TWF0ZXJpYWwiLCJzaGFkaW5nIiwiRmxhdFNoYWRpbmciLCJyYWRpdXNJbkF1IiwibW9kZWxOYW1lIiwiT0JKTG9hZGVyIiwiYmxhc3RHcm91cCIsImJsYXN0TW9kZWwiLCJibGFzdDIiLCJibGVuZGluZyIsIkFkZGl0aXZlQmxlbmRpbmciLCJibGFzdCIsInNvaSIsImF4aWFsVGlsdCIsInJvdGF0aW9uUGVyaW9kIiwib3JiaXRNZXNoIiwiUGF0aCIsImdldFBvaW50cyIsImNyZWF0ZVBvaW50c0dlb21ldHJ5IiwidmVudXMiLCJlYXJ0aCIsInJvY2tldCIsIm1vb24iLCJtYXJzIiwianVwaXRlciIsImFzdGVyb2lkR2VvbWV0cnkiLCJJY29zYWhlZHJvbkdlb21ldHJ5IiwiY29tcHV0ZUZhY2VOb3JtYWxzIiwiY29tcHV0ZVZlcnRleE5vcm1hbHMiLCJhc3Rlcm9pZFRleHR1cmUiLCJwZXJsaW4iLCJ3cmFwUyIsIlJlcGVhdFdyYXBwaW5nIiwid3JhcFQiLCJyZXBlYXQiLCJhc3Rlcm9pZE1hdGVyaWFsIiwiU21vb3RoU2hhZGluZyIsImFzdGVyb2lkIiwic2hhcGUiLCJXZWJHTFJlbmRlcmVyIiwic2V0Q2xlYXJDb2xvciIsImF1dG9DbGVhciIsIk9yYml0Q29udHJvbHMiLCJkb21FbGVtZW50IiwidGFyZ2V0Iiwibm9QYW4iLCJtYXhEaXN0YW5jZSIsIm1pbkRpc3RhbmNlIiwiem9vbVNwZWVkIiwiYXBwZW5kQ2hpbGQiLCJTdGF0cyIsInN0eWxlIiwiY2xpY2tGb3J3YXJkIiwibnVtYmVyIiwiZm9yd2FyZHMiLCJzcmMiLCJ0ZXh0IiwiaW5uZXJIVE1MIiwic2VyaWVzIiwidGltZUluZGV4IiwiY3JlYXRlRWxlbWVudCIsInpJbmRleCIsImZvcndhcmQiLCJ3aWR0aCIsImhlaWdodCIsImRhdGUiLCJzZXREYXRlIiwidXBkYXRlUG9zaXRpb24iLCJwb3MiLCJ2aXN1YWxpemVQb3NpdGlvbiIsImJhY2tSZWN0IiwiZWxlbWVudCIsImdldEJvdW5kaW5nQ2xpZW50UmVjdCIsInJlY3QiLCJ0aHJvdHRsZUJhY2siLCJoYW5kbGVSZWN0IiwiaGFuZGxlIiwibWF4IiwibW92ZVBvc2l0aW9uIiwibWluIiwiY2xpZW50WSIsImRyYWdnaW5nIiwidGhyb3R0bGVNYXgiLCJvbm1vdXNlZG93biIsIm9uZHJhZ3N0YXJ0IiwicHJldmVudERlZmF1bHQiLCJvbm1vdXNlbW92ZSIsIm9ubW91c2V1cCIsImRyYWdnYWJsZSIsInRocm90dGxlTWluIiwiZGVsdGEiLCJyb3RhdGlvbkNvbnRyb2wiLCJyb290RWxlbWVudCIsImFic29yYkV2ZW50XyIsInN0b3BQcm9wYWdhdGlvbiIsImNhbmNlbEJ1YmJsZSIsInJldHVyblZhbHVlIiwiYWRkQXJyb3ciLCJidXR0b24iLCJidXR0b25XaWR0aCIsImJ1dHRvbkhlaWdodCIsImJveFNoYWRvdyIsIm9udG91Y2hzdGFydCIsIm9udG91Y2htb3ZlIiwib250b3VjaGVuZCIsIm9udG91Y2hjYW5jZWwiLCJkaXNwbGF5Iiwib25tb3VzZWVudGVyIiwib25tb3VzZWxlYXZlIiwicmlnaHRUaXRsZVNldFNpemUiLCJ0aXRsZSIsImljb24iLCJpY29uUmVjdCIsIk1lbnVDb250cm9sIiwidGl0bGVTdHJpbmciLCJpY29uU3JjIiwiY29uZmlnIiwidGV4dEFsaWduIiwiYnV0dG9uVG9wIiwiaWNvbk1vdXNlT3ZlciIsIm9uY2xpY2siLCJzZXRWaXNpYmxlIiwidmFsdWVFbGVtZW50IiwiY3NzVGV4dCIsInRpdGxlRWxlbSIsIm1hcmdpbiIsInBhZGRpbmciLCJmb250U2l6ZSIsImlubmVyVGl0bGUiLCJjbG9zZUljb24iLCJzZXJpYWxpemVTdGF0ZSIsImJvZGllcyIsImxvYWRTdGF0ZSIsInN0YXRlIiwiRGF0ZSIsImJvZHkiLCJzZXRTcGVlZCIsIm9yYml0SWNvbiIsImlkIiwic3RhdHNJY29uIiwiYm9yZGVyIiwidmFsdWVFbGVtZW50cyIsInRpdGxlRWxlbWVudCIsImZvbnRXZWlnaHQiLCJwYWRkaW5nUmlnaHQiLCJ2YWx1ZUVsZW1lbnRDaGlsZCIsInRvdGFsU2Vjb25kcyIsImdldFRpbWUiLCJzZWNvbmRzIiwiZmxvb3IiLCJtaW51dGVzIiwiaG91cnMiLCJkYXlzIiwiZGVsdGFWIiwiZGVsdGFWa20iLCJtYXJnaW5MZWZ0Iiwic2V0dGluZ3NJY29uIiwidG9nZ2xlRnVuY3MiLCJjaGVja0VsZW1lbnRzIiwibGluZUVsZW1lbnQiLCJjaGVja2JveCIsInR5cGUiLCJzZXRBdHRyaWJ1dGUiLCJsYWJlbCIsIndoaXRlU3BhY2UiLCJjaGVja2VkIiwidGV4dFNoYWRvdyIsInNob3dUaW1lIiwib25zZWxlY3RzdGFydCIsIm9wYWNpdHkiLCJtYXJnaW5Ub3AiLCJ0aW1lU3RlcCIsImRlbHRhVGltZSIsInRvU3RyaW5nIiwibWVudUljb24iLCJzY2VuYXJpb3MiLCJlbGVtIiwic2NlbmFyaW8iLCJjb250cm9sIiwic2F2ZUljb24iLCJpbnB1dENvbnRhaW5lciIsImlucHV0VGl0bGUiLCJpbnB1dEVsZW1lbnQiLCJpbnB1dEJ1dHRvbiIsInNhdmVEYXRhIiwibG9jYWxTdG9yYWdlIiwiZ2V0SXRlbSIsIkpTT04iLCJwYXJzZSIsInNldEl0ZW0iLCJzdHJpbmdpZnkiLCJvbmtleWRvd24iLCJzYXZlQ29udGFpbmVyIiwicmVtb3ZlQ2hpbGQiLCJsYWJlbEVsZW0iLCJkZWxldGVFbGVtIiwidHJhc2hjYW4iLCJzYXZlIiwidXBkYXRlU2F2ZURhdGFMaXN0IiwibG9hZEljb24iLCJhbmltYXRlIiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwibm93IiwicmVhbERlbHRhVGltZU1pbGxpU2VjIiwiZ2V0RnVsbFllYXIiLCJnZXRNb250aCIsImdldERhdGUiLCJnZXRIb3VycyIsImdldE1pbnV0ZXMiLCJnZXRTZWNvbmRzIiwibmVhciIsInNpbXVsYXRlQm9keSIsImEiLCJzbCIsImFjY2VsIiwibmVnYXRlIiwiZHZlbG8iLCJ2ZWMwIiwiYWNjZWwxIiwidmVsbzEiLCJheGlzIiwibXVsdGlwbHlRdWF0ZXJuaW9ucyIsInNraXAiLCJhaiIsImsiLCJvbGRQb3NpdGlvbiIsIm9sZFF1YXRlcm5pb24iLCJyZW5kZXIiLCJncmFkZSIsImZhY3RvciIsInRhbmdlbnQiLCJxYmFsbCIsIm1hdCIsIk1hdHJpeDQiLCJub3JtYWwiLCJtYWtlQmFzaXMiLCJzZXRGcm9tUm90YXRpb25NYXRyaXgiLCJjb25qdWdhdGUiXSwibWFwcGluZ3MiOiJhQUNFLElBQUlBLEVBQW1CLEdBR3ZCLFNBQVNDLEVBQW9CQyxHQUc1QixHQUFHRixFQUFpQkUsR0FDbkIsT0FBT0YsRUFBaUJFLEdBQVVDLFFBR25DLElBQUlDLEVBQVNKLEVBQWlCRSxHQUFZLENBQ3pDRyxFQUFHSCxFQUNISSxHQUFHLEVBQ0hILFFBQVMsSUFVVixPQU5BSSxFQUFRTCxHQUFVTSxLQUFLSixFQUFPRCxRQUFTQyxFQUFRQSxFQUFPRCxRQUFTRixHQUcvREcsRUFBT0UsR0FBSSxFQUdKRixFQUFPRCxRQUtmRixFQUFvQlEsRUFBSUYsRUFHeEJOLEVBQW9CUyxFQUFJVixFQUd4QkMsRUFBb0JVLEVBQUksU0FBU1IsRUFBU1MsRUFBTUMsR0FDM0NaLEVBQW9CYSxFQUFFWCxFQUFT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SixTQUFVLEVBQ25COFQsR0FBVSxJQUdWRCxFQUFRNWQsRUFDUkMsRUFBVzhKLFNBQVUsRUFDckI4VCxFQUFTLEdBRVZELEVBQU03VCxTQUFVLEVBQ2hCNlQsRUFBTWhhLFNBQVNWLEdBQUs1QixPQUFPRyxZQUFjLEVBcHhEdkIsR0FveEQyQ29jLEVBQVMsSUFBSXZhLE1BQU1HLFFBQVEsRUFBRyxFQUFHLEdBQUd1RSxnQkFBZ0JyRyxHQUFXdUMsWUFBWXFHLElBQUk1SSxHQUFXc0MsVUFBWXRDLEdBQVdzQyxTQUFTZ0MsU0FweERySyxHQXF4RGxCMlgsRUFBTWhhLFNBQVNYLEVBQUk0YSxFQUFTLElBQUl2YSxNQUFNRyxRQUFRLEVBQUcsRUFBRyxHQUFHdUUsZ0JBQWdCckcsR0FBV3VDLFlBQVlxRyxJQUFJNUksR0FBV3NDLFVBQVl0QyxHQUFXc0MsU0FBU2dDLFNBcnhEM0gsR0FzeERsQnpHLEVBQU9vRSxTQUFTc0csSUFBSSxFQUFFLEVBQUUsR0FDeEIxSyxFQUFPMEUsV0FBV2dHLElBQUksRUFBRSxFQUFFLEVBQUUsR0FDNUJ4SyxFQUFTaWUsT0FBUTlkLEVBQVNDLEdBSTNCTixFQUFPMEUsV0FBVzRGLEtBQUs0VCxHQUN2QmxlLEVBQU9vRSxTQUFTa0csS0FBSzJULEdBRWxCOWIsSUFBY0EsR0FBV2dDLE9BQzNCbkQsR0FBZ0I2SyxRQUFRMUosR0FBV2lDLFNBQVNxQyxTQUFXdkQsR0FBS2YsR0FBV2dDLE9BQU9jLFFBRzlFakUsR0FBZ0I2SyxRQUFRLEdBdE16QnNTLEdBQ0FwZSxFQUFNd0gsU0F3VlBpVixHQWwvREMiLCJmaWxlIjoiYnVuZGxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiIFx0Ly8gVGhlIG1vZHVsZSBjYWNoZVxuIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcblxuIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbiBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblxuIFx0XHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcbiBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pIHtcbiBcdFx0XHRyZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0cztcbiBcdFx0fVxuIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuIFx0XHR2YXIgbW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gPSB7XG4gXHRcdFx0aTogbW9kdWxlSWQsXG4gXHRcdFx0bDogZmFsc2UsXG4gXHRcdFx0ZXhwb3J0czoge31cbiBcdFx0fTtcblxuIFx0XHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cbiBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cbiBcdFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuIFx0XHRtb2R1bGUubCA9IHRydWU7XG5cbiBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbiBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuIFx0fVxuXG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcblxuIFx0Ly8gZGVmaW5lIGdldHRlciBmdW5jdGlvbiBmb3IgaGFybW9ueSBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSBmdW5jdGlvbihleHBvcnRzLCBuYW1lLCBnZXR0ZXIpIHtcbiBcdFx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBuYW1lKSkge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBuYW1lLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZ2V0dGVyIH0pO1xuIFx0XHR9XG4gXHR9O1xuXG4gXHQvLyBkZWZpbmUgX19lc01vZHVsZSBvbiBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSBmdW5jdGlvbihleHBvcnRzKSB7XG4gXHRcdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuIFx0XHR9XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gXHR9O1xuXG4gXHQvLyBjcmVhdGUgYSBmYWtlIG5hbWVzcGFjZSBvYmplY3RcbiBcdC8vIG1vZGUgJiAxOiB2YWx1ZSBpcyBhIG1vZHVsZSBpZCwgcmVxdWlyZSBpdFxuIFx0Ly8gbW9kZSAmIDI6IG1lcmdlIGFsbCBwcm9wZXJ0aWVzIG9mIHZhbHVlIGludG8gdGhlIG5zXG4gXHQvLyBtb2RlICYgNDogcmV0dXJuIHZhbHVlIHdoZW4gYWxyZWFkeSBucyBvYmplY3RcbiBcdC8vIG1vZGUgJiA4fDE6IGJlaGF2ZSBsaWtlIHJlcXVpcmVcbiBcdF9fd2VicGFja19yZXF1aXJlX18udCA9IGZ1bmN0aW9uKHZhbHVlLCBtb2RlKSB7XG4gXHRcdGlmKG1vZGUgJiAxKSB2YWx1ZSA9IF9fd2VicGFja19yZXF1aXJlX18odmFsdWUpO1xuIFx0XHRpZihtb2RlICYgOCkgcmV0dXJuIHZhbHVlO1xuIFx0XHRpZigobW9kZSAmIDQpICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgdmFsdWUgJiYgdmFsdWUuX19lc01vZHVsZSkgcmV0dXJuIHZhbHVlO1xuIFx0XHR2YXIgbnMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIobnMpO1xuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobnMsICdkZWZhdWx0JywgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdmFsdWUgfSk7XG4gXHRcdGlmKG1vZGUgJiAyICYmIHR5cGVvZiB2YWx1ZSAhPSAnc3RyaW5nJykgZm9yKHZhciBrZXkgaW4gdmFsdWUpIF9fd2VicGFja19yZXF1aXJlX18uZChucywga2V5LCBmdW5jdGlvbihrZXkpIHsgcmV0dXJuIHZhbHVlW2tleV07IH0uYmluZChudWxsLCBrZXkpKTtcbiBcdFx0cmV0dXJuIG5zO1xuIFx0fTtcblxuIFx0Ly8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubiA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuIFx0XHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cbiBcdFx0XHRmdW5jdGlvbiBnZXREZWZhdWx0KCkgeyByZXR1cm4gbW9kdWxlWydkZWZhdWx0J107IH0gOlxuIFx0XHRcdGZ1bmN0aW9uIGdldE1vZHVsZUV4cG9ydHMoKSB7IHJldHVybiBtb2R1bGU7IH07XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsICdhJywgZ2V0dGVyKTtcbiBcdFx0cmV0dXJuIGdldHRlcjtcbiBcdH07XG5cbiBcdC8vIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbFxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eSkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpOyB9O1xuXG4gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCJcIjtcblxuXG4gXHQvLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbiBcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKF9fd2VicGFja19yZXF1aXJlX18ucyA9IDApO1xuIiwiZXhwb3J0IGRlZmF1bHQgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcImM1NDJjOWU2NzBhY2Y3ZGQxNTBmMDExNDg2MDk0ODJhLnBuZ1wiOyIsImV4cG9ydCBkZWZhdWx0IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCIwOTAzNTM0NjgyZGIyN2RkMDNjOWRiYTAyNjNhZDY0My5wbmdcIjsiLCJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiNDY5OTBjODVjZDY0OWI3MDYxOTg0M2E1NTViMzM0NWQucG5nXCI7IiwiZXhwb3J0IGRlZmF1bHQgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcIjVmMDhmNGZlZTZkYjNkNGFkNmYzYjNjYmMxM2RmZmNjLnBuZ1wiOyIsImV4cG9ydCBkZWZhdWx0IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJjMGJmZWY3YzQ5MzQyMTdiMTg5YzAwOWRmOWQ0MmE4ZS5wbmdcIjsiLCJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiM2NmMTNmM2I5MGEzMDUyZTdkYzc1ZmYyNDc2NzllZTAucG5nXCI7IiwiZXhwb3J0IGRlZmF1bHQgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcIjQ4ZmZlOTMwYjk1MmJlMTQ1YmQ2N2JiOWJiNTUzYzQwLmpwZ1wiOyIsImV4cG9ydCBkZWZhdWx0IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJmNmM1OWRhMGUxNjliMzIyNzZlYTlkMTIwYjJkODNhNy5wbmdcIjsiLCJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiZDk4YTg1NDVmNTA3ZmIxNjIwMzRmYTlkMDZjZGZiNzIucG5nXCI7IiwiZXhwb3J0IGRlZmF1bHQgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcIjgxNTNlODA2OGYzM2QzNTNiNmUwZDM0ZWRjZThhNzYzLnBuZ1wiOyIsImV4cG9ydCBkZWZhdWx0IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJlZWYxNTE4ODIwZmMwZTZlNDFjMjFkMDRlNDAwYzM4My5wbmdcIjsiLCJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiNjE3ZDI2ODE5YjIwZWE2NDJmOWRjMmVkMjI1YmE1YzAucG5nXCI7IiwiZXhwb3J0IGRlZmF1bHQgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcIjk5MzRmYzdlMzEwNTEzZTE5NjdmMzVlOThjYjY2MzM4LnBuZ1wiOyIsImV4cG9ydCBkZWZhdWx0IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJjOWE4MjljOGEzMTRhOGJiY2YzYmQ3N2IyYmQwNTYzNy5wbmdcIjsiLCJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiZGI4MTBjMzRkNTVkZDVjNjhlZWJkYjQ0ZDEzZDkxMDAucG5nXCI7IiwiZXhwb3J0IGRlZmF1bHQgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcImY2OGMzYjBjZjc4MjRlNjQ0YjhiYTAxYmJhMDllNTBjLnBuZ1wiOyIsImV4cG9ydCBkZWZhdWx0IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCI5NWJjNWU5ZjU5MDgwNmI0ZmY3MDI1MDE2ZjRlMzU1NS5wbmdcIjsiLCJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiYmNiYWZjZmE5NTc2YzBmMDc5NzZjYzNlMWM4YjcwYWEucG5nXCI7IiwiZXhwb3J0IGRlZmF1bHQgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcIjQzOGQ2Y2Q0ZDExOWIyZGJkNzg3YzllYzQ2YmQ5ZGE5LnBuZ1wiOyIsImV4cG9ydCBkZWZhdWx0IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCIwZGMyMjM3NDg5ZTJmZWNhYzk5NjY2Mzc2NGRkZjkzMC5wbmdcIjsiLCJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiMDhiNDQ0NmY0NDg5YmZmNDNmNGJhODBhYmQzNjVhYmQucG5nXCI7IiwiZXhwb3J0IGRlZmF1bHQgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcIjhlOWVhNmNhODRjZWI0ZjFlMzIwNTA2ZTE5YTFlOGEyLnBuZ1wiOyIsImV4cG9ydCBkZWZhdWx0IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJhMDU5YzkyYzk3NTI1NzEzY2ZmNTNmZTA5ZGIyZjU5My5wbmdcIjsiLCJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiZTk1Y2M1ZDVkZTU1NTFmNTA1NTkwMDJlMTcxM2UzNWMucG5nXCI7IiwiZXhwb3J0IGRlZmF1bHQgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcIjYxOThjMWNlOTAwM2MxZjI0ODE2Y2E0ZmZlNTNkMDExLmpwZ1wiOyIsImV4cG9ydCBkZWZhdWx0IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCIyNGI0MzQzYjBhMGRkZmViYWJmM2Y5ZDFlNzViMTY0NC5wbmdcIjsiLCJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiMDBlNzlhMWVhYmRiYmNlMmZmOGEyZGE5NGVlYjdmZjYuanBnXCI7IiwiZXhwb3J0IGRlZmF1bHQgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcImZmNmM0N2EyNTQ3ODg1YjcyZDRiMTQ3MGI2N2E0MGU5LmpwZ1wiOyIsImV4cG9ydCBkZWZhdWx0IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCIwNGI2MmI5NDJiMzViNzJiM2Q3MDVkNTY4ZjUxNjc3Ny5qcGdcIjsiLCJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiZjI0N2ZjNTkwZTAyYzQyOGRmOGMxYWI4MmJkYTdiNTIuanBnXCI7IiwiZXhwb3J0IGRlZmF1bHQgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcImM4NTg3NTY5MmE1ZTdiMzU5N2JkNDUzYmU5MjcwMzI3LmpwZ1wiOyIsImV4cG9ydCBkZWZhdWx0IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCI1M2YzNzA2MTVhODIxMTRmZTZlYmE4Zjc5NDQ3MjAxMy5wbmdcIjsiLCJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiMjg1NjVkMGUzM2RlYzE5NTZhZWFhYzBlYzA1MzI5NWUucG5nXCI7IiwiZXhwb3J0IGRlZmF1bHQgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcIjg4OTZmYzg2NjgxNzU3Y2FiNGYxZGI0MTdjYmJjNDAzLnBuZ1wiOyIsImV4cG9ydCBkZWZhdWx0IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCI0NDRiYTM4ZmM1MzJhNzNkZTYzNzg0NGY3NGMzYzExZC5wbmdcIjsiLCJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiZDE5MzMzMjhjNmQyNjczMzk5NGY3ZTMxNzUxNTg1OGIub2JqXCI7IiwiaW1wb3J0IGJsYXN0VXJsIGZyb20gJy4vaW1hZ2VzL2JsYXN0LnBuZyc7XHJcbmltcG9ydCBmb3J3YXJkQWN0aXZlVXJsIGZyb20gJy4vaW1hZ2VzL2ZvcndhcmQucG5nJztcclxuaW1wb3J0IGZvcndhcmRJbmFjdGl2ZVVybCBmcm9tICcuL2ltYWdlcy9mb3J3YXJkLWluYWN0aXZlLnBuZyc7XHJcbmltcG9ydCBvcmJpdEljb25VcmwgZnJvbSAnLi9pbWFnZXMvb3JiaXRJY29uLnBuZyc7XHJcbmltcG9ydCBhcG9hcHNpc1VybCBmcm9tICcuL2ltYWdlcy9hcG9hcHNpcy5wbmcnO1xyXG5pbXBvcnQgcGVyaWFwc2lzVXJsIGZyb20gJy4vaW1hZ2VzL3BlcmlhcHNpcy5wbmcnO1xyXG5pbXBvcnQgcGVybGluVXJsIGZyb20gJy4vaW1hZ2VzL3Blcmxpbi5qcGcnO1xyXG5pbXBvcnQgcHJvZ3JhZGVVcmwgZnJvbSAnLi9pbWFnZXMvcHJvZ3JhZGUucG5nJztcclxuaW1wb3J0IHJldHJvZ3JhZGVVcmwgZnJvbSAnLi9pbWFnZXMvcmV0cm9ncmFkZS5wbmcnO1xyXG5pbXBvcnQgcm90YXRlVXBVcmwgZnJvbSAnLi9pbWFnZXMvcm90YXRlLXVwLnBuZyc7XHJcbmltcG9ydCByb3RhdGVEb3duVXJsIGZyb20gJy4vaW1hZ2VzL3JvdGF0ZS1kb3duLnBuZyc7XHJcbmltcG9ydCByb3RhdGVMZWZ0VXJsIGZyb20gJy4vaW1hZ2VzL3JvdGF0ZS1sZWZ0LnBuZyc7XHJcbmltcG9ydCByb3RhdGVSaWdodFVybCBmcm9tICcuL2ltYWdlcy9yb3RhdGUtcmlnaHQucG5nJztcclxuaW1wb3J0IHJvdGF0ZUN3VXJsIGZyb20gJy4vaW1hZ2VzL3JvdGF0ZS1jdy5wbmcnO1xyXG5pbXBvcnQgcm90YXRlQ2N3VXJsIGZyb20gJy4vaW1hZ2VzL3JvdGF0ZS1jY3cucG5nJztcclxuaW1wb3J0IGNsb3NlSWNvblVybCBmcm9tICcuL2ltYWdlcy9jbG9zZUljb24ucG5nJztcclxuaW1wb3J0IG1lbnVJY29uVXJsIGZyb20gJy4vaW1hZ2VzL21lbnVJY29uLnBuZyc7XHJcbmltcG9ydCBsb2FkSWNvblVybCBmcm9tICcuL2ltYWdlcy9sb2FkSWNvbi5wbmcnO1xyXG5pbXBvcnQgc2F2ZUljb25VcmwgZnJvbSAnLi9pbWFnZXMvc2F2ZUljb24ucG5nJztcclxuaW1wb3J0IHN0YXRzSWNvblVybCBmcm9tICcuL2ltYWdlcy9zdGF0c0ljb24ucG5nJztcclxuaW1wb3J0IHNldHRpbmdzSWNvblVybCBmcm9tICcuL2ltYWdlcy9zZXR0aW5nc0ljb24ucG5nJztcclxuaW1wb3J0IHRyYXNoY2FuVXJsIGZyb20gJy4vaW1hZ2VzL3RyYXNoY2FuLnBuZyc7XHJcbmltcG9ydCBuYXZiYWxsVXJsIGZyb20gJy4vaW1hZ2VzL25hdmJhbGwucG5nJztcclxuaW1wb3J0IHdhdGVybWFya1VybCBmcm9tICcuL2ltYWdlcy93YXRlcm1hcmsucG5nJztcclxuaW1wb3J0IGJhY2tncm91bmRVcmwgZnJvbSAnLi9pbWFnZXMvaGlwcGFyY29zY3lsMS5qcGcnO1xyXG5pbXBvcnQgbW9vblVybCBmcm9tICcuL2ltYWdlcy9tb29uLnBuZyc7XHJcbmltcG9ydCBtZXJjdXJ5VXJsIGZyb20gJy4vaW1hZ2VzL21lcmN1cnkuanBnJztcclxuaW1wb3J0IG1hcnNVcmwgZnJvbSAnLi9pbWFnZXMvbWFycy5qcGcnO1xyXG5pbXBvcnQgdmVudXNVcmwgZnJvbSAnLi9pbWFnZXMvdmVudXMuanBnJztcclxuaW1wb3J0IGp1cGl0ZXJVcmwgZnJvbSAnLi9pbWFnZXMvanVwaXRlci5qcGcnO1xyXG5pbXBvcnQgZWFydGhVcmwgZnJvbSAnLi9pbWFnZXMvbGFuZF9vY2Vhbl9pY2VfY2xvdWRfMjA0OC5qcGcnO1xyXG5pbXBvcnQgdGhyb3R0bGVNYXhVcmwgZnJvbSAnLi9pbWFnZXMvdGhyb3R0bGUtbWF4LnBuZyc7XHJcbmltcG9ydCB0aHJvdHRsZU1pblVybCBmcm9tICcuL2ltYWdlcy90aHJvdHRsZS1taW4ucG5nJztcclxuaW1wb3J0IHRocm90dGxlQmFja1VybCBmcm9tICcuL2ltYWdlcy90aHJvdHRsZS1iYWNrLnBuZyc7XHJcbmltcG9ydCB0aHJvdHRsZUhhbmRsZVVybCBmcm9tICcuL2ltYWdlcy90aHJvdHRsZS1oYW5kbGUucG5nJztcclxuaW1wb3J0IHJvY2tldE1vZGVsVXJsIGZyb20gJy4vcm9ja2V0Lm9iaic7XHJcblxyXG47KGZ1bmN0aW9uKCl7XHJcbid1c2Ugc3RyaWN0J1xyXG52YXIgY29udGFpbmVyLCBzdGF0cztcclxudmFyIGNhbWVyYSwgc2NlbmUsIHJlbmRlcmVyO1xyXG52YXIgZ3JvdXA7XHJcbnZhciBiYWNrZ3JvdW5kO1xyXG52YXIgb3ZlcmxheSwgb3ZlcmxheUNhbWVyYTtcclxudmFyIG5hdmJhbGxNZXNoLCBwcm9ncmFkZSwgcmV0cm9ncmFkZTtcclxudmFyIHRpbWVzY2FsZUNvbnRyb2w7XHJcbnZhciB0aHJvdHRsZUNvbnRyb2w7XHJcbnZhciBzcGVlZENvbnRyb2w7XHJcbnZhciBvcmJpdGFsRWxlbWVudENvbnRyb2w7XHJcbnZhciBzdGF0c0NvbnRyb2w7XHJcbnZhciBzZXR0aW5nc0NvbnRyb2w7XHJcbnZhciBhbHRpdHVkZUNvbnRyb2w7XHJcbnZhciBtZXNzYWdlQ29udHJvbDtcclxudmFyIG1vdXNlWCA9IDAsIG1vdXNlWSA9IDA7XHJcbnZhciBjYW1lcmFDb250cm9scztcclxudmFyIGdyaWRzO1xyXG52YXIgc2NlbmFyaW9TZWxlY3RvckNvbnRyb2w7XHJcbnZhciBzYXZlQ29udHJvbDtcclxudmFyIGxvYWRDb250cm9sO1xyXG5cclxudmFyIHdpbmRvd0hhbGZYID0gd2luZG93LmlubmVyV2lkdGggLyAyO1xyXG52YXIgd2luZG93SGFsZlkgPSB3aW5kb3cuaW5uZXJIZWlnaHQgLyAyO1xyXG52YXIgdmlld1NjYWxlID0gMTAwO1xyXG5cclxudmFyIHNpbVRpbWUsIHN0YXJ0VGltZTtcclxudmFyIHJlYWxUaW1lO1xyXG52YXIgY2VudGVyX3NlbGVjdCA9IGZhbHNlO1xyXG52YXIgc2VsZWN0X2lkeCA9IDA7XHJcbnZhciBzZWxlY3Rfb2JqID0gbnVsbDtcclxudmFyIG5saXBzX2VuYWJsZSA9IHRydWU7XHJcbnZhciBncmlkX2VuYWJsZSA9IGZhbHNlO1xyXG52YXIgdW5pdHNfa20gPSB0cnVlO1xyXG52YXIgc3luY19yb3RhdGUgPSBmYWxzZTtcclxuXHJcbnZhciBidXR0b25zID0ge1xyXG5cdHVwOiBmYWxzZSxcclxuXHRkb3duOiBmYWxzZSxcclxuXHRsZWZ0OiBmYWxzZSxcclxuXHRyaWdodDogZmFsc2UsXHJcblx0Y291bnRlcmNsb2Nrd2lzZTogZmFsc2UsXHJcblx0Y2xvY2t3aXNlOiBmYWxzZSxcclxufTtcclxudmFyIGFjY2VsZXJhdGUgPSBmYWxzZTtcclxudmFyIGRlY2VsZXJhdGUgPSBmYWxzZTtcclxuXHJcbnZhciBzdW47XHJcbnZhciBsaWdodDtcclxuXHJcbnZhciBjZWxlc3RpYWxCb2RpZXMgPSB7fTtcclxuXHJcbnZhciBzZWxlY3RlZE9yYml0TWF0ZXJpYWw7XHJcblxyXG52YXIgQVUgPSAxNDk1OTc4NzE7IC8vIEFzdHJvbm9taWNhbCB1bml0IGluIGtpbG9tZXRlcnNcclxudmFyIEdNc3VuID0gMS4zMjcxMjQ0MDBlMTEgLyBBVSAvIEFVLyBBVTsgLy8gUHJvZHVjdCBvZiBncmF2aXRhdGlvbmFsIGNvbnN0YW50IChHKSBhbmQgU3VuJ3MgbWFzcyAoTXN1bilcclxudmFyIGVwc2lsb24gPSAxZS00MDsgLy8gRG9lc24ndCB0aGUgbWFjaGluZSBlcHNpbG9uIGRlcGVuZCBvbiBicm93c2VycyE/P1xyXG52YXIgdGltZXNjYWxlID0gMWUwOyAvLyBUaGlzIGlzIG5vdCBhIGNvbnN0YW50OyBpdCBjYW4gYmUgY2hhbmdlZCBieSB0aGUgdXNlclxyXG52YXIgcmFkX3Blcl9kZWcgPSBNYXRoLlBJIC8gMTgwOyAvLyBSYWRpYW5zIHBlciBkZWdyZWVzXHJcbnZhciBuYXZiYWxsUmFkaXVzID0gNjQ7XHJcblxyXG5mdW5jdGlvbiBBeGlzQW5nbGVRdWF0ZXJuaW9uKHgsIHksIHosIGFuZ2xlKXtcclxuXHR2YXIgcSA9IG5ldyBUSFJFRS5RdWF0ZXJuaW9uKCk7XHJcblx0cS5zZXRGcm9tQXhpc0FuZ2xlKG5ldyBUSFJFRS5WZWN0b3IzKHgsIHksIHopLCBhbmdsZSk7XHJcblx0cmV0dXJuIHE7XHJcbn1cclxuXHJcbi8vIENlbGVzdGlhbEJvZHkgY2xhc3NcclxuZnVuY3Rpb24gQ2VsZXN0aWFsQm9keShwYXJlbnQsIHBvc2l0aW9uLCB2ZXJ0ZXgsIG9yYml0Q29sb3IsIEdNLCBuYW1lKXtcclxuXHR0aGlzLnBvc2l0aW9uID0gcG9zaXRpb247XHJcblx0dGhpcy52ZWxvY2l0eSA9IG5ldyBUSFJFRS5WZWN0b3IzKCk7XHJcblx0dGhpcy5xdWF0ZXJuaW9uID0gbmV3IFRIUkVFLlF1YXRlcm5pb24oKTtcclxuXHR0aGlzLmFuZ3VsYXJWZWxvY2l0eSA9IG5ldyBUSFJFRS5WZWN0b3IzKCk7XHJcblx0aWYob3JiaXRDb2xvcikgdGhpcy5vcmJpdE1hdGVyaWFsID0gbmV3IFRIUkVFLkxpbmVCYXNpY01hdGVyaWFsKHtjb2xvcjogb3JiaXRDb2xvcn0pO1xyXG5cdHRoaXMuY2hpbGRyZW4gPSBbXTtcclxuXHR0aGlzLnBhcmVudCA9IHBhcmVudDtcclxuXHR0aGlzLkdNID0gR00gfHwgR01zdW47XHJcblx0aWYocGFyZW50KSBwYXJlbnQuY2hpbGRyZW4ucHVzaCh0aGlzKTtcclxuXHR0aGlzLnJhZGl1cyA9IDEgLyBBVTtcclxuXHR0aGlzLmNvbnRyb2xsYWJsZSA9IGZhbHNlO1xyXG5cdHRoaXMudGhyb3R0bGUgPSAwLjtcclxuXHR0aGlzLnRvdGFsRGVsdGFWID0gMC47XHJcblx0dGhpcy5pZ25pdGlvbkNvdW50ID0gMDtcclxuXHR0aGlzLm5hbWUgPSBuYW1lO1xyXG5cdGNlbGVzdGlhbEJvZGllc1tuYW1lXSA9IHRoaXM7XHJcbn1cclxuXHJcbkNlbGVzdGlhbEJvZHkucHJvdG90eXBlLmluaXQgPSBmdW5jdGlvbigpe1xyXG5cdHRoaXMuYXNjZW5kaW5nX25vZGUgPSBNYXRoLnJhbmRvbSgpICogTWF0aC5QSSAqIDI7XHJcblx0dGhpcy5lcG9jaCA9IE1hdGgucmFuZG9tKCk7XHJcblx0dGhpcy5tZWFuX2Fub21hbHkgPSBNYXRoLnJhbmRvbSgpO1xyXG5cdHRoaXMudXBkYXRlKCk7XHJcbn07XHJcblxyXG5DZWxlc3RpYWxCb2R5LnByb3RvdHlwZS5nZXRfZWNjZW50cmljX2Fub21hbHkgPSBmdW5jdGlvbih0aW1lKXtcclxuXHQvLyBDYWxjdWxhdGVzIGVjY2VudHJpYyBhbm9tYWx5IGZyb20gbWVhbiBhbm9tYWx5IGluIGZpcnN0IG9yZGVyIGFwcHJveGltYXRpb25cclxuXHQvLyBzZWUgaHR0cDovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9FY2NlbnRyaWNfYW5vbWFseVxyXG5cdHZhciB0ZCA9IHRpbWUgLSB0aGlzLmVwb2NoO1xyXG5cdHZhciBwZXJpb2QgPSAyICogTWF0aC5QSSAqIE1hdGguc3FydChNYXRoLnBvdyh0aGlzLnNlbWltYWpvcl9heGlzICogQVUsIDMpIC8gdGhpcy5wYXJlbnQuR00pO1xyXG5cdHZhciBub3dfYW5vbWFseSA9IHRoaXMubWVhbl9hbm9tYWx5ICsgdGQgKiAyICogTWF0aC5QSSAvIHBlcmlvZDtcclxuXHRyZXR1cm4gbm93X2Fub21hbHkgKyB0aGlzLmVjY2VudHJpY2l0eSAqIE1hdGguc2luKG5vd19hbm9tYWx5KTtcclxufTtcclxuXHJcbkNlbGVzdGlhbEJvZHkucHJvdG90eXBlLmdldFdvcmxkUG9zaXRpb24gPSBmdW5jdGlvbigpe1xyXG5cdGlmKHRoaXMucGFyZW50KVxyXG5cdFx0cmV0dXJuIHRoaXMucGFyZW50LmdldFdvcmxkUG9zaXRpb24oKS5jbG9uZSgpLmFkZCh0aGlzLnBvc2l0aW9uKTtcclxuXHRlbHNlXHJcblx0XHRyZXR1cm4gdGhpcy5wb3NpdGlvbjtcclxufTtcclxuXHJcbkNlbGVzdGlhbEJvZHkucHJvdG90eXBlLnNldE9yYml0aW5nVmVsb2NpdHkgPSBmdW5jdGlvbihzZW1pbWFqb3JfYXhpcywgcm90YXRpb24pe1xyXG5cdHRoaXMudmVsb2NpdHkgPSBuZXcgVEhSRUUuVmVjdG9yMygxLCAwLCAwKVxyXG5cdFx0Lm11bHRpcGx5U2NhbGFyKE1hdGguc3FydCh0aGlzLnBhcmVudC5HTSAqICgyIC8gdGhpcy5wb3NpdGlvbi5sZW5ndGgoKSAtIDEgLyBzZW1pbWFqb3JfYXhpcykpKVxyXG5cdFx0LmFwcGx5UXVhdGVybmlvbihyb3RhdGlvbik7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGRlc2VyaWFsaXplVmVjdG9yMyhqc29uKXtcclxuXHRyZXR1cm4gbmV3IFRIUkVFLlZlY3RvcjMoanNvbi54LCBqc29uLnksIGpzb24ueik7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGRlc2VyaWFsaXplUXVhdGVybmlvbihqc29uKXtcclxuXHRyZXR1cm4gbmV3IFRIUkVFLlF1YXRlcm5pb24oanNvbi5feCwganNvbi5feSwganNvbi5feiwganNvbi5fdyk7XHJcbn1cclxuXHJcbkNlbGVzdGlhbEJvZHkucHJvdG90eXBlLnNlcmlhbGl6ZSA9IGZ1bmN0aW9uKCl7XHJcblx0cmV0dXJuIHtcclxuXHRcdG5hbWU6IHRoaXMubmFtZSxcclxuXHRcdHBhcmVudDogdGhpcy5wYXJlbnQgPyB0aGlzLnBhcmVudC5uYW1lIDogbnVsbCxcclxuXHRcdHBvc2l0aW9uOiB0aGlzLnBvc2l0aW9uLFxyXG5cdFx0dmVsb2NpdHk6IHRoaXMudmVsb2NpdHksXHJcblx0XHRxdWF0ZXJuaW9uOiB0aGlzLnF1YXRlcm5pb24sXHJcblx0XHRhbmd1bGFyVmVsb2NpdHk6IHRoaXMuYW5ndWxhclZlbG9jaXR5LFxyXG5cdFx0dG90YWxEZWx0YVY6IHRoaXMudG90YWxEZWx0YVYgfHwgdW5kZWZpbmVkLFxyXG5cdFx0aWduaXRpb25Db3VudDogdGhpcy5pZ25pdGlvbkNvdW50IHx8IHVuZGVmaW5lZCxcclxuXHR9O1xyXG59O1xyXG5cclxuQ2VsZXN0aWFsQm9keS5wcm90b3R5cGUuc2VyaWFsaXplVHJlZSA9IGZ1bmN0aW9uKCl7XHJcblx0dmFyIHJldCA9IFtdO1xyXG5cdHJldC5wdXNoKHRoaXMuc2VyaWFsaXplKCkpO1xyXG5cdGZvcih2YXIgaSA9IDA7IGkgPCB0aGlzLmNoaWxkcmVuLmxlbmd0aDsgaSsrKVxyXG5cdFx0cmV0ID0gcmV0LmNvbmNhdCh0aGlzLmNoaWxkcmVuW2ldLnNlcmlhbGl6ZVRyZWUoKSk7XHJcblx0cmV0dXJuIHJldDtcclxufVxyXG5cclxuQ2VsZXN0aWFsQm9keS5wcm90b3R5cGUuZGVzZXJpYWxpemUgPSBmdW5jdGlvbihqc29uKXtcclxuXHR0aGlzLm5hbWUgPSBqc29uLm5hbWU7XHJcblx0dGhpcy5zZXRQYXJlbnQoY2VsZXN0aWFsQm9kaWVzW2pzb24ucGFyZW50XSk7XHJcblx0dGhpcy5wb3NpdGlvbiA9IGRlc2VyaWFsaXplVmVjdG9yMyhqc29uLnBvc2l0aW9uKTtcclxuXHR0aGlzLnZlbG9jaXR5ID0gZGVzZXJpYWxpemVWZWN0b3IzKGpzb24udmVsb2NpdHkpO1xyXG5cdHRoaXMucXVhdGVybmlvbiA9IGRlc2VyaWFsaXplUXVhdGVybmlvbihqc29uLnF1YXRlcm5pb24pO1xyXG5cdHRoaXMuYW5ndWxhclZlbG9jaXR5ID0gZGVzZXJpYWxpemVWZWN0b3IzKGpzb24uYW5ndWxhclZlbG9jaXR5KTtcclxuXHR0aGlzLnRvdGFsRGVsdGFWID0ganNvbi50b3RhbERlbHRhViB8fCAwO1xyXG5cdHRoaXMuaWduaXRpb25Db3VudCA9IGpzb24uaWduaXRpb25Db3VudCB8fCAwO1xyXG59O1xyXG5cclxuQ2VsZXN0aWFsQm9keS5wcm90b3R5cGUuc2V0UGFyZW50ID0gZnVuY3Rpb24obmV3UGFyZW50KXtcclxuXHRpZih0aGlzLnBhcmVudCA9PT0gbmV3UGFyZW50KSByZXR1cm47XHJcblx0aWYodGhpcy5wYXJlbnQpe1xyXG5cdFx0dmFyIGogPSB0aGlzLnBhcmVudC5jaGlsZHJlbi5pbmRleE9mKHRoaXMpO1xyXG5cdFx0aWYoMCA8PSBqKSB0aGlzLnBhcmVudC5jaGlsZHJlbi5zcGxpY2UoaiwgMSk7XHJcblx0fVxyXG5cdHRoaXMucGFyZW50ID0gbmV3UGFyZW50O1xyXG5cdGlmKHRoaXMucGFyZW50KVxyXG5cdFx0dGhpcy5wYXJlbnQuY2hpbGRyZW4ucHVzaCh0aGlzKTtcclxufVxyXG5cclxuLy8gVXBkYXRlIG9yYml0YWwgZWxlbWVudHMgZnJvbSBwb3NpdGlvbiBhbmQgdmVsb2NpdHkuXHJcbi8vIFRoZSB3aG9sZSBkaXNjdXNzaW9uIGlzIGZvdW5kIGluIGNoYXB0ZXIgNC40IGluXHJcbi8vIGh0dHBzOi8vd3d3LmFjYWRlbWlhLmVkdS84NjEyMDUyL09SQklUQUxfTUVDSEFOSUNTX0ZPUl9FTkdJTkVFUklOR19TVFVERU5UU1xyXG5DZWxlc3RpYWxCb2R5LnByb3RvdHlwZS51cGRhdGUgPSBmdW5jdGlvbigpe1xyXG5cdGZ1bmN0aW9uIHZpc3VhbFBvc2l0aW9uKG8pe1xyXG5cdFx0dmFyIHBvc2l0aW9uID0gby5nZXRXb3JsZFBvc2l0aW9uKCk7XHJcblx0XHRpZihzZWxlY3Rfb2JqICYmIGNlbnRlcl9zZWxlY3QpXHJcblx0XHRcdHBvc2l0aW9uLnN1YihzZWxlY3Rfb2JqLmdldFdvcmxkUG9zaXRpb24oKSk7XHJcblx0XHRwb3NpdGlvbi5tdWx0aXBseVNjYWxhcih2aWV3U2NhbGUpO1xyXG5cdFx0cmV0dXJuIHBvc2l0aW9uO1xyXG5cdH1cclxuXHQvLy8gTkxJUFM6IE5vbi1MaW5lYXIgSW52ZXJzZSBQZXJzcGVjdGl2ZSBTY3JvbGxpbmdcclxuXHQvLy8gSWRlYSBvcmlnaW5hbGx5IGZvdW5kIGluIGEgZ2FtZSBIb21ld29ybGQgdGhhdCBlbmFibGVcclxuXHQvLy8gZGlzdGFudCBzbWFsbCBvYmplY3RzIHRvIGFwcGVhciBvbiBzY3JlZW4gaW4gcmVjb2duaXphYmxlIHNpemVcclxuXHQvLy8gYnV0IHN0aWxsIHJlbmRlcnMgaW4gcmVhbCBzY2FsZSB3aGVuIHpvb21lZCB1cC5cclxuXHRmdW5jdGlvbiBubGlwc0ZhY3RvcihvKXtcclxuXHRcdGlmKCFubGlwc19lbmFibGUpXHJcblx0XHRcdHJldHVybiAxO1xyXG5cdFx0dmFyIGdfbmxpcHNfZmFjdG9yID0gMWU2O1xyXG5cdFx0dmFyIGQgPSB2aXN1YWxQb3NpdGlvbihvKS5kaXN0YW5jZVRvKGNhbWVyYS5wb3NpdGlvbikgLyB2aWV3U2NhbGU7XHJcblx0XHR2YXIgZiA9IGQgLyBvLnJhZGl1cyAqIGdfbmxpcHNfZmFjdG9yICsgMTtcclxuXHRcdHJldHVybiBmO1xyXG5cdH1cclxuXHJcblx0Ly8vIENhbGN1bGF0ZSBwb3NpdGlvbiBvZiBwZXJpYXBzaXMgYW5kIGFwb2Fwc2lzIG9uIHRoZSBzY3JlZW5cclxuXHQvLy8gZm9yIHBsYWNpbmcgb3ZlcmxheSBpY29ucy5cclxuXHQvLy8gcGVyaSA9IC0xIGlmIHBlcmlhcHNpcywgb3RoZXJ3aXNlIDFcclxuXHRmdW5jdGlvbiBjYWxjQXBzZVBvc2l0aW9uKHBlcmksIGFwc2lzKXtcclxuXHRcdHZhciB3b3JsZFBvcyA9IGUuY2xvbmUoKS5ub3JtYWxpemUoKS5tdWx0aXBseVNjYWxhcihwZXJpICogc2NvcGUuc2VtaW1ham9yX2F4aXMgKiAoMSAtIHBlcmkgKiBzY29wZS5lY2NlbnRyaWNpdHkpKS5zdWIoc2NvcGUucG9zaXRpb24pO1xyXG5cdFx0dmFyIGNhbWVyYVBvcyA9IHdvcmxkUG9zLm11bHRpcGx5U2NhbGFyKHZpZXdTY2FsZSkuYXBwbHlNYXRyaXg0KGNhbWVyYS5tYXRyaXhXb3JsZEludmVyc2UpO1xyXG5cdFx0dmFyIHBlcnNQb3MgPSBjYW1lcmFQb3MuYXBwbHlQcm9qZWN0aW9uKGNhbWVyYS5wcm9qZWN0aW9uTWF0cml4KTtcclxuXHRcdHBlcnNQb3MueCAqPSB3aW5kb3dIYWxmWDtcclxuXHRcdHBlcnNQb3MueSAqPSB3aW5kb3dIYWxmWTtcclxuXHRcdHBlcnNQb3MueSAtPSBwZXJpICogODtcclxuXHRcdGlmKDAgPCBwZXJzUG9zLnogJiYgcGVyc1Bvcy56IDwgMSl7XHJcblx0XHRcdGFwc2lzLnBvc2l0aW9uLmNvcHkocGVyc1Bvcyk7XHJcblx0XHRcdGFwc2lzLnZpc2libGUgPSB0cnVlO1xyXG5cdFx0fVxyXG5cdFx0ZWxzZVxyXG5cdFx0XHRhcHNpcy52aXNpYmxlID0gZmFsc2U7XHJcblx0fTtcclxuXHR2YXIgc2NvcGUgPSB0aGlzO1xyXG5cclxuXHRpZih0aGlzLnZlcnRleClcclxuXHRcdHRoaXMudmVydGV4LmNvcHkodmlzdWFsUG9zaXRpb24odGhpcykpO1xyXG5cclxuXHRpZih0aGlzLm1vZGVsKXtcclxuXHRcdHRoaXMubW9kZWwucG9zaXRpb24uY29weSh2aXN1YWxQb3NpdGlvbih0aGlzKSk7XHJcblx0XHR0aGlzLm1vZGVsLnNjYWxlLnNldCgxLDEsMSkubXVsdGlwbHlTY2FsYXIobmxpcHNGYWN0b3IodGhpcykpO1xyXG5cdFx0dGhpcy5tb2RlbC5xdWF0ZXJuaW9uLmNvcHkodGhpcy5xdWF0ZXJuaW9uKTtcclxuXHR9XHJcblxyXG5cdGlmKHRoaXMucGFyZW50KXtcclxuXHRcdC8vIEFuZ3VsYXIgbW9tZW50dW0gdmVjdG9yc1xyXG5cdFx0dmFyIGFuZyA9IHRoaXMudmVsb2NpdHkuY2xvbmUoKS5jcm9zcyh0aGlzLnBvc2l0aW9uKTtcclxuXHRcdHZhciByID0gdGhpcy5wb3NpdGlvbi5sZW5ndGgoKTtcclxuXHRcdHZhciB2ID0gdGhpcy52ZWxvY2l0eS5sZW5ndGgoKTtcclxuXHRcdC8vIE5vZGUgdmVjdG9yXHJcblx0XHR2YXIgTiA9IChuZXcgVEhSRUUuVmVjdG9yMygwLCAwLCAxKSkuY3Jvc3MoYW5nKTtcclxuXHRcdC8vIEVjY2VudHJpY2l0eSB2ZWN0b3JcclxuXHRcdHZhciBlID0gdGhpcy5wb3NpdGlvbi5jbG9uZSgpLm11bHRpcGx5U2NhbGFyKDEgLyB0aGlzLnBhcmVudC5HTSAqICgodiAqIHYgLSB0aGlzLnBhcmVudC5HTSAvIHIpKSkuc3ViKHRoaXMudmVsb2NpdHkuY2xvbmUoKS5tdWx0aXBseVNjYWxhcih0aGlzLnBvc2l0aW9uLmRvdCh0aGlzLnZlbG9jaXR5KSAvIHRoaXMucGFyZW50LkdNKSk7XHJcblx0XHR0aGlzLmVjY2VudHJpY2l0eSA9IGUubGVuZ3RoKCk7XHJcblx0XHR0aGlzLmluY2xpbmF0aW9uID0gTWF0aC5hY29zKC1hbmcueiAvIGFuZy5sZW5ndGgoKSk7XHJcblx0XHQvLyBBdm9pZCB6ZXJvIGRpdmlzaW9uXHJcblx0XHRpZihOLmxlbmd0aFNxKCkgPD0gZXBzaWxvbilcclxuXHRcdFx0dGhpcy5hc2NlbmRpbmdfbm9kZSA9IDA7XHJcblx0XHRlbHNle1xyXG5cdFx0XHR0aGlzLmFzY2VuZGluZ19ub2RlID0gTWF0aC5hY29zKE4ueCAvIE4ubGVuZ3RoKCkpO1xyXG5cdFx0XHRpZihOLnkgPCAwKSB0aGlzLmFzY2VuZGluZ19ub2RlID0gMiAqIE1hdGguUEkgLSB0aGlzLmFzY2VuZGluZ19ub2RlO1xyXG5cdFx0fVxyXG5cdFx0dGhpcy5zZW1pbWFqb3JfYXhpcyA9IDEgLyAoMiAvIHIgLSB2ICogdiAvIHRoaXMucGFyZW50LkdNKTtcclxuXHJcblx0XHQvLyBSb3RhdGlvbiB0byBwZXJpZm9jYWwgZnJhbWVcclxuXHRcdHZhciBwbGFuZVJvdCA9IEF4aXNBbmdsZVF1YXRlcm5pb24oMCwgMCwgMSwgdGhpcy5hc2NlbmRpbmdfbm9kZSAtIE1hdGguUEkgLyAyKS5tdWx0aXBseShBeGlzQW5nbGVRdWF0ZXJuaW9uKDAsIDEsIDAsIE1hdGguUEkgLSB0aGlzLmluY2xpbmF0aW9uKSk7XHJcblxyXG5cdFx0dmFyIGhlYWRpbmdBcG9hcHNpcyA9IC10aGlzLnBvc2l0aW9uLmRvdCh0aGlzLnZlbG9jaXR5KS9NYXRoLmFicyh0aGlzLnBvc2l0aW9uLmRvdCh0aGlzLnZlbG9jaXR5KSk7XHJcblxyXG5cdFx0Ly8gQXZvaWQgemVybyBkaXZpc2lvbiBhbmQgc3RpbGwgZ2V0IHRoZSBjb3JyZWN0IGFuc3dlciB3aGVuIE4gPT0gMC5cclxuXHRcdC8vIFRoaXMgaXMgbmVjZXNzYXJ5IHRvIGRyYXcgb3JiaXQgd2l0aCB6ZXJvIGluY2xpbmF0aW9uIGFuZCBub256ZXJvIGVjY2VudHJpY2l0eS5cclxuXHRcdGlmKE4ubGVuZ3RoU3EoKSA8PSBlcHNpbG9uIHx8IGUubGVuZ3RoU3EoKSA8PSBlcHNpbG9uKVxyXG5cdFx0XHR0aGlzLmFyZ3VtZW50X29mX3BlcmloZWxpb24gPSBNYXRoLmF0YW4yKC1lLnksIGUueCk7XHJcblx0XHRlbHNle1xyXG5cdFx0XHR0aGlzLmFyZ3VtZW50X29mX3BlcmloZWxpb24gPSBNYXRoLmFjb3MoTi5kb3QoZSkgLyBOLmxlbmd0aCgpIC8gZS5sZW5ndGgoKSk7XHJcblx0XHRcdGlmKGUueiA8IDApIHRoaXMuYXJndW1lbnRfb2ZfcGVyaWhlbGlvbiA9IDIgKiBNYXRoLlBJIC0gdGhpcy5hcmd1bWVudF9vZl9wZXJpaGVsaW9uO1xyXG5cdFx0fVxyXG5cclxuXHRcdC8vIFRvdGFsIHJvdGF0aW9uIG9mIHRoZSBvcmJpdFxyXG5cdFx0dmFyIHJvdGF0aW9uID0gcGxhbmVSb3QuY2xvbmUoKS5tdWx0aXBseShBeGlzQW5nbGVRdWF0ZXJuaW9uKDAsIDAsIDEsIHRoaXMuYXJndW1lbnRfb2ZfcGVyaWhlbGlvbikpO1xyXG5cclxuXHRcdC8vIENvbnZlcnQgbGVuZ3RoIG9mIHVuaXQgYXUgaW50byBhIGZpeGVkLWxlbmd0aCBzdHJpbmcgY29uc2lkZXJpbmcgdXNlciB1bml0IHNlbGVjdGlvbi5cclxuXHRcdC8vIEFsc28gYXBwZW5kcyB1bml0IHN0cmluZyBmb3IgY2xhcml0eS5cclxuXHRcdGZ1bmN0aW9uIHVuaXRDb252TGVuZ3RoKGF1KXtcclxuXHRcdFx0aWYodW5pdHNfa20pXHJcblx0XHRcdFx0cmV0dXJuIChhdSAqIEFVKS50b1ByZWNpc2lvbigxMCkgKyAnIGttJztcclxuXHRcdFx0ZWxzZVxyXG5cdFx0XHRcdHJldHVybiBhdS50b0ZpeGVkKDEwKSArICcgQVUnO1xyXG5cdFx0fVxyXG5cclxuXHRcdC8vIFNob3cgb3JiaXQgaW5mb3JtYXRpb25cclxuXHRcdGlmKHRoaXMgPT09IHNlbGVjdF9vYmope1xyXG5cdFx0XHQvLyBZZXMsIGJ1aWxkaW5nIGEgd2hvbGUgdGFibGUgbWFya3VwIGJ5IHN0cmluZyBtYW5pcHVsYXRpb24uXHJcblx0XHRcdC8vIEkga25vdyBpdCdzIGluZWZmaWNpZW50LCBidXQgaXQncyBlYXN5IHRvIGltcGxlbWVudC4gSSdtIGxhenkuXHJcblx0XHRcdG9yYml0YWxFbGVtZW50Q29udHJvbC5zZXRUZXh0KFxyXG5cdFx0XHRcdCc8dGFibGUgY2xhc3M9XCJ0YWJsZTFcIj4nXHJcblx0XHRcdFx0KyAnIDx0cj48dGQ+ZTwvdGQ+PHRkPicgKyB0aGlzLmVjY2VudHJpY2l0eS50b0ZpeGVkKDEwKSArICc8L3RkPjwvdHI+J1xyXG5cdFx0XHRcdCsgJyA8dHI+PHRkPmE8L3RkPjx0ZD4nICsgdW5pdENvbnZMZW5ndGgodGhpcy5zZW1pbWFqb3JfYXhpcykgKyAnPC90ZD48L3RyPidcclxuXHRcdFx0XHQrICcgPHRyPjx0ZD5pPC90ZD48dGQ+JyArICh0aGlzLmluY2xpbmF0aW9uIC8gTWF0aC5QSSkudG9GaXhlZCgxMCkgKyAnPC90ZD48L3RyPidcclxuXHRcdFx0XHQrICcgPHRyPjx0ZD5PbWVnYTwvdGQ+PHRkPicgKyAodGhpcy5hc2NlbmRpbmdfbm9kZSAvIE1hdGguUEkpLnRvRml4ZWQoMTApICsgJzwvdGQ+PC90cj4nXHJcblx0XHRcdFx0KyAnIDx0cj48dGQ+dzwvdGQ+PHRkPicgKyAodGhpcy5hcmd1bWVudF9vZl9wZXJpaGVsaW9uIC8gTWF0aC5QSSkudG9GaXhlZCgxMCkgKyAnPC90ZD48L3RyPidcclxuXHRcdFx0XHQrICcgPHRyPjx0ZD5QZXJpYXBzaXM8L3RkPjx0ZD4nICsgdW5pdENvbnZMZW5ndGgoc2NvcGUuc2VtaW1ham9yX2F4aXMgKiAoMSAtIHNjb3BlLmVjY2VudHJpY2l0eSkpICsgJzwvdGQ+PC90cj4nXHJcblx0XHRcdFx0KyAnIDx0cj48dGQ+QXBvYXBzaXM8L3RkPjx0ZD4nICsgdW5pdENvbnZMZW5ndGgoc2NvcGUuc2VtaW1ham9yX2F4aXMgKiAoMSArIHNjb3BlLmVjY2VudHJpY2l0eSkpICsgJzwvdGQ+PC90cj4nXHJcblx0XHRcdFx0KyAnIDx0cj48dGQ+aGVhZDwvdGQ+PHRkPicgKyBoZWFkaW5nQXBvYXBzaXMudG9GaXhlZCg1KSArICc8L3RkPjwvdHI+J1xyXG4vL1x0XHRcdFx0XHRcdFx0KyAnIG9tZWdhPScgKyB0aGlzLmFuZ3VsYXJWZWxvY2l0eS54LnRvRml4ZWQoMTApICsgJywnICsgJzxicj4nICsgdGhpcy5hbmd1bGFyVmVsb2NpdHkueS50b0ZpeGVkKDEwKSArICcsJyArICc8YnI+JyArIHRoaXMuYW5ndWxhclZlbG9jaXR5LnoudG9GaXhlZCgxMClcclxuXHRcdFx0XHQrJzwvdGFibGU+J1xyXG5cdFx0XHQpO1xyXG5cdFx0fVxyXG5cclxuXHRcdC8vIElmIGVjY2VudHJpY2l0eSBpcyBvdmVyIDEsIHRoZSB0cmFqZWN0b3J5IGlzIGEgaHlwZXJib2xhLlxyXG5cdFx0Ly8gSXQgY291bGQgYmUgcGFyYWJvbGEgaW4gY2FzZSBvZiBlY2NlbnRyaWNpdHkgPT0gMSwgYnV0IHdlIGlnbm9yZVxyXG5cdFx0Ly8gdGhpcyBpbXByYWN0aWNhbCBjYXNlIGZvciBub3cuXHJcblx0XHRpZigxIDwgdGhpcy5lY2NlbnRyaWNpdHkpe1xyXG5cdFx0XHQvLyBBbGxvY2F0ZSB0aGUgaHlwZXJib2xpYyBzaGFwZSBhbmQgbWVzaCBvbmx5IGlmIG5lY2Vzc2FyeSxcclxuXHRcdFx0Ly8gc2luY2UgbW9zdCBvZiBjZWxlc3RpYWwgYm9kaWVzIGFyZSBhbGwgb24gcGVybWFuZW50IGVsbGlwdGljYWwgb3JiaXQuXHJcblx0XHRcdGlmKCF0aGlzLmh5cGVyYm9saWNHZW9tZXRyeSlcclxuXHRcdFx0XHR0aGlzLmh5cGVyYm9saWNHZW9tZXRyeSA9IG5ldyBUSFJFRS5HZW9tZXRyeSgpO1xyXG5cclxuXHRcdFx0Ly8gQ2FsY3VsYXRlIHRoZSB2ZXJ0aWNlcyBldmVyeSBmcmFtZSBzaW5jZSB0aGUgaHlwZXJib2xhIGNoYW5nZXMgc2hhcGVcclxuXHRcdFx0Ly8gZGVwZW5kaW5nIG9uIG9yYml0YWwgZWxlbWVudHMuXHJcblx0XHRcdHZhciB0aGV0YUluZiA9IE1hdGguYWNvcygtMSAvIHRoaXMuZWNjZW50cmljaXR5KTtcclxuXHRcdFx0dGhpcy5oeXBlcmJvbGljR2VvbWV0cnkudmVydGljZXMubGVuZ3RoID0gMDtcclxuXHRcdFx0dmFyIGgyID0gYW5nLmxlbmd0aFNxKCk7XHJcblx0XHRcdGZvcih2YXIgaSA9IC0xOTsgaSA8IDIwOyBpKyspe1xyXG5cdFx0XHRcdC8vIFRyYW5zZm9ybSBieSBzcXVhcmUgcm9vdCB0byBtYWtlIGZhciBzaWRlIG9mIHRoZSBoeXBlcmJvbGEgbGVzcyBcInBvbHlnb25pY1wiXHJcblx0XHRcdFx0dmFyIGlzaWduID0gaSA8IDAgPyAtMSA6IDE7XHJcblx0XHRcdFx0dmFyIHRoZXRhID0gdGhldGFJbmYgKiBpc2lnbiAqIE1hdGguc3FydChNYXRoLmFicyhpKSAvIDIwKTtcclxuXHRcdFx0XHR0aGlzLmh5cGVyYm9saWNHZW9tZXRyeS52ZXJ0aWNlcy5wdXNoKFxyXG5cdFx0XHRcdFx0bmV3IFRIUkVFLlZlY3RvcjMoIE1hdGguc2luKHRoZXRhKSwgTWF0aC5jb3ModGhldGEpLCAwIClcclxuXHRcdFx0XHRcdC5tdWx0aXBseVNjYWxhcihoMiAvIHRoaXMucGFyZW50LkdNIC8gKDEgKyB0aGlzLmVjY2VudHJpY2l0eSAqIE1hdGguY29zKHRoZXRhKSkpICk7XHJcblx0XHRcdH1cclxuXHRcdFx0Ly8gU2lnbmFsIHRocmVlLmpzIHRvIHVwZGF0ZSB0aGUgdmVydGljZXNcclxuXHRcdFx0dGhpcy5oeXBlcmJvbGljR2VvbWV0cnkudmVydGljZXNOZWVkVXBkYXRlID0gdHJ1ZTtcclxuXHJcblx0XHRcdC8vIEFsbG9jYXRlIGh5cGVyYm9sYSBtZXNoIGFuZCBhZGQgaXQgdG8gdGhlIHNjZW5lLlxyXG5cdFx0XHRpZighdGhpcy5oeXBlcmJvbGljTWVzaCl7XHJcblx0XHRcdFx0dGhpcy5oeXBlcmJvbGljTWVzaCA9IG5ldyBUSFJFRS5MaW5lKHRoaXMuaHlwZXJib2xpY0dlb21ldHJ5LCB0aGlzLm9yYml0TWF0ZXJpYWwpO1xyXG5cdFx0XHRcdHNjZW5lLmFkZCh0aGlzLmh5cGVyYm9saWNNZXNoKTtcclxuXHRcdFx0fVxyXG5cdFx0XHR0aGlzLmh5cGVyYm9saWNNZXNoLnF1YXRlcm5pb24uY29weShyb3RhdGlvbik7XHJcblx0XHRcdHRoaXMuaHlwZXJib2xpY01lc2guc2NhbGUueCA9IHZpZXdTY2FsZTtcclxuXHRcdFx0dGhpcy5oeXBlcmJvbGljTWVzaC5zY2FsZS55ID0gdmlld1NjYWxlO1xyXG5cdFx0XHR0aGlzLmh5cGVyYm9saWNNZXNoLnBvc2l0aW9uLmNvcHkodGhpcy5wYXJlbnQuZ2V0V29ybGRQb3NpdGlvbigpKTtcclxuXHRcdFx0aWYoc2VsZWN0X29iaiAmJiBjZW50ZXJfc2VsZWN0KVxyXG5cdFx0XHRcdHRoaXMuaHlwZXJib2xpY01lc2gucG9zaXRpb24uc3ViKHNlbGVjdF9vYmouZ2V0V29ybGRQb3NpdGlvbigpKTtcclxuXHRcdFx0dGhpcy5oeXBlcmJvbGljTWVzaC5wb3NpdGlvbi5tdWx0aXBseVNjYWxhcih2aWV3U2NhbGUpO1xyXG5cclxuXHRcdFx0Ly8gU3dpdGNoIGZyb20gZWxsaXBzZSB0byBoeXBlcmJvbGFcclxuXHRcdFx0dGhpcy5oeXBlcmJvbGljTWVzaC52aXNpYmxlID0gdHJ1ZTtcclxuXHRcdFx0aWYodGhpcy5vcmJpdClcclxuXHRcdFx0XHR0aGlzLm9yYml0LnZpc2libGUgPSBmYWxzZTtcclxuXHRcdH1cclxuXHRcdGVsc2UgaWYodGhpcy5oeXBlcmJvbGljTWVzaCl7XHJcblx0XHRcdC8vIFN3aXRjaCBiYWNrIHRvIGVsbGlwc2UgZnJvbSBoeXBlcmJvbGFcclxuXHRcdFx0aWYodGhpcy5vcmJpdClcclxuXHRcdFx0XHR0aGlzLm9yYml0LnZpc2libGUgPSB0cnVlO1xyXG5cdFx0XHR0aGlzLmh5cGVyYm9saWNNZXNoLnZpc2libGUgPSBmYWxzZTtcclxuXHRcdH1cclxuXHJcblx0XHQvLyBBcHBseSB0cmFuc2Zvcm1hdGlvbiB0byBvcmJpdCBtZXNoXHJcblx0XHRpZih0aGlzLm9yYml0KXtcclxuXHRcdFx0dGhpcy5vcmJpdC5xdWF0ZXJuaW9uLmNvcHkocm90YXRpb24pO1xyXG5cdFx0XHR0aGlzLm9yYml0LnNjYWxlLnggPSB0aGlzLnNlbWltYWpvcl9heGlzICogdmlld1NjYWxlICogTWF0aC5zcXJ0KDEuIC0gdGhpcy5lY2NlbnRyaWNpdHkgKiB0aGlzLmVjY2VudHJpY2l0eSk7XHJcblx0XHRcdHRoaXMub3JiaXQuc2NhbGUueSA9IHRoaXMuc2VtaW1ham9yX2F4aXMgKiB2aWV3U2NhbGU7XHJcblx0XHRcdHRoaXMub3JiaXQucG9zaXRpb24uY29weShuZXcgVEhSRUUuVmVjdG9yMygwLCAtdGhpcy5zZW1pbWFqb3JfYXhpcyAqIHRoaXMuZWNjZW50cmljaXR5LCAwKS5hcHBseVF1YXRlcm5pb24ocm90YXRpb24pLmFkZCh0aGlzLnBhcmVudC5nZXRXb3JsZFBvc2l0aW9uKCkpKTtcclxuXHRcdFx0aWYoc2VsZWN0X29iaiAmJiBjZW50ZXJfc2VsZWN0KVxyXG5cdFx0XHRcdHRoaXMub3JiaXQucG9zaXRpb24uc3ViKHNlbGVjdF9vYmouZ2V0V29ybGRQb3NpdGlvbigpKTtcclxuXHRcdFx0dGhpcy5vcmJpdC5wb3NpdGlvbi5tdWx0aXBseVNjYWxhcih2aWV3U2NhbGUpO1xyXG5cdFx0fVxyXG5cclxuXHRcdGlmKHRoaXMuYXBvYXBzaXMpe1xyXG5cdFx0XHQvLyBpZiBlY2NlbnRyaWNpdHkgaXMgemVybyBvciBtb3JlIHRoYW4gMSwgYXBvYXBzaXMgaXMgbm90IGRlZmluZWRcclxuXHRcdFx0aWYodGhpcyA9PT0gc2VsZWN0X29iaiAmJiAwIDwgdGhpcy5lY2NlbnRyaWNpdHkgJiYgdGhpcy5lY2NlbnRyaWNpdHkgPCAxKVxyXG5cdFx0XHRcdGNhbGNBcHNlUG9zaXRpb24oLTEsIHRoaXMuYXBvYXBzaXMpO1xyXG5cdFx0XHRlbHNlXHJcblx0XHRcdFx0dGhpcy5hcG9hcHNpcy52aXNpYmxlID0gZmFsc2U7XHJcblx0XHR9XHJcblx0XHRpZih0aGlzLnBlcmlhcHNpcyl7XHJcblx0XHRcdC8vIGlmIGVjY2VudHJpY2l0eSBpcyB6ZXJvLCBwZXJpYXBzaXMgaXMgbm90IGRlZmluZWRcclxuXHRcdFx0aWYodGhpcyA9PT0gc2VsZWN0X29iaiAmJiAwIDwgdGhpcy5lY2NlbnRyaWNpdHkpXHJcblx0XHRcdFx0Y2FsY0Fwc2VQb3NpdGlvbigxLCB0aGlzLnBlcmlhcHNpcyk7XHJcblx0XHRcdGVsc2VcclxuXHRcdFx0XHR0aGlzLnBlcmlhcHNpcy52aXNpYmxlID0gZmFsc2U7XHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHRmb3IodmFyIGkgPSAwOyBpIDwgdGhpcy5jaGlsZHJlbi5sZW5ndGg7IGkrKyl7XHJcblx0XHR2YXIgYSA9IHRoaXMuY2hpbGRyZW5baV07XHJcblx0XHRhLnVwZGF0ZSgpO1xyXG5cdH1cclxuXHJcbn07XHJcblxyXG5mdW5jdGlvbiBpbml0KCkge1xyXG5cclxuXHRjb250YWluZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCggJ2NvbnRhaW5lcicgKTtcclxuXHJcblx0Y2FtZXJhID0gbmV3IFRIUkVFLlBlcnNwZWN0aXZlQ2FtZXJhKCA2MCwgd2luZG93LmlubmVyV2lkdGggLyB3aW5kb3cuaW5uZXJIZWlnaHQsIDEsIDEwMDAwICk7XHJcblx0Y2FtZXJhLnBvc2l0aW9uLnkgPSAzMDA7XHJcblx0Y2FtZXJhLnBvc2l0aW9uLnogPSAxMDAwO1xyXG5cdGNhbWVyYS51cC5zZXQoMCwwLDEpO1xyXG5cclxuXHRiYWNrZ3JvdW5kID0gbmV3IFRIUkVFLlNjZW5lKCk7XHJcblx0YmFja2dyb3VuZC5yb3RhdGlvbi54ID0gTWF0aC5QSSAvIDI7XHJcblx0dmFyIGxvYWRlciA9IG5ldyBUSFJFRS5UZXh0dXJlTG9hZGVyKCk7XHJcblx0bG9hZGVyLmxvYWQoIGJhY2tncm91bmRVcmwsIGZ1bmN0aW9uICggdGV4dHVyZSApIHtcclxuXHJcblx0XHR2YXIgZ2VvbWV0cnkgPSBuZXcgVEhSRUUuU3BoZXJlR2VvbWV0cnkoIDIsIDIwLCAyMCApO1xyXG5cclxuXHRcdHZhciBtYXRlcmlhbCA9IG5ldyBUSFJFRS5NZXNoQmFzaWNNYXRlcmlhbCggeyBtYXA6IHRleHR1cmUsIG92ZXJkcmF3OiAwLjUsIGRlcHRoVGVzdDogZmFsc2UsIGRlcHRoV3JpdGU6IGZhbHNlLCBzaWRlOiBUSFJFRS5CYWNrU2lkZSB9ICk7XHJcblx0XHRtYXRlcmlhbC5kZXB0aFdyaXRlID0gZmFsc2U7XHJcblx0XHR2YXIgbWVzaCA9IG5ldyBUSFJFRS5NZXNoKGdlb21ldHJ5LCBtYXRlcmlhbCk7XHJcblx0XHRiYWNrZ3JvdW5kLmFkZChtZXNoKTtcclxuXHJcblx0fSApO1xyXG5cclxuXHRvdmVybGF5Q2FtZXJhID0gbmV3IFRIUkVFLk9ydGhvZ3JhcGhpY0NhbWVyYSggd2luZG93LmlubmVyV2lkdGggLyAtIDIsIHdpbmRvdy5pbm5lcldpZHRoIC8gMiwgd2luZG93LmlubmVySGVpZ2h0IC8gMiwgd2luZG93LmlubmVySGVpZ2h0IC8gLSAyLCAtMTAwMCwgMTAwMCApO1xyXG5cdHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdyZXNpemUnLCBmdW5jdGlvbigpe1xyXG5cdFx0b3ZlcmxheUNhbWVyYS5sZWZ0ID0gd2luZG93LmlubmVyV2lkdGggLyAtIDI7XHJcblx0XHRvdmVybGF5Q2FtZXJhLnJpZ2h0ID0gd2luZG93LmlubmVyV2lkdGggLyAyO1xyXG5cdFx0b3ZlcmxheUNhbWVyYS50b3AgPSB3aW5kb3cuaW5uZXJIZWlnaHQgLyAyO1xyXG5cdFx0b3ZlcmxheUNhbWVyYS5ib3R0b20gPSB3aW5kb3cuaW5uZXJIZWlnaHQgLyAtIDI7XHJcblx0XHRvdmVybGF5Q2FtZXJhLnVwZGF0ZVByb2plY3Rpb25NYXRyaXgoKTtcclxuXHR9KTtcclxuXHJcblx0b3ZlcmxheSA9IG5ldyBUSFJFRS5TY2VuZSgpO1xyXG5cdHZhciBsb2FkZXIgPSBuZXcgVEhSRUUuVGV4dHVyZUxvYWRlcigpO1xyXG5cdGxvYWRlci5sb2FkKCBuYXZiYWxsVXJsLCBmdW5jdGlvbiAoIHRleHR1cmUgKSB7XHJcblxyXG5cdFx0dmFyIGdlb21ldHJ5ID0gbmV3IFRIUkVFLlNwaGVyZUdlb21ldHJ5KCBuYXZiYWxsUmFkaXVzLCAyMCwgMjAgKTtcclxuXHJcblx0XHR2YXIgbWF0ZXJpYWwgPSBuZXcgVEhSRUUuTWVzaEJhc2ljTWF0ZXJpYWwoIHsgbWFwOiB0ZXh0dXJlLCBvdmVyZHJhdzogMC41LCBkZXB0aFRlc3Q6IGZhbHNlLCBkZXB0aFdyaXRlOiBmYWxzZSB9ICk7XHJcblx0XHRuYXZiYWxsTWVzaCA9IG5ldyBUSFJFRS5NZXNoKGdlb21ldHJ5LCBtYXRlcmlhbCk7XHJcblx0XHRvdmVybGF5LmFkZChuYXZiYWxsTWVzaCk7XHJcblxyXG5cdFx0dmFyIHNwcml0ZU1hdGVyaWFsID0gbmV3IFRIUkVFLlNwcml0ZU1hdGVyaWFsKHtcclxuXHRcdFx0bWFwOiBUSFJFRS5JbWFnZVV0aWxzLmxvYWRUZXh0dXJlKCB3YXRlcm1hcmtVcmwgKSxcclxuXHRcdFx0ZGVwdGhUZXN0OiBmYWxzZSxcclxuXHRcdFx0ZGVwdGhXcml0ZTogZmFsc2UsXHJcblx0XHRcdHRyYW5zcGFyZW50OiB0cnVlLFxyXG5cdFx0fSk7XHJcblx0XHR2YXIgd2F0ZXJtYXJrID0gbmV3IFRIUkVFLlNwcml0ZShzcHJpdGVNYXRlcmlhbCk7XHJcblx0XHR3YXRlcm1hcmsuc2NhbGUuc2V0KDY0LCAzMiwgNjQpO1xyXG5cdFx0bmF2YmFsbE1lc2guYWRkKHdhdGVybWFyayk7XHJcblx0fSApO1xyXG5cclxuXHR2YXIgc3ByaXRlR2VvbWV0cnkgPSBuZXcgVEhSRUUuUGxhbmVHZW9tZXRyeSggNDAsIDQwICk7XHJcbiAgICBwcm9ncmFkZSA9IG5ldyBUSFJFRS5NZXNoKHNwcml0ZUdlb21ldHJ5LFxyXG5cdFx0bmV3IFRIUkVFLk1lc2hCYXNpY01hdGVyaWFsKHtcclxuXHRcdFx0bWFwOiBUSFJFRS5JbWFnZVV0aWxzLmxvYWRUZXh0dXJlKCBwcm9ncmFkZVVybCApLFxyXG5cdFx0XHRjb2xvcjogMHhmZmZmZmYsXHJcblx0XHRcdHNpZGU6IFRIUkVFLkRvdWJsZVNpZGUsXHJcblx0XHRcdGRlcHRoVGVzdDogZmFsc2UsXHJcblx0XHRcdGRlcHRoV3JpdGU6IGZhbHNlLFxyXG5cdFx0XHR0cmFuc3BhcmVudDogdHJ1ZSxcclxuXHRcdH0gKVxyXG5cdCk7XHJcbiAgICBvdmVybGF5LmFkZChwcm9ncmFkZSk7XHJcblx0cmV0cm9ncmFkZSA9IG5ldyBUSFJFRS5NZXNoKHNwcml0ZUdlb21ldHJ5LFxyXG5cdFx0bmV3IFRIUkVFLk1lc2hCYXNpY01hdGVyaWFsKHtcclxuXHRcdFx0bWFwOiBUSFJFRS5JbWFnZVV0aWxzLmxvYWRUZXh0dXJlKCByZXRyb2dyYWRlVXJsICksXHJcblx0XHRcdGNvbG9yOiAweGZmZmZmZixcclxuXHRcdFx0c2lkZTogVEhSRUUuRG91YmxlU2lkZSxcclxuXHRcdFx0ZGVwdGhUZXN0OiBmYWxzZSxcclxuXHRcdFx0ZGVwdGhXcml0ZTogZmFsc2UsXHJcblx0XHRcdHRyYW5zcGFyZW50OiB0cnVlLFxyXG5cdFx0fSApXHJcblx0KTtcclxuICAgIG92ZXJsYXkuYWRkKHJldHJvZ3JhZGUpO1xyXG5cclxuXHRzY2VuZSA9IG5ldyBUSFJFRS5TY2VuZSgpO1xyXG5cclxuXHRncm91cCA9IG5ldyBUSFJFRS5PYmplY3QzRCgpO1xyXG5cdHNjZW5lLmFkZCggZ3JvdXAgKTtcclxuXHJcblx0dmFyIG1hdGVyaWFsID0gbmV3IFRIUkVFLlBhcnRpY2xlU3lzdGVtTWF0ZXJpYWwoIHsgc2l6ZTogMC4xIH0gKTtcclxuXHJcblx0Ly8gU3VuXHJcblx0dmFyIFJzdW4gPSA2OTU4MDAuO1xyXG5cdHZhciBzZ2VvbWV0cnkgPSBuZXcgVEhSRUUuU3BoZXJlR2VvbWV0cnkoIFJzdW4gLyBBVSAqIHZpZXdTY2FsZSwgMjAsIDIwICk7XHJcblxyXG5cdHZhciBzdW5NZXNoID0gbmV3IFRIUkVFLk1lc2goIHNnZW9tZXRyeSwgbWF0ZXJpYWwgKTtcclxuXHRncm91cC5hZGQoIHN1bk1lc2ggKTtcclxuXHJcblx0Ly8gU3VuIGxpZ2h0XHJcblx0bGlnaHQgPSBuZXcgVEhSRUUuUG9pbnRMaWdodCggMHhmZmZmZmYsIDEsIDAsIDFlLTYgKTtcclxuXHRzY2VuZS5hZGQoIGxpZ2h0ICk7XHJcblx0c2NlbmUuYWRkKCBuZXcgVEhSRUUuQW1iaWVudExpZ2h0KCAweDIwMjAyMCApICk7XHJcblxyXG5cdHZhciBtZXNoTWF0ZXJpYWwgPSBuZXcgVEhSRUUuTGluZUJhc2ljTWF0ZXJpYWwoe2NvbG9yOiAweDNmM2YzZn0pO1xyXG5cdHZhciBtZXNoR2VvbWV0cnkgPSBuZXcgVEhSRUUuR2VvbWV0cnkoKTtcclxuXHRmb3IodmFyIHggPSAtMTA7IHggPD0gMTA7IHgrKylcclxuXHRcdG1lc2hHZW9tZXRyeS52ZXJ0aWNlcy5wdXNoKCBuZXcgVEhSRUUuVmVjdG9yMyggLTEwLCB4LCAwICksIG5ldyBUSFJFRS5WZWN0b3IzKDEwLCB4LCAwKSk7XHJcblx0Zm9yKHZhciB4ID0gLTEwOyB4IDw9IDEwOyB4KyspXHJcblx0XHRtZXNoR2VvbWV0cnkudmVydGljZXMucHVzaCggbmV3IFRIUkVFLlZlY3RvcjMoIHgsIC0xMCwgMCApLCBuZXcgVEhSRUUuVmVjdG9yMyh4LCAxMCwgMCkpO1xyXG5cdGdyaWRzID0gbmV3IFRIUkVFLk9iamVjdDNEKCk7XHJcblx0dmFyIG1lc2ggPSBuZXcgVEhSRUUuTGluZVNlZ21lbnRzKG1lc2hHZW9tZXRyeSwgbWVzaE1hdGVyaWFsKTtcclxuXHRtZXNoLnNjYWxlLnggPSBtZXNoLnNjYWxlLnkgPSAxMDA7XHJcblx0Z3JpZHMuYWRkKG1lc2gpO1xyXG5cdHZhciBtZXNoMiA9IG5ldyBUSFJFRS5MaW5lU2VnbWVudHMobWVzaEdlb21ldHJ5LCBtZXNoTWF0ZXJpYWwpO1xyXG5cdG1lc2gyLnNjYWxlLnggPSBtZXNoMi5zY2FsZS55ID0gMTAwMDAgLyBBVSAqIDEwMDtcclxuXHRncmlkcy5hZGQobWVzaDIpO1xyXG5cclxuXHRmdW5jdGlvbiBhZGRBeGlzKGF4aXNWZWN0b3IsIGNvbG9yKXtcclxuXHRcdHZhciBheGlzWE1hdGVyaWFsID0gbmV3IFRIUkVFLkxpbmVCYXNpY01hdGVyaWFsKHtjb2xvcjogY29sb3J9KTtcclxuXHRcdHZhciBheGlzWEdlb21ldHJ5ID0gbmV3IFRIUkVFLkdlb21ldHJ5KCk7XHJcblx0XHRheGlzWEdlb21ldHJ5LnZlcnRpY2VzLnB1c2gobmV3IFRIUkVFLlZlY3RvcjMoMCwwLDApLCBheGlzVmVjdG9yKTtcclxuXHRcdHZhciBheGlzWCA9IG5ldyBUSFJFRS5MaW5lKGF4aXNYR2VvbWV0cnksIGF4aXNYTWF0ZXJpYWwpO1xyXG5cdFx0YXhpc1guc2NhbGUubXVsdGlwbHlTY2FsYXIoMTAwKTtcclxuXHRcdGdyaWRzLmFkZChheGlzWCk7XHJcblx0fVxyXG5cdGFkZEF4aXMobmV3IFRIUkVFLlZlY3RvcjMoMTAwLDAsMCksIDB4ZmYwMDAwKTtcclxuXHRhZGRBeGlzKG5ldyBUSFJFRS5WZWN0b3IzKDAsMTAwLDApLCAweDAwZmYwMCk7XHJcblx0YWRkQXhpcyhuZXcgVEhSRUUuVmVjdG9yMygwLDAsMTAwKSwgMHgwMDAwZmYpO1xyXG5cclxuXHRzY2VuZS5hZGQoZ3JpZHMpO1xyXG5cclxuXHR2YXIgb3JiaXRNYXRlcmlhbCA9IG5ldyBUSFJFRS5MaW5lQmFzaWNNYXRlcmlhbCh7Y29sb3I6IDB4M2YzZjdmfSk7XHJcblx0Q2VsZXN0aWFsQm9keS5wcm90b3R5cGUub3JiaXRNYXRlcmlhbCA9IG9yYml0TWF0ZXJpYWw7IC8vIERlZmF1bHQgb3JiaXQgbWF0ZXJpYWxcclxuXHRzZWxlY3RlZE9yYml0TWF0ZXJpYWwgPSBuZXcgVEhSRUUuTGluZUJhc2ljTWF0ZXJpYWwoe2NvbG9yOiAweGZmN2ZmZn0pO1xyXG5cdHZhciBvcmJpdEdlb21ldHJ5ID0gbmV3IFRIUkVFLkdlb21ldHJ5KCk7XHJcblx0dmFyIGN1cnZlID0gbmV3IFRIUkVFLkVsbGlwc2VDdXJ2ZSgwLCAwLCAxLCAxLFxyXG5cdFx0MCwgTWF0aC5QSSAqIDIsIGZhbHNlLCA5MCk7XHJcblx0dmFyIHBhdGggPSBuZXcgVEhSRUUuUGF0aCggY3VydmUuZ2V0UG9pbnRzKCAyNTYgKSApO1xyXG5cdHZhciBvcmJpdEdlb21ldHJ5ID0gcGF0aC5jcmVhdGVQb2ludHNHZW9tZXRyeSggMjU2ICk7XHJcblxyXG5cdC8vIEFkZCBhIHBsYW5ldCBoYXZpbmcgZGVzaXJlZCBvcmJpdGFsIGVsZW1lbnRzLiBOb3RlIHRoYXQgdGhlcmUncyBubyB3YXkgdG8gc3BlY2lmeSBhbm9tYWx5IChwaGFzZSkgb24gdGhlIG9yYml0IHJpZ2h0IG5vdy5cclxuXHQvLyBJdCdzIGEgYml0IGRpZmZpY3VsdCB0byBjYWxjdWxhdGUgaW4gTmV3dG9uaWFuIGR5bmFtaWNzIHNpbXVsYXRpb24uXHJcblx0ZnVuY3Rpb24gQWRkUGxhbmV0KHNlbWltYWpvcl9heGlzLCBlY2NlbnRyaWNpdHksIGluY2xpbmF0aW9uLCBhc2NlbmRpbmdfbm9kZSwgYXJndW1lbnRfb2ZfcGVyaWhlbGlvbiwgY29sb3IsIEdNLCBwYXJlbnQsIHRleHR1cmUsIHJhZGl1cywgcGFyYW1zLCBuYW1lKXtcclxuXHRcdHZhciByb3RhdGlvbiA9IEF4aXNBbmdsZVF1YXRlcm5pb24oMCwgMCwgMSwgYXNjZW5kaW5nX25vZGUgLSBNYXRoLlBJIC8gMilcclxuXHRcdFx0Lm11bHRpcGx5KEF4aXNBbmdsZVF1YXRlcm5pb24oMCwgMSwgMCwgTWF0aC5QSSAtIGluY2xpbmF0aW9uKSlcclxuXHRcdFx0Lm11bHRpcGx5KEF4aXNBbmdsZVF1YXRlcm5pb24oMCwgMCwgMSwgYXJndW1lbnRfb2ZfcGVyaWhlbGlvbikpO1xyXG5cdFx0dmFyIGdyb3VwID0gbmV3IFRIUkVFLk9iamVjdDNEKCk7XHJcblx0XHR2YXIgcmV0ID0gbmV3IENlbGVzdGlhbEJvZHkocGFyZW50IHx8IHN1biwgbmV3IFRIUkVFLlZlY3RvcjMoMCwgMSAtIGVjY2VudHJpY2l0eSwgMCkubXVsdGlwbHlTY2FsYXIoc2VtaW1ham9yX2F4aXMpLmFwcGx5UXVhdGVybmlvbihyb3RhdGlvbiksIGdyb3VwLnBvc2l0aW9uLCBjb2xvciwgR00sIG5hbWUpO1xyXG5cdFx0cmV0Lm1vZGVsID0gZ3JvdXA7XHJcblx0XHRyZXQucmFkaXVzID0gcmFkaXVzO1xyXG5cdFx0c2NlbmUuYWRkKCBncm91cCApO1xyXG5cclxuXHRcdGlmKHRleHR1cmUpe1xyXG5cdFx0XHR2YXIgbG9hZGVyID0gbmV3IFRIUkVFLlRleHR1cmVMb2FkZXIoKTtcclxuXHRcdFx0bG9hZGVyLmxvYWQoIHRleHR1cmUgfHwgZWFydGhVcmwsIGZ1bmN0aW9uICggdGV4dHVyZSApIHtcclxuXHJcblx0XHRcdFx0dmFyIGdlb21ldHJ5ID0gbmV3IFRIUkVFLlNwaGVyZUdlb21ldHJ5KCAxLCAyMCwgMjAgKTtcclxuXHJcblx0XHRcdFx0dmFyIG1hdGVyaWFsID0gbmV3IFRIUkVFLk1lc2hMYW1iZXJ0TWF0ZXJpYWwoIHsgbWFwOiB0ZXh0dXJlLCBjb2xvcjogMHhmZmZmZmYsIHNoYWRpbmc6IFRIUkVFLkZsYXRTaGFkaW5nLCBvdmVyZHJhdzogMC41IH0gKTtcclxuXHRcdFx0XHR2YXIgbWVzaCA9IG5ldyBUSFJFRS5NZXNoKCBnZW9tZXRyeSwgbWF0ZXJpYWwgKTtcclxuXHRcdFx0XHR2YXIgcmFkaXVzSW5BdSA9IHZpZXdTY2FsZSAqIChyYWRpdXMgfHwgNjUzNCkgLyBBVTtcclxuXHRcdFx0XHRtZXNoLnNjYWxlLnNldChyYWRpdXNJbkF1LCByYWRpdXNJbkF1LCByYWRpdXNJbkF1KTtcclxuXHRcdFx0XHRtZXNoLnJvdGF0aW9uLnggPSBNYXRoLlBJIC8gMjtcclxuXHRcdFx0XHRncm91cC5hZGQoIG1lc2ggKTtcclxuXHJcblx0XHRcdH0gKTtcclxuXHRcdH1cclxuXHRcdGVsc2UgaWYocGFyYW1zLm1vZGVsTmFtZSl7XHJcblx0XHRcdHZhciBsb2FkZXIgPSBuZXcgVEhSRUUuT0JKTG9hZGVyKCk7XHJcblx0XHRcdGxvYWRlci5sb2FkKCBwYXJhbXMubW9kZWxOYW1lLCBmdW5jdGlvbiAoIG9iamVjdCApIHtcclxuXHRcdFx0XHR2YXIgcmFkaXVzSW5BdSA9IDEwMCAqIChyYWRpdXMgfHwgNjUzNCkgLyBBVTtcclxuXHRcdFx0XHRvYmplY3Quc2NhbGUuc2V0KHJhZGl1c0luQXUsIHJhZGl1c0luQXUsIHJhZGl1c0luQXUpO1xyXG5cdFx0XHRcdGdyb3VwLmFkZCggb2JqZWN0ICk7XHJcblx0XHRcdH0gKTtcclxuXHRcdFx0dmFyIGJsYXN0R3JvdXAgPSBuZXcgVEhSRUUuT2JqZWN0M0QoKTtcclxuXHRcdFx0Z3JvdXAuYWRkKGJsYXN0R3JvdXApO1xyXG5cdFx0XHRibGFzdEdyb3VwLnZpc2libGUgPSBmYWxzZTtcclxuXHRcdFx0Ymxhc3RHcm91cC5wb3NpdGlvbi54ID0gLTYwIC8gQVU7XHJcblx0XHRcdHJldC5ibGFzdE1vZGVsID0gYmxhc3RHcm91cDtcclxuXHRcdFx0dmFyIHNwcml0ZU1hdGVyaWFsID0gbmV3IFRIUkVFLlNwcml0ZU1hdGVyaWFsKHtcclxuXHRcdFx0XHRtYXA6IFRIUkVFLkltYWdlVXRpbHMubG9hZFRleHR1cmUoIGJsYXN0VXJsICksXHJcblx0XHRcdFx0YmxlbmRpbmc6IFRIUkVFLkFkZGl0aXZlQmxlbmRpbmcsXHJcblx0XHRcdFx0ZGVwdGhXcml0ZTogZmFsc2UsXHJcblx0XHRcdFx0dHJhbnNwYXJlbnQ6IHRydWUsXHJcblx0XHRcdH0pO1xyXG5cdFx0XHR2YXIgYmxhc3QgPSBuZXcgVEhSRUUuU3ByaXRlKHNwcml0ZU1hdGVyaWFsKTtcclxuXHRcdFx0Ymxhc3QucG9zaXRpb24ueCA9IC0zMCAvIEFVO1xyXG5cdFx0XHRibGFzdC5zY2FsZS5tdWx0aXBseVNjYWxhcigxMDAgLyBBVSk7XHJcblx0XHRcdGJsYXN0R3JvdXAuYWRkKGJsYXN0KTtcclxuXHRcdFx0dmFyIGJsYXN0MiA9IG5ldyBUSFJFRS5TcHJpdGUoc3ByaXRlTWF0ZXJpYWwpO1xyXG5cdFx0XHRibGFzdDIucG9zaXRpb24ueCA9IC02MCAvIEFVO1xyXG5cdFx0XHRibGFzdDIuc2NhbGUubXVsdGlwbHlTY2FsYXIoNTAgLyBBVSk7XHJcblx0XHRcdGJsYXN0R3JvdXAuYWRkKGJsYXN0Mik7XHJcblx0XHRcdHZhciBibGFzdDIgPSBuZXcgVEhSRUUuU3ByaXRlKHNwcml0ZU1hdGVyaWFsKTtcclxuXHRcdFx0Ymxhc3QyLnBvc2l0aW9uLnggPSAtODAgLyBBVTtcclxuXHRcdFx0Ymxhc3QyLnNjYWxlLm11bHRpcGx5U2NhbGFyKDMwIC8gQVUpO1xyXG5cdFx0XHRibGFzdEdyb3VwLmFkZChibGFzdDIpO1xyXG5cdFx0fVxyXG5cclxuXHRcdGlmKHBhcmFtcyAmJiBwYXJhbXMuY29udHJvbGxhYmxlKVxyXG5cdFx0XHRyZXQuY29udHJvbGxhYmxlID0gcGFyYW1zLmNvbnRyb2xsYWJsZTtcclxuXHJcblx0XHRyZXQuc29pID0gcGFyYW1zICYmIHBhcmFtcy5zb2kgPyBwYXJhbXMuc29pIC8gQVUgOiAwO1xyXG5cclxuXHRcdHJldC5hcG9hcHNpcyA9IG5ldyBUSFJFRS5TcHJpdGUobmV3IFRIUkVFLlNwcml0ZU1hdGVyaWFsKHtcclxuXHRcdFx0bWFwOiBUSFJFRS5JbWFnZVV0aWxzLmxvYWRUZXh0dXJlKGFwb2Fwc2lzVXJsKSxcclxuXHRcdFx0dHJhbnNwYXJlbnQ6IHRydWUsXHJcblx0XHR9KSk7XHJcblx0XHRyZXQuYXBvYXBzaXMuc2NhbGUuc2V0KDE2LDE2LDE2KTtcclxuXHRcdG92ZXJsYXkuYWRkKHJldC5hcG9hcHNpcyk7XHJcblxyXG5cdFx0cmV0LnBlcmlhcHNpcyA9IG5ldyBUSFJFRS5TcHJpdGUobmV3IFRIUkVFLlNwcml0ZU1hdGVyaWFsKHtcclxuXHRcdFx0bWFwOiBUSFJFRS5JbWFnZVV0aWxzLmxvYWRUZXh0dXJlKHBlcmlhcHNpc1VybCksXHJcblx0XHRcdHRyYW5zcGFyZW50OiB0cnVlLFxyXG5cdFx0fSkpO1xyXG5cdFx0cmV0LnBlcmlhcHNpcy5zY2FsZS5zZXQoMTYsMTYsMTYpO1xyXG5cdFx0b3ZlcmxheS5hZGQocmV0LnBlcmlhcHNpcyk7XHJcblxyXG5cdFx0Ly8gT3JiaXRhbCBzcGVlZCBhdCBnaXZlbiBwb3NpdGlvbiBhbmQgZWNjZW50cmljaXR5IGNhbiBiZSBjYWxjdWxhdGVkIGJ5IHYgPSBcXHNxcnQoXFxtdSAoMiAvIHIgLSAxIC8gYSkpXHJcblx0XHQvLyBodHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9PcmJpdGFsX3NwZWVkXHJcblx0XHRyZXQuc2V0T3JiaXRpbmdWZWxvY2l0eShzZW1pbWFqb3JfYXhpcywgcm90YXRpb24pO1xyXG5cdFx0aWYocGFyYW1zICYmIHBhcmFtcy5heGlhbFRpbHQgJiYgcGFyYW1zLnJvdGF0aW9uUGVyaW9kKXtcclxuXHRcdFx0cmV0LnF1YXRlcm5pb24gPSBBeGlzQW5nbGVRdWF0ZXJuaW9uKDEsIDAsIDAsIHBhcmFtcy5heGlhbFRpbHQpO1xyXG5cdFx0XHRyZXQuYW5ndWxhclZlbG9jaXR5ID0gbmV3IFRIUkVFLlZlY3RvcjMoMCwgMCwgMiAqIE1hdGguUEkgLyBwYXJhbXMucm90YXRpb25QZXJpb2QpLmFwcGx5UXVhdGVybmlvbihyZXQucXVhdGVybmlvbik7XHJcblx0XHR9XHJcblx0XHRpZihwYXJhbXMgJiYgcGFyYW1zLmFuZ3VsYXJWZWxvY2l0eSkgcmV0LmFuZ3VsYXJWZWxvY2l0eSA9IHBhcmFtcy5hbmd1bGFyVmVsb2NpdHk7XHJcblx0XHRpZihwYXJhbXMgJiYgcGFyYW1zLnF1YXRlcm5pb24pIHJldC5xdWF0ZXJuaW9uID0gcGFyYW1zLnF1YXRlcm5pb247XHJcblx0XHR2YXIgb3JiaXRNZXNoID0gbmV3IFRIUkVFLkxpbmUob3JiaXRHZW9tZXRyeSwgcmV0Lm9yYml0TWF0ZXJpYWwpO1xyXG5cdFx0cmV0Lm9yYml0ID0gb3JiaXRNZXNoO1xyXG5cdFx0c2NlbmUuYWRkKG9yYml0TWVzaCk7XHJcblx0XHRyZXQuaW5pdCgpO1xyXG5cdFx0cmV0LnVwZGF0ZSgpO1xyXG5cdFx0cmV0dXJuIHJldDtcclxuXHR9XHJcblxyXG5cdHN1biA9IG5ldyBDZWxlc3RpYWxCb2R5KG51bGwsIG5ldyBUSFJFRS5WZWN0b3IzKCksIG51bGwsIDB4ZmZmZmZmLCBHTXN1biwgXCJzdW5cIik7XHJcblx0c3VuLnJhZGl1cyA9IFJzdW47XHJcblx0c3VuLm1vZGVsID0gZ3JvdXA7XHJcblx0dmFyIG1lcmN1cnkgPSBBZGRQbGFuZXQoMC4zODcwOTgsIDAuMjA1NjMwLCA3LjAwNSAqIHJhZF9wZXJfZGVnLCA0OC4zMzEgKiByYWRfcGVyX2RlZywgMjkuMTI0ICogcmFkX3Blcl9kZWcsIDB4M2Y3ZjdmLCAyMjAzMiAvIEFVIC8gQVUgLyBBVSwgc3VuLCBtZXJjdXJ5VXJsLCAyNDM5LjcsIHtzb2k6IDJlNX0sIFwibWVyY3VyeVwiKTtcclxuXHR2YXIgdmVudXMgPSBBZGRQbGFuZXQoMC43MjMzMzIsIDAuMDA2NzczMjMsIDMuMzk0NTggKiByYWRfcGVyX2RlZywgNzYuNjc4ICogcmFkX3Blcl9kZWcsIDU1LjE4NiAqIHJhZF9wZXJfZGVnLCAweDdmN2YzZiwgMzI0ODU5IC8gQVUgLyBBVSAvIEFVLCBzdW4sIHZlbnVzVXJsLCA2MDUxLjgsIHtzb2k6IDVlNX0sIFwibWFyc1wiKTtcclxuXHQvLyBFYXJ0aCBpcyBhdCAxIEFVICh3aGljaCBpcyB0aGUgQVUncyBkZWZpbml0aW9uKSBhbmQgb3JiaXRzIGFyb3VuZCB0aGUgZWNsaXB0aWMuXHJcblx0dmFyIGVhcnRoID0gQWRkUGxhbmV0KDEsIDAuMDE2NzA4NiwgMCwgLTExLjI2MDY0ICogcmFkX3Blcl9kZWcsIDExNC4yMDc4MyAqIHJhZF9wZXJfZGVnLCAweDNmN2YzZiwgMzk4NjAwIC8gQVUgLyBBVSAvIEFVLCBzdW4sIGVhcnRoVXJsLCA2NTM0LFxyXG5cdFx0e2F4aWFsVGlsdDogMjMuNDM5MjgxMSAqIHJhZF9wZXJfZGVnLFxyXG5cdFx0cm90YXRpb25QZXJpb2Q6ICgoMjMgKiA2MCArIDU2KSAqIDYwICsgNC4xMCksXHJcblx0XHRzb2k6IDVlNX0sIFwiZWFydGhcIik7XHJcblx0dmFyIHJvY2tldCA9IEFkZFBsYW5ldCgxMDAwMCAvIEFVLCAwLiwgMCwgMCwgMCwgMHgzZjdmN2YsIDEwMCAvIEFVIC8gQVUgLyBBVSwgZWFydGgsIHVuZGVmaW5lZCwgMC4xLCB7bW9kZWxOYW1lOiByb2NrZXRNb2RlbFVybCwgY29udHJvbGxhYmxlOiB0cnVlfSwgXCJyb2NrZXRcIik7XHJcblx0cm9ja2V0LnF1YXRlcm5pb24ubXVsdGlwbHkoQXhpc0FuZ2xlUXVhdGVybmlvbigxLCAwLCAwLCBNYXRoLlBJIC8gMikpLm11bHRpcGx5KEF4aXNBbmdsZVF1YXRlcm5pb24oMCwgMSwgMCwgTWF0aC5QSSAvIDIpKTtcclxuXHR2YXIgbW9vbiA9IEFkZFBsYW5ldCgzODQzOTkgLyBBVSwgMC4wMTY3MDg2LCAwLCAtMTEuMjYwNjQgKiByYWRfcGVyX2RlZywgMTE0LjIwNzgzICogcmFkX3Blcl9kZWcsIDB4NWY1ZjVmLCA0OTA0Ljg2OTUgLyBBVSAvIEFVIC8gQVUsIGVhcnRoLCBtb29uVXJsLCAxNzM3LjEsIHtzb2k6IDFlNX0sIFwibW9vblwiKTtcclxuXHR2YXIgbWFycyA9IEFkZFBsYW5ldCgxLjUyMzY3OSwgMC4wOTM1LCAxLjg1MCAqIHJhZF9wZXJfZGVnLCA0OS41NjIgKiByYWRfcGVyX2RlZywgMjg2LjUzNyAqIHJhZF9wZXJfZGVnLCAweDdmM2YzZiwgNDI4MjggLyBBVSAvIEFVIC8gQVUsIHN1biwgbWFyc1VybCwgMzM4OS41LCB7c29pOiAzZTV9LCBcIm1hcnNcIik7XHJcblx0dmFyIGp1cGl0ZXIgPSBBZGRQbGFuZXQoNS4yMDQyNjcsIDAuMDQ4Nzc1LCAxLjMwNSAqIHJhZF9wZXJfZGVnLCAxMDAuNDkyICogcmFkX3Blcl9kZWcsIDI3NS4wNjYgKiByYWRfcGVyX2RlZywgMHg3ZjdmM2YsIDEyNjY4NjUzNCAvIEFVIC8gQVUgLyBBVSwgc3VuLCBqdXBpdGVyVXJsLCA2OTkxMSwge3NvaTogMTBlNn0sIFwianVwaXRlclwiKTtcclxuXHRzZWxlY3Rfb2JqID0gcm9ja2V0O1xyXG5cdGNlbnRlcl9zZWxlY3QgPSB0cnVlO1xyXG5cdGNhbWVyYS5wb3NpdGlvbi5zZXQoMC4wMDUsIDAuMDAzLCAwLjAwNSk7XHJcblxyXG5cdC8vIFVzZSBpY29zYWhlZHJvbiBpbnN0ZWFkIG9mIHNwaGVyZSB0byBtYWtlIGl0IGxvb2sgbGlrZSB1bmlmb3JtXHJcblx0dmFyIGFzdGVyb2lkR2VvbWV0cnkgPSBuZXcgVEhSRUUuSWNvc2FoZWRyb25HZW9tZXRyeSggMSwgMiApO1xyXG5cdC8vIE1vZHVsYXRlIHRoZSB2ZXJ0aWNlcyByYW5kb21seSB0byBtYWtlIGl0IGxvb2sgbGlrZSBhbiBhc3Rlcm9pZC4gU2ltcGxleCBub2lzZSBpcyBkZXNpcmFibGUuXHJcblx0Zm9yKHZhciBpID0gMDsgaSA8IGFzdGVyb2lkR2VvbWV0cnkudmVydGljZXMubGVuZ3RoOyBpKyspe1xyXG5cdFx0YXN0ZXJvaWRHZW9tZXRyeS52ZXJ0aWNlc1tpXS5tdWx0aXBseVNjYWxhcigwLjMgKiAoTWF0aC5yYW5kb20oKSAtIDAuNSkgKyAxKTtcclxuXHR9XHJcblx0Ly8gUmVjYWxjdWxhdGUgbm9ybWFsIHZlY3RvcnMgYWNjb3JkaW5nIHRvIHVwZGF0ZWQgdmVydGljZXNcclxuXHRhc3Rlcm9pZEdlb21ldHJ5LmNvbXB1dGVGYWNlTm9ybWFscygpO1xyXG5cdGFzdGVyb2lkR2VvbWV0cnkuY29tcHV0ZVZlcnRleE5vcm1hbHMoKTtcclxuXHJcblx0Ly8gUGVybGluIG5vaXNlIGlzIGFwcGxpZWQgYXMgZGV0YWlsIHRleHR1cmUuXHJcblx0Ly8gSXQncyBhc3luY2hybm9ub3VzIGJlY2F1c2UgaXQncyBzaGFyZWQgYnkgbXVsdGlwbGUgYXN0ZXJvaWRzLlxyXG5cdHZhciBhc3Rlcm9pZFRleHR1cmUgPSBUSFJFRS5JbWFnZVV0aWxzLmxvYWRUZXh0dXJlKHBlcmxpblVybCk7XHJcblx0YXN0ZXJvaWRUZXh0dXJlLndyYXBTID0gVEhSRUUuUmVwZWF0V3JhcHBpbmc7XHJcblx0YXN0ZXJvaWRUZXh0dXJlLndyYXBUID0gVEhSRUUuUmVwZWF0V3JhcHBpbmc7XHJcblx0YXN0ZXJvaWRUZXh0dXJlLnJlcGVhdC5zZXQoNCwgNCk7XHJcblx0dmFyIGFzdGVyb2lkTWF0ZXJpYWwgPSBuZXcgVEhSRUUuTWVzaExhbWJlcnRNYXRlcmlhbCgge1xyXG5cdFx0bWFwOiBhc3Rlcm9pZFRleHR1cmUsXHJcblx0XHRjb2xvcjogMHhmZmFmN2YsIHNoYWRpbmc6IFRIUkVFLlNtb290aFNoYWRpbmcsIG92ZXJkcmF3OiAwLjVcclxuXHR9ICk7XHJcblxyXG5cdC8vIFJhbmRvbWx5IGdlbmVyYXRlIGFzdGVyb2lkc1xyXG5cdGZvciAoIGkgPSAwOyBpIDwgMzsgaSArKyApIHtcclxuXHJcblx0XHR2YXIgYW5nbGUgPSBNYXRoLnJhbmRvbSgpICogTWF0aC5QSSAqIDI7XHJcblx0XHR2YXIgcG9zaXRpb24gPSBuZXcgVEhSRUUuVmVjdG9yMygpO1xyXG5cdFx0cG9zaXRpb24ueCA9IDAuMSAqIChNYXRoLnJhbmRvbSgpIC0gMC41KTtcclxuXHRcdHBvc2l0aW9uLnkgPSAwLjEgKiAoTWF0aC5yYW5kb20oKSAtIDAuNSkgKyAxO1xyXG5cdFx0cG9zaXRpb24ueiA9IDAuMSAqIChNYXRoLnJhbmRvbSgpIC0gMC41KTtcclxuXHRcdHBvc2l0aW9uLmFwcGx5UXVhdGVybmlvbihBeGlzQW5nbGVRdWF0ZXJuaW9uKDAsIDAsIDEsIGFuZ2xlKSk7XHJcblxyXG5cdFx0cG9zaXRpb24ubXVsdGlwbHlTY2FsYXIoMi41KTtcclxuXHRcdHZhciBhc3Rlcm9pZCA9IG5ldyBDZWxlc3RpYWxCb2R5KHN1biwgcG9zaXRpb24sIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIFwiYXN0ZXJvaWRcIiArIGkpO1xyXG5cdFx0YXN0ZXJvaWQudmVsb2NpdHkgPSBuZXcgVEhSRUUuVmVjdG9yMygoTWF0aC5yYW5kb20oKSAtIDAuNSkgKiAwLjMgLSAxLCAoTWF0aC5yYW5kb20oKSAtIDAuNSkgKiAwLjMsIChNYXRoLnJhbmRvbSgpIC0gMC41KSAqIDAuMylcclxuXHRcdFx0Lm11bHRpcGx5U2NhbGFyKE1hdGguc3FydChHTXN1biAvIHBvc2l0aW9uLmxlbmd0aCgpKSkuYXBwbHlRdWF0ZXJuaW9uKEF4aXNBbmdsZVF1YXRlcm5pb24oMCwgMCwgMSwgYW5nbGUpKTtcclxuXHJcblx0XHRhc3Rlcm9pZC5yYWRpdXMgPSBNYXRoLnJhbmRvbSgpICogMSArIDAuMTtcclxuXHRcdC8vIFdlIG5lZWQgbmVzdGVkIE9iamVjdDNEIGZvciBOTElQU1xyXG5cdFx0YXN0ZXJvaWQubW9kZWwgPSBuZXcgVEhSRUUuT2JqZWN0M0QoKTtcclxuXHRcdC8vIFRoZSBpbm5lciBNZXNoIG9iamVjdCBoYXMgc2NhbGUgZGV0ZXJtaW5lZCBieSByYWRpdXNcclxuXHRcdHZhciBzaGFwZSA9IG5ldyBUSFJFRS5NZXNoKCBhc3Rlcm9pZEdlb21ldHJ5LCBhc3Rlcm9pZE1hdGVyaWFsICk7XHJcblx0XHRhc3Rlcm9pZC5tb2RlbC5hZGQoc2hhcGUpO1xyXG5cdFx0dmFyIHJhZGl1c0luQXUgPSB2aWV3U2NhbGUgKiBhc3Rlcm9pZC5yYWRpdXMgLyBBVTtcclxuXHRcdHNoYXBlLnNjYWxlLnNldChyYWRpdXNJbkF1LCByYWRpdXNJbkF1LCByYWRpdXNJbkF1KTtcclxuXHRcdHNoYXBlLnVwLnNldCgwLDAsMSk7XHJcblx0XHRzY2VuZS5hZGQoIGFzdGVyb2lkLm1vZGVsICk7XHJcblxyXG5cdFx0dmFyIG9yYml0TWVzaCA9IG5ldyBUSFJFRS5MaW5lKG9yYml0R2VvbWV0cnksIGFzdGVyb2lkLm9yYml0TWF0ZXJpYWwpO1xyXG5cdFx0YXN0ZXJvaWQub3JiaXQgPSBvcmJpdE1lc2g7XHJcblx0XHRzY2VuZS5hZGQob3JiaXRNZXNoKTtcclxuXHJcblx0XHRhc3Rlcm9pZC5pbml0KCk7XHJcblx0XHRhc3Rlcm9pZC51cGRhdGUoKTtcclxuXHJcblx0fVxyXG5cclxuXHRyZW5kZXJlciA9IG5ldyBUSFJFRS5XZWJHTFJlbmRlcmVyKCk7XHJcblx0cmVuZGVyZXIuc2V0Q2xlYXJDb2xvciggMHgwMDAwMDAgKTtcclxuXHRyZW5kZXJlci5zZXRTaXplKCB3aW5kb3cuaW5uZXJXaWR0aCwgd2luZG93LmlubmVySGVpZ2h0ICk7XHJcblx0cmVuZGVyZXIuYXV0b0NsZWFyID0gZmFsc2U7XHJcblxyXG5cdGNhbWVyYUNvbnRyb2xzID0gbmV3IFRIUkVFLk9yYml0Q29udHJvbHMoY2FtZXJhLCByZW5kZXJlci5kb21FbGVtZW50KTtcclxuXHRjYW1lcmFDb250cm9scy50YXJnZXQuc2V0KCAwLCAwLCAwKTtcclxuXHRjYW1lcmFDb250cm9scy5ub1BhbiA9IHRydWU7XHJcblx0Y2FtZXJhQ29udHJvbHMubWF4RGlzdGFuY2UgPSA0MDAwO1xyXG5cdGNhbWVyYUNvbnRyb2xzLm1pbkRpc3RhbmNlID0gMSAvIEFVO1xyXG5cdGNhbWVyYUNvbnRyb2xzLnpvb21TcGVlZCA9IDUuO1xyXG5cdGNhbWVyYUNvbnRyb2xzLnVwZGF0ZSgpO1xyXG5cclxuXHRjb250YWluZXIuYXBwZW5kQ2hpbGQoIHJlbmRlcmVyLmRvbUVsZW1lbnQgKTtcclxuXHJcblx0c3RhdHMgPSBuZXcgU3RhdHMoKTtcclxuXHRzdGF0cy5kb21FbGVtZW50LnN0eWxlLnBvc2l0aW9uID0gJ2Fic29sdXRlJztcclxuXHRzdGF0cy5kb21FbGVtZW50LnN0eWxlLnRvcCA9ICcwcHgnO1xyXG5cdGNvbnRhaW5lci5hcHBlbmRDaGlsZCggc3RhdHMuZG9tRWxlbWVudCApO1xyXG5cclxuXHR0aW1lc2NhbGVDb250cm9sID0gbmV3IChmdW5jdGlvbigpe1xyXG5cdFx0ZnVuY3Rpb24gY2xpY2tGb3J3YXJkKG51bWJlcil7XHJcblx0XHRcdGlmKHNlbGVjdF9vYmogJiYgMCA8IHNlbGVjdF9vYmoudGhyb3R0bGUpe1xyXG5cdFx0XHRcdG1lc3NhZ2VDb250cm9sLnNldFRleHQoJ1lvdSBjYW5ub3QgdGltZXdhcnAgd2hpbGUgYWNjZWxlcmF0aW5nJyk7XHJcblx0XHRcdFx0cmV0dXJuO1xyXG5cdFx0XHR9XHJcblx0XHRcdGZvcih2YXIgaSA9IDA7IGkgPCBmb3J3YXJkcy5sZW5ndGg7IGkrKylcclxuXHRcdFx0XHRmb3J3YXJkc1tpXS5zcmMgPSBpIDw9IG51bWJlciA/IGZvcndhcmRBY3RpdmVVcmwgOiBmb3J3YXJkSW5hY3RpdmVVcmw7XHJcblx0XHRcdHRleHQuaW5uZXJIVE1MID0gJ1RpbWVzY2FsZTogeCcgKyBzZXJpZXNbbnVtYmVyXTtcclxuXHRcdFx0dGltZXNjYWxlID0gc2VyaWVzW251bWJlcl07XHJcblx0XHRcdHRpbWVJbmRleCA9IG51bWJlcjtcclxuXHRcdH1cclxuXHRcdHRoaXMuZG9tRWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG5cdFx0dGhpcy5kb21FbGVtZW50LnN0eWxlLnBvc2l0aW9uID0gJ2Fic29sdXRlJztcclxuXHRcdHRoaXMuZG9tRWxlbWVudC5zdHlsZS50b3AgPSAnNTBweCc7XHJcblx0XHR0aGlzLmRvbUVsZW1lbnQuc3R5bGUuYmFja2dyb3VuZCA9ICcjN2Y3ZjdmJztcclxuXHRcdHRoaXMuZG9tRWxlbWVudC5zdHlsZS56SW5kZXggPSAxMDtcclxuXHRcdHZhciBmb3J3YXJkcyA9IFtdO1xyXG5cdFx0dmFyIHNlcmllcyA9IFsxLCA1LCAxMCwgMTAwLCAxZTMsIDFlNCwgMWU1LCAxZTZdO1xyXG5cdFx0dmFyIHRpbWVJbmRleCA9IDA7XHJcblx0XHRmb3IodmFyIGkgPSAwOyBpIDwgc2VyaWVzLmxlbmd0aDsgaSsrKXtcclxuXHRcdFx0dmFyIGZvcndhcmQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbWcnKTtcclxuXHRcdFx0Zm9yd2FyZC5zcmMgPSBpIDw9IHRpbWVJbmRleCA/IGZvcndhcmRBY3RpdmVVcmwgOiBmb3J3YXJkSW5hY3RpdmVVcmw7XHJcblx0XHRcdGZvcndhcmQuc3R5bGUud2lkdGggPSAnMTVweCc7XHJcblx0XHRcdGZvcndhcmQuc3R5bGUuaGVpZ2h0ID0gJzIwcHgnO1xyXG5cdFx0XHRmb3J3YXJkLm51bWJlciA9IGk7XHJcblx0XHRcdGZvcndhcmQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbihlKXtjbGlja0ZvcndhcmQodGhpcy5udW1iZXIpfSk7XHJcblx0XHRcdHRoaXMuZG9tRWxlbWVudC5hcHBlbmRDaGlsZChmb3J3YXJkKTtcclxuXHRcdFx0Zm9yd2FyZHMucHVzaChmb3J3YXJkKTtcclxuXHRcdH1cclxuXHRcdHZhciB0ZXh0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcblx0XHR0ZXh0LmlubmVySFRNTCA9ICdUaW1lc2NhbGU6IHgxJztcclxuXHRcdHRoaXMuZG9tRWxlbWVudC5hcHBlbmRDaGlsZCh0ZXh0KTtcclxuXHRcdHZhciBkYXRlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcblx0XHR0aGlzLmRvbUVsZW1lbnQuYXBwZW5kQ2hpbGQoZGF0ZSk7XHJcblx0XHR0aGlzLnNldERhdGUgPSBmdW5jdGlvbih0ZXh0KXtcclxuXHRcdFx0ZGF0ZS5pbm5lckhUTUwgPSB0ZXh0O1xyXG5cdFx0fVxyXG5cdFx0dGhpcy5pbmNyZW1lbnQgPSBmdW5jdGlvbigpe1xyXG5cdFx0XHRpZihzZWxlY3Rfb2JqICYmIDAgPCBzZWxlY3Rfb2JqLnRocm90dGxlKXtcclxuXHRcdFx0XHRtZXNzYWdlQ29udHJvbC5zZXRUZXh0KCdZb3UgY2Fubm90IHRpbWV3YXJwIHdoaWxlIGFjY2VsZXJhdGluZycpO1xyXG5cdFx0XHRcdHJldHVybjtcclxuXHRcdFx0fVxyXG5cdFx0XHRpZih0aW1lSW5kZXggKyAxIDwgc2VyaWVzLmxlbmd0aClcclxuXHRcdFx0XHR0aW1lSW5kZXgrKztcclxuXHRcdFx0Y2xpY2tGb3J3YXJkKHRpbWVJbmRleCk7XHJcblx0XHR9XHJcblx0XHR0aGlzLmRlY3JlbWVudCA9IGZ1bmN0aW9uKCl7XHJcblx0XHRcdGlmKDAgPD0gdGltZUluZGV4IC0gMSlcclxuXHRcdFx0XHR0aW1lSW5kZXgtLTtcclxuXHRcdFx0Y2xpY2tGb3J3YXJkKHRpbWVJbmRleCk7XHJcblx0XHR9XHJcblx0fSkoKTtcclxuXHRjb250YWluZXIuYXBwZW5kQ2hpbGQoIHRpbWVzY2FsZUNvbnRyb2wuZG9tRWxlbWVudCApO1xyXG5cclxuXHR0aHJvdHRsZUNvbnRyb2wgPSBuZXcgKGZ1bmN0aW9uKCl7XHJcblx0XHRmdW5jdGlvbiB1cGRhdGVQb3NpdGlvbihwb3Mpe1xyXG5cdFx0XHRpZigxIDwgdGltZXNjYWxlICYmIDAgPCBwb3Mpe1xyXG5cdFx0XHRcdG1lc3NhZ2VDb250cm9sLnNldFRleHQoJ1lvdSBjYW5ub3QgYWNjZWxlcmF0ZSB3aGlsZSB0aW1ld2FycGluZycpO1xyXG5cdFx0XHRcdHJldHVybjtcclxuXHRcdFx0fVxyXG5cdFx0XHR2aXN1YWxpemVQb3NpdGlvbihwb3MpO1xyXG5cdFx0fVxyXG5cdFx0ZnVuY3Rpb24gdmlzdWFsaXplUG9zaXRpb24ocG9zKXtcclxuXHRcdFx0dmFyIGJhY2tSZWN0ID0gZWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcclxuXHRcdFx0dmFyIHJlY3QgPSB0aHJvdHRsZUJhY2suZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XHJcblx0XHRcdHZhciBoYW5kbGVSZWN0ID0gaGFuZGxlLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xyXG5cdFx0XHR2YXIgbWF4ID0gcmVjdC5oZWlnaHQgLSBoYW5kbGVSZWN0LmhlaWdodDtcclxuXHRcdFx0aGFuZGxlLnN0eWxlLnRvcCA9ICgxIC0gcG9zKSAqIG1heCArIChyZWN0LnRvcCAtIGJhY2tSZWN0LnRvcCkgKyAncHgnO1xyXG5cdFx0XHRpZihzZWxlY3Rfb2JqLnRocm90dGxlID09PSAwLiAmJiAwLiA8IHBvcylcclxuXHRcdFx0XHRzZWxlY3Rfb2JqLmlnbml0aW9uQ291bnQrKztcclxuXHRcdFx0c2VsZWN0X29iai50aHJvdHRsZSA9IHBvcztcclxuXHRcdFx0aWYoc2VsZWN0X29iaiAmJiBzZWxlY3Rfb2JqLmJsYXN0TW9kZWwpe1xyXG5cdFx0XHRcdHNlbGVjdF9vYmouYmxhc3RNb2RlbC52aXNpYmxlID0gMCA8IHNlbGVjdF9vYmoudGhyb3R0bGU7XHJcblx0XHRcdFx0dmFyIHNpemUgPSAoc2VsZWN0X29iai50aHJvdHRsZSArIDAuMSkgLyAxLjE7XHJcblx0XHRcdFx0c2VsZWN0X29iai5ibGFzdE1vZGVsLnNjYWxlLnNldChzaXplLCBzaXplLCBzaXplKTtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdFx0ZnVuY3Rpb24gbW92ZVBvc2l0aW9uKGV2ZW50KXtcclxuXHRcdFx0dmFyIHJlY3QgPSB0aHJvdHRsZUJhY2suZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XHJcblx0XHRcdHZhciBoYW5kbGVSZWN0ID0gaGFuZGxlLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xyXG5cdFx0XHR2YXIgbWF4ID0gcmVjdC5oZWlnaHQgLSBoYW5kbGVSZWN0LmhlaWdodDtcclxuXHRcdFx0dmFyIHBvcyA9IE1hdGgubWluKG1heCwgTWF0aC5tYXgoMCwgKGV2ZW50LmNsaWVudFkgLSByZWN0LnRvcCkgLSBoYW5kbGVSZWN0LmhlaWdodCAvIDIpKTtcclxuXHRcdFx0dXBkYXRlUG9zaXRpb24oMSAtIHBvcyAvIG1heCk7XHJcblx0XHR9XHJcblx0XHR2YXIgZ3VpZGVIZWlnaHQgPSAxMjg7XHJcblx0XHR2YXIgZ3VpZGVXaWR0aCA9IDMyO1xyXG5cdFx0dGhpcy5kb21FbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcblx0XHR0aGlzLmRvbUVsZW1lbnQuc3R5bGUucG9zaXRpb24gPSAnYWJzb2x1dGUnO1xyXG5cdFx0dGhpcy5kb21FbGVtZW50LnN0eWxlLnRvcCA9ICh3aW5kb3cuaW5uZXJIZWlnaHQgLSBndWlkZUhlaWdodCkgKyAncHgnO1xyXG5cdFx0dGhpcy5kb21FbGVtZW50LnN0eWxlLmxlZnQgPSAod2luZG93SGFsZlggLSBuYXZiYWxsUmFkaXVzIC0gZ3VpZGVXaWR0aCkgKyAncHgnO1xyXG5cdFx0dGhpcy5kb21FbGVtZW50LnN0eWxlLmJhY2tncm91bmQgPSAnIzdmN2Y3Zic7XHJcblx0XHR0aGlzLmRvbUVsZW1lbnQuc3R5bGUuekluZGV4ID0gMTA7XHJcblx0XHR2YXIgZWxlbWVudCA9IHRoaXMuZG9tRWxlbWVudDtcclxuXHRcdHZhciBkcmFnZ2luZyA9IGZhbHNlO1xyXG5cdFx0dmFyIHNjb3BlID0gdGhpcztcclxuXHRcdHZhciB0aHJvdHRsZU1heCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2ltZycpO1xyXG5cdFx0dGhyb3R0bGVNYXguc3JjID0gdGhyb3R0bGVNYXhVcmw7XHJcblx0XHR0aHJvdHRsZU1heC5zdHlsZS5wb3NpdGlvbiA9IFwiYWJzb2x1dGVcIjtcclxuXHRcdHRocm90dGxlTWF4LnN0eWxlLmxlZnQgPSAnMHB4JztcclxuXHRcdHRocm90dGxlTWF4LnN0eWxlLnRvcCA9ICcwcHgnO1xyXG5cdFx0dGhyb3R0bGVNYXgub25tb3VzZWRvd24gPSBmdW5jdGlvbihldmVudCl7XHJcblx0XHRcdHNjb3BlLnNldFRocm90dGxlKDEpO1xyXG5cdFx0fTtcclxuXHRcdHRocm90dGxlTWF4Lm9uZHJhZ3N0YXJ0ID0gZnVuY3Rpb24oZXZlbnQpe1xyXG5cdFx0XHRldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG5cdFx0fTtcclxuXHRcdHRoaXMuZG9tRWxlbWVudC5hcHBlbmRDaGlsZCh0aHJvdHRsZU1heCk7XHJcblx0XHR2YXIgdGhyb3R0bGVCYWNrID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW1nJyk7XHJcblx0XHR0aHJvdHRsZUJhY2suc3JjID0gdGhyb3R0bGVCYWNrVXJsO1xyXG5cdFx0dGhyb3R0bGVCYWNrLnN0eWxlLnBvc2l0aW9uID0gXCJhYnNvbHV0ZVwiO1xyXG5cdFx0dGhyb3R0bGVCYWNrLnN0eWxlLmxlZnQgPSAnMHB4JztcclxuXHRcdHRocm90dGxlQmFjay5zdHlsZS50b3AgPSAnMjVweCc7XHJcblx0XHR0aHJvdHRsZUJhY2sub25tb3VzZWRvd24gPSBmdW5jdGlvbihldmVudCl7XHJcblx0XHRcdGRyYWdnaW5nID0gdHJ1ZTtcclxuXHRcdFx0bW92ZVBvc2l0aW9uKGV2ZW50KTtcclxuXHRcdH07XHJcblx0XHR0aHJvdHRsZUJhY2sub25tb3VzZW1vdmUgPSBmdW5jdGlvbihldmVudCl7XHJcblx0XHRcdGlmKGRyYWdnaW5nICYmIGV2ZW50LmJ1dHRvbnMgJiAxKVxyXG5cdFx0XHRcdG1vdmVQb3NpdGlvbihldmVudCk7XHJcblx0XHR9O1xyXG5cdFx0dGhyb3R0bGVCYWNrLm9ubW91c2V1cCA9IGZ1bmN0aW9uKGV2ZW50KXtcclxuXHRcdFx0ZHJhZ2dpbmcgPSBmYWxzZTtcclxuXHRcdH1cclxuXHRcdHRocm90dGxlQmFjay5kcmFnZ2FibGUgPSB0cnVlO1xyXG5cdFx0dGhyb3R0bGVCYWNrLm9uZHJhZ3N0YXJ0ID0gZnVuY3Rpb24oZXZlbnQpe1xyXG5cdFx0XHRldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG5cdFx0fTtcclxuXHRcdHRoaXMuZG9tRWxlbWVudC5hcHBlbmRDaGlsZCh0aHJvdHRsZUJhY2spO1xyXG5cdFx0dmFyIHRocm90dGxlTWluID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW1nJyk7XHJcblx0XHR0aHJvdHRsZU1pbi5zcmMgPSB0aHJvdHRsZU1pblVybDtcclxuXHRcdHRocm90dGxlTWluLnN0eWxlLnBvc2l0aW9uID0gXCJhYnNvbHV0ZVwiO1xyXG5cdFx0dGhyb3R0bGVNaW4uc3R5bGUubGVmdCA9ICcwcHgnO1xyXG5cdFx0dGhyb3R0bGVNaW4uc3R5bGUudG9wID0gJzEwNnB4JztcclxuXHRcdHRocm90dGxlTWluLm9ubW91c2Vkb3duID0gZnVuY3Rpb24oZXZlbnQpe1xyXG5cdFx0XHRzY29wZS5zZXRUaHJvdHRsZSgwKTtcclxuXHRcdH07XHJcblx0XHR0aHJvdHRsZU1pbi5vbmRyYWdzdGFydCA9IGZ1bmN0aW9uKGV2ZW50KXtcclxuXHRcdFx0ZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuXHRcdH07XHJcblx0XHR0aGlzLmRvbUVsZW1lbnQuYXBwZW5kQ2hpbGQodGhyb3R0bGVNaW4pO1xyXG5cdFx0dmFyIGhhbmRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2ltZycpO1xyXG5cdFx0aGFuZGxlLnNyYyA9IHRocm90dGxlSGFuZGxlVXJsO1xyXG5cdFx0aGFuZGxlLnN0eWxlLnBvc2l0aW9uID0gJ2Fic29sdXRlJztcclxuXHRcdGhhbmRsZS5zdHlsZS50b3AgPSAoZ3VpZGVIZWlnaHQgLSAxNikgKyAncHgnO1xyXG5cdFx0aGFuZGxlLnN0eWxlLmxlZnQgPSAnMHB4JztcclxuXHRcdGhhbmRsZS5vbm1vdXNlbW92ZSA9IHRocm90dGxlQmFjay5vbm1vdXNlbW92ZTtcclxuXHRcdGhhbmRsZS5vbm1vdXNlZG93biA9IHRocm90dGxlQmFjay5vbm1vdXNlZG93bjtcclxuXHRcdGhhbmRsZS5vbm1vdXNldXAgPSB0aHJvdHRsZUJhY2sub25tb3VzZXVwO1xyXG5cdFx0aGFuZGxlLm9uZHJhZ3N0YXJ0ID0gdGhyb3R0bGVCYWNrLm9uZHJhZ3N0YXJ0O1xyXG5cdFx0dGhpcy5kb21FbGVtZW50LmFwcGVuZENoaWxkKGhhbmRsZSk7XHJcblx0XHR0aGlzLmluY3JlbWVudCA9IGZ1bmN0aW9uKGRlbHRhKXtcclxuXHRcdFx0aWYoc2VsZWN0X29iailcclxuXHRcdFx0XHR1cGRhdGVQb3NpdGlvbihNYXRoLm1pbigxLCBzZWxlY3Rfb2JqLnRocm90dGxlICsgZGVsdGEpKTtcclxuXHRcdH1cclxuXHRcdHRoaXMuZGVjcmVtZW50ID0gZnVuY3Rpb24oZGVsdGEpe1xyXG5cdFx0XHRpZihzZWxlY3Rfb2JqKVxyXG5cdFx0XHRcdHVwZGF0ZVBvc2l0aW9uKE1hdGgubWF4KDAsIHNlbGVjdF9vYmoudGhyb3R0bGUgLSBkZWx0YSkpO1xyXG5cdFx0fVxyXG5cdFx0dGhpcy5zZXRUaHJvdHRsZSA9IGZ1bmN0aW9uKHZhbHVlKXtcclxuXHRcdFx0dXBkYXRlUG9zaXRpb24odmFsdWUpO1xyXG5cdFx0fVxyXG5cdFx0d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIGZ1bmN0aW9uKCl7XHJcblx0XHRcdGVsZW1lbnQuc3R5bGUudG9wID0gKHdpbmRvdy5pbm5lckhlaWdodCAtIGd1aWRlSGVpZ2h0KSArICdweCc7XHJcblx0XHRcdGVsZW1lbnQuc3R5bGUubGVmdCA9ICh3aW5kb3cuaW5uZXJXaWR0aCAvIDIgLSBuYXZiYWxsUmFkaXVzIC0gZ3VpZGVXaWR0aCkgKyAncHgnO1xyXG5cdFx0fSk7XHJcblx0XHR3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignbG9hZCcsIGZ1bmN0aW9uKCl7XHJcblx0XHRcdHZpc3VhbGl6ZVBvc2l0aW9uKHNlbGVjdF9vYmoudGhyb3R0bGUpO1xyXG5cdFx0fSk7XHJcblx0fSkoKTtcclxuXHRjb250YWluZXIuYXBwZW5kQ2hpbGQoIHRocm90dGxlQ29udHJvbC5kb21FbGVtZW50ICk7XHJcblxyXG5cdHZhciByb3RhdGlvbkNvbnRyb2wgPSBuZXcgKGZ1bmN0aW9uKCl7XHJcblx0XHRmdW5jdGlvbiBzZXRTaXplKCl7XHJcblx0XHRcdHJvb3RFbGVtZW50LnN0eWxlLnRvcCA9ICh3aW5kb3cuaW5uZXJIZWlnaHQgLSAyICogbmF2YmFsbFJhZGl1cykgKyAncHgnO1xyXG5cdFx0XHRyb290RWxlbWVudC5zdHlsZS5sZWZ0ID0gKHdpbmRvdy5pbm5lcldpZHRoIC8gMiAtIG5hdmJhbGxSYWRpdXMpICsgJ3B4JztcclxuXHRcdH1cclxuXHJcblx0XHRmdW5jdGlvbiBhYnNvcmJFdmVudF8oZXZlbnQpIHtcclxuXHRcdFx0dmFyIGUgPSBldmVudCB8fCB3aW5kb3cuZXZlbnQ7XHJcblx0XHRcdGUucHJldmVudERlZmF1bHQgJiYgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG5cdFx0XHRlLnN0b3BQcm9wYWdhdGlvbiAmJiBlLnN0b3BQcm9wYWdhdGlvbigpO1xyXG5cdFx0XHRlLmNhbmNlbEJ1YmJsZSA9IHRydWU7XHJcblx0XHRcdGUucmV0dXJuVmFsdWUgPSBmYWxzZTtcclxuXHRcdFx0cmV0dXJuIGZhbHNlO1xyXG5cdFx0fVxyXG5cclxuXHRcdGZ1bmN0aW9uIGFkZEFycm93KHNyYywga2V5LCBsZWZ0LCB0b3Ape1xyXG5cdFx0XHR2YXIgYnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW1nJyk7XHJcblx0XHRcdGJ1dHRvbi5zcmMgPSBzcmM7XHJcblx0XHRcdGJ1dHRvbi53aWR0aCA9IGJ1dHRvbldpZHRoO1xyXG5cdFx0XHRidXR0b24uaGVpZ2h0ID0gYnV0dG9uSGVpZ2h0O1xyXG5cdFx0XHRidXR0b24uc3R5bGUucG9zaXRpb24gPSAnYWJzb2x1dGUnO1xyXG5cdFx0XHRidXR0b24uc3R5bGUudG9wID0gdG9wICsgJ3B4JztcclxuXHRcdFx0YnV0dG9uLnN0eWxlLmxlZnQgPSBsZWZ0ICsgJ3B4JztcclxuXHRcdFx0YnV0dG9uLm9ubW91c2Vkb3duID0gZnVuY3Rpb24oZXZlbnQpe1xyXG5cdFx0XHRcdGJ1dHRvbnNba2V5XSA9IHRydWU7XHJcblx0XHRcdH07XHJcblx0XHRcdGJ1dHRvbi5vbm1vdXNldXAgPSBmdW5jdGlvbihldmVudCl7XHJcblx0XHRcdFx0YnV0dG9uc1trZXldID0gZmFsc2U7XHJcblx0XHRcdFx0YnV0dG9uLnN0eWxlLmJveFNoYWRvdyA9ICcnO1xyXG5cdFx0XHR9XHJcblx0XHRcdGJ1dHRvbi5vbmRyYWdzdGFydCA9IGZ1bmN0aW9uKGV2ZW50KXtcclxuXHRcdFx0XHRldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG5cdFx0XHR9O1xyXG5cdFx0XHRidXR0b24ub250b3VjaHN0YXJ0ID0gZnVuY3Rpb24oZXZlbnQpe1xyXG5cdFx0XHRcdGJ1dHRvbnNba2V5XSA9IHRydWU7XHJcblx0XHRcdFx0ZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuXHRcdFx0XHRldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcclxuXHRcdFx0fTtcclxuXHRcdFx0YnV0dG9uLm9udG91Y2htb3ZlID0gYWJzb3JiRXZlbnRfO1xyXG5cdFx0XHRidXR0b24ub250b3VjaGVuZCA9IGZ1bmN0aW9uKGV2ZW50KXtcclxuXHRcdFx0XHRidXR0b25zW2tleV0gPSBmYWxzZTtcclxuXHRcdFx0XHRidXR0b24uc3R5bGUuYm94U2hhZG93ID0gJyc7XHJcblx0XHRcdFx0ZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuXHRcdFx0XHRldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcclxuXHRcdFx0fTtcclxuXHRcdFx0YnV0dG9uLm9udG91Y2hjYW5jZWwgPSBhYnNvcmJFdmVudF87XHJcblx0XHRcdGVsZW1lbnQuYXBwZW5kQ2hpbGQoYnV0dG9uKTtcclxuXHRcdH1cclxuXHRcdHZhciBidXR0b25IZWlnaHQgPSAzMjtcclxuXHRcdHZhciBidXR0b25XaWR0aCA9IDMyO1xyXG5cdFx0dGhpcy5kb21FbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcblx0XHR2YXIgcm9vdEVsZW1lbnQgPSB0aGlzLmRvbUVsZW1lbnQ7XHJcblx0XHR0aGlzLmRvbUVsZW1lbnQuc3R5bGUucG9zaXRpb24gPSAnYWJzb2x1dGUnO1xyXG5cdFx0dGhpcy5kb21FbGVtZW50LnN0eWxlLndpZHRoID0gKG5hdmJhbGxSYWRpdXMgKiAyKSArICdweCc7XHJcblx0XHR0aGlzLmRvbUVsZW1lbnQuc3R5bGUuaGVpZ2h0ID0gKG5hdmJhbGxSYWRpdXMgKiAyKSArICdweCc7XHJcblx0XHRzZXRTaXplKCk7XHJcblx0XHR0aGlzLmRvbUVsZW1lbnQuc3R5bGUuekluZGV4ID0gNTtcclxuXHRcdC8vIEludHJvZHVjZSBpbnRlcm5hbCAnZGl2JyBiZWNhdXNlIHRoZSBvdXRlciAnZGl2JyBjYW5ub3QgYmVcclxuXHRcdC8vIGhpZGRlbiBzaW5jZSBpdCBuZWVkIHRvIHJlY2VpdmUgbW91c2VlbnRlciBldmVudC5cclxuXHRcdHZhciBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcblx0XHRlbGVtZW50LnN0eWxlLndpZHRoID0gJzEwMCUnO1xyXG5cdFx0ZWxlbWVudC5zdHlsZS5oZWlnaHQgPSAnMTAwJSc7XHJcblx0XHRlbGVtZW50LnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XHJcblx0XHR0aGlzLmRvbUVsZW1lbnQuYXBwZW5kQ2hpbGQoZWxlbWVudCk7XHJcblx0XHR0aGlzLmRvbUVsZW1lbnQub25tb3VzZWVudGVyID0gZnVuY3Rpb24oZXZlbnQpe1xyXG5cdFx0XHRlbGVtZW50LnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xyXG5cdFx0fTtcclxuXHRcdHRoaXMuZG9tRWxlbWVudC5vbm1vdXNlbGVhdmUgPSBmdW5jdGlvbihldmVudCl7XHJcblx0XHRcdGVsZW1lbnQuc3R5bGUuZGlzcGxheSA9ICdub25lJztcclxuXHRcdFx0dXAgPSBkb3duID0gbGVmdCA9IHJpZ2h0ID0gZmFsc2U7XHJcblx0XHR9O1xyXG5cdFx0YWRkQXJyb3cocm90YXRlVXBVcmwsICd1cCcsIG5hdmJhbGxSYWRpdXMgLSBidXR0b25XaWR0aCAvIDIsIDApO1xyXG5cdFx0YWRkQXJyb3cocm90YXRlRG93blVybCwgJ2Rvd24nLCBuYXZiYWxsUmFkaXVzIC0gYnV0dG9uV2lkdGggLyAyLCAyICogbmF2YmFsbFJhZGl1cyAtIGJ1dHRvbkhlaWdodCk7XHJcblx0XHRhZGRBcnJvdyhyb3RhdGVMZWZ0VXJsLCAnbGVmdCcsIDAsIG5hdmJhbGxSYWRpdXMgLSBidXR0b25IZWlnaHQgLyAyKTtcclxuXHRcdGFkZEFycm93KHJvdGF0ZVJpZ2h0VXJsLCAncmlnaHQnLCAyICogbmF2YmFsbFJhZGl1cyAtIGJ1dHRvbldpZHRoLCBuYXZiYWxsUmFkaXVzIC0gYnV0dG9uSGVpZ2h0IC8gMik7XHJcblx0XHRhZGRBcnJvdyhyb3RhdGVDd1VybCwgJ2Nsb2Nrd2lzZScsIDIgKiBuYXZiYWxsUmFkaXVzIC0gYnV0dG9uV2lkdGgsIDApO1xyXG5cdFx0YWRkQXJyb3cocm90YXRlQ2N3VXJsLCAnY291bnRlcmNsb2Nrd2lzZScsIDAsIDApO1xyXG5cdFx0d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIHNldFNpemUpO1xyXG5cdH0pKCk7XHJcblx0Y29udGFpbmVyLmFwcGVuZENoaWxkKCByb3RhdGlvbkNvbnRyb2wuZG9tRWxlbWVudCApO1xyXG5cclxuXHRzcGVlZENvbnRyb2wgPSBuZXcgKGZ1bmN0aW9uKCl7XHJcblx0XHRmdW5jdGlvbiBzZXRTaXplKCl7XHJcblx0XHRcdGVsZW1lbnQuc3R5bGUudG9wID0gKHdpbmRvdy5pbm5lckhlaWdodCAtIDIgKiBuYXZiYWxsUmFkaXVzIC0gMzIpICsgJ3B4JztcclxuXHRcdFx0ZWxlbWVudC5zdHlsZS5sZWZ0ID0gKHdpbmRvdy5pbm5lcldpZHRoIC8gMiAtIGVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkud2lkdGggLyAyKSArICdweCc7XHJcblx0XHR9XHJcblx0XHR2YXIgYnV0dG9uSGVpZ2h0ID0gMzI7XHJcblx0XHR2YXIgYnV0dG9uV2lkdGggPSAzMjtcclxuXHRcdHRoaXMuZG9tRWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG5cdFx0dmFyIGVsZW1lbnQgPSB0aGlzLmRvbUVsZW1lbnQ7XHJcblx0XHRlbGVtZW50LnN0eWxlLnBvc2l0aW9uID0gJ2Fic29sdXRlJztcclxuXHRcdHNldFNpemUoKTtcclxuXHRcdGVsZW1lbnQuc3R5bGUuekluZGV4ID0gNztcclxuXHRcdGVsZW1lbnQuc3R5bGUuYmFja2dyb3VuZCA9ICdyZ2JhKDAsIDAsIDAsIDAuNSknO1xyXG5cdFx0d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIHNldFNpemUpO1xyXG5cdFx0dmFyIHRpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcblx0XHR0aXRsZS5pbm5lckhUTUwgPSAnT3JiaXQnO1xyXG5cdFx0ZWxlbWVudC5hcHBlbmRDaGlsZCh0aXRsZSk7XHJcblx0XHR2YXIgdmFsdWVFbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcblx0XHRlbGVtZW50LmFwcGVuZENoaWxkKHZhbHVlRWxlbWVudCk7XHJcblx0XHR0aGlzLnNldFNwZWVkID0gZnVuY3Rpb24oKXtcclxuXHRcdFx0aWYoc2VsZWN0X29iail7XHJcblx0XHRcdFx0dmFyIHZhbHVlID0gc2VsZWN0X29iai52ZWxvY2l0eS5sZW5ndGgoKSAqIEFVO1xyXG5cdFx0XHRcdGlmKHZhbHVlIDwgMSlcclxuXHRcdFx0XHRcdHZhbHVlRWxlbWVudC5pbm5lckhUTUwgPSAodmFsdWUgKiAxMDAwKS50b0ZpeGVkKDQpICsgJ20vcyc7XHJcblx0XHRcdFx0ZWxzZVxyXG5cdFx0XHRcdFx0dmFsdWVFbGVtZW50LmlubmVySFRNTCA9IHZhbHVlLnRvRml4ZWQoNCkgKyAna20vcyc7XHJcblx0XHRcdH1cclxuXHRcdFx0ZWxzZVxyXG5cdFx0XHRcdHZhbHVlRWxlbWVudC5pbm5lckhUTUwgPSAnJztcclxuXHRcdFx0ZWxlbWVudC5zdHlsZS5sZWZ0ID0gKHdpbmRvdy5pbm5lcldpZHRoIC8gMiAtIGVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkud2lkdGggLyAyKSArICdweCc7XHJcblx0XHR9XHJcblx0fSkoKTtcclxuXHRjb250YWluZXIuYXBwZW5kQ2hpbGQoIHNwZWVkQ29udHJvbC5kb21FbGVtZW50ICk7XHJcblxyXG5cdG9yYml0YWxFbGVtZW50Q29udHJvbCA9IG5ldyAoZnVuY3Rpb24oKXtcclxuXHRcdHZhciBidXR0b25IZWlnaHQgPSAzMjtcclxuXHRcdHZhciBidXR0b25XaWR0aCA9IDMyO1xyXG5cdFx0dGhpcy5kb21FbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcblx0XHR2YXIgZWxlbWVudCA9IHRoaXMuZG9tRWxlbWVudDtcclxuXHRcdGVsZW1lbnQuc3R5bGUucG9zaXRpb24gPSAnYWJzb2x1dGUnO1xyXG5cdFx0ZWxlbWVudC5zdHlsZS50ZXh0QWxpZ24gPSAnbGVmdCc7XHJcblx0XHRlbGVtZW50LnN0eWxlLnRvcCA9IDEyMCArICdweCc7XHJcblx0XHRlbGVtZW50LnN0eWxlLmxlZnQgPSAwICsgJ3B4JztcclxuXHRcdGVsZW1lbnQuc3R5bGUuekluZGV4ID0gNztcclxuXHRcdHZhciB2aXNpYmxlID0gZmFsc2U7XHJcblx0XHR2YXIgaWNvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2ltZycpO1xyXG5cdFx0aWNvbi5zcmMgPSBvcmJpdEljb25Vcmw7XHJcblx0XHRlbGVtZW50LmFwcGVuZENoaWxkKGljb24pO1xyXG5cclxuXHRcdHZhciB0aXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG5cdFx0dGl0bGUuaW5uZXJIVE1MID0gJ09yYml0YWwgRWxlbWVudHMnO1xyXG5cdFx0dGl0bGUuc3R5bGUuZGlzcGxheSA9ICdub25lJztcclxuXHRcdGVsZW1lbnQuYXBwZW5kQ2hpbGQodGl0bGUpO1xyXG5cclxuXHRcdHZhciB2YWx1ZUVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuXHRcdGVsZW1lbnQuYXBwZW5kQ2hpbGQodmFsdWVFbGVtZW50KTtcclxuXHRcdHZhbHVlRWxlbWVudC5pZCA9ICdvcmJpdCc7XHJcblx0XHR2YWx1ZUVsZW1lbnQuc3R5bGUuZGlzcGxheSA9ICdub25lJztcclxuXHJcblx0XHQvLyBSZWdpc3RlciBldmVudCBoYW5kbGVyc1xyXG5cdFx0aWNvbi5vbmRyYWdzdGFydCA9IGZ1bmN0aW9uKGV2ZW50KXtcclxuXHRcdFx0ZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuXHRcdH07XHJcblx0XHRpY29uLm9uY2xpY2sgPSBmdW5jdGlvbihldmVudCl7XHJcblx0XHRcdHZpc2libGUgPSAhdmlzaWJsZTtcclxuXHRcdFx0aWYodmlzaWJsZSl7XHJcblx0XHRcdFx0dmFsdWVFbGVtZW50LnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xyXG5cdFx0XHRcdGVsZW1lbnQuc3R5bGUuYmFja2dyb3VuZCA9ICdyZ2JhKDAsIDAsIDAsIDAuNSknO1xyXG5cdFx0XHR9XHJcblx0XHRcdGVsc2V7XHJcblx0XHRcdFx0dmFsdWVFbGVtZW50LnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XHJcblx0XHRcdFx0ZWxlbWVudC5zdHlsZS5iYWNrZ3JvdW5kID0gJ3JnYmEoMCwgMCwgMCwgMCknO1xyXG5cdFx0XHR9XHJcblx0XHR9O1xyXG5cdFx0aWNvbi5vbm1vdXNlZW50ZXIgPSBmdW5jdGlvbihldmVudCl7XHJcblx0XHRcdGlmKCF2aXNpYmxlKVxyXG5cdFx0XHRcdHRpdGxlLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xyXG5cdFx0fTtcclxuXHRcdGljb24ub25tb3VzZWxlYXZlID0gZnVuY3Rpb24oZXZlbnQpe1xyXG5cdFx0XHRpZighdmlzaWJsZSlcclxuXHRcdFx0XHR0aXRsZS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xyXG5cdFx0fTtcclxuXHJcblx0XHR0aGlzLnNldFRleHQgPSBmdW5jdGlvbih0ZXh0KXtcclxuXHRcdFx0dmFsdWVFbGVtZW50LmlubmVySFRNTCA9IHRleHQ7XHJcblx0XHR9XHJcblx0fSkoKTtcclxuXHRjb250YWluZXIuYXBwZW5kQ2hpbGQoIG9yYml0YWxFbGVtZW50Q29udHJvbC5kb21FbGVtZW50ICk7XHJcblxyXG5cdGZ1bmN0aW9uIHJpZ2h0VGl0bGVTZXRTaXplKHRpdGxlLCBpY29uKXtcclxuXHRcdHZhciByID0gdGl0bGUuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XHJcblx0XHR2YXIgaWNvblJlY3QgPSBpY29uLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpXHJcblx0XHR0aXRsZS5zdHlsZS50b3AgPSAoaWNvblJlY3QuaGVpZ2h0IC0gci5oZWlnaHQpICsgJ3B4JztcclxuXHRcdHRpdGxlLnN0eWxlLnJpZ2h0ID0gaWNvblJlY3Qud2lkdGggKyAncHgnO1xyXG5cdH1cclxuXHJcblx0c3RhdHNDb250cm9sID0gbmV3IChmdW5jdGlvbigpe1xyXG5cdFx0ZnVuY3Rpb24gc2V0U2l6ZSgpe1xyXG5cdFx0XHRlbGVtZW50LnN0eWxlLmxlZnQgPSAod2luZG93LmlubmVyV2lkdGggLSBidXR0b25XaWR0aCkgKyAncHgnO1xyXG5cdFx0XHRyaWdodFRpdGxlU2V0U2l6ZSh0aXRsZSwgaWNvbik7XHJcblx0XHR9XHJcblx0XHR2YXIgYnV0dG9uVG9wID0gMTIwO1xyXG5cdFx0dmFyIGJ1dHRvbkhlaWdodCA9IDMyO1xyXG5cdFx0dmFyIGJ1dHRvbldpZHRoID0gMzI7XHJcblx0XHR0aGlzLmRvbUVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuXHRcdHZhciBlbGVtZW50ID0gdGhpcy5kb21FbGVtZW50O1xyXG5cdFx0ZWxlbWVudC5zdHlsZS5wb3NpdGlvbiA9ICdhYnNvbHV0ZSc7XHJcblx0XHRlbGVtZW50LnN0eWxlLnRleHRBbGlnbiA9ICdsZWZ0JztcclxuXHRcdGVsZW1lbnQuc3R5bGUudG9wID0gYnV0dG9uVG9wICsgJ3B4JztcclxuXHRcdGVsZW1lbnQuc3R5bGUubGVmdCA9IDAgKyAncHgnO1xyXG5cdFx0ZWxlbWVudC5zdHlsZS56SW5kZXggPSA3O1xyXG5cdFx0dmFyIHZpc2libGUgPSBmYWxzZTtcclxuXHRcdHZhciBpY29uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW1nJyk7XHJcblx0XHRpY29uLnNyYyA9IHN0YXRzSWNvblVybDtcclxuXHRcdGljb24uc3R5bGUud2lkdGggPSBidXR0b25XaWR0aCArICdweCc7XHJcblx0XHRpY29uLnN0eWxlLmhlaWdodCA9IGJ1dHRvbkhlaWdodCArICdweCc7XHJcblx0XHRlbGVtZW50LmFwcGVuZENoaWxkKGljb24pO1xyXG5cclxuXHRcdHZhciB0aXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG5cdFx0dGl0bGUuaW5uZXJIVE1MID0gJ1N0YXRpc3RpY3MnO1xyXG5cdFx0dGl0bGUuc3R5bGUuZGlzcGxheSA9ICdub25lJztcclxuXHRcdHRpdGxlLnN0eWxlLnBvc2l0aW9uID0gJ2Fic29sdXRlJztcclxuXHRcdHRpdGxlLnN0eWxlLnRvcCA9IGJ1dHRvblRvcCArICdweCc7XHJcblx0XHR0aXRsZS5zdHlsZS5iYWNrZ3JvdW5kID0gJ3JnYmEoMCwgMCwgMCwgMC41KSc7XHJcblx0XHR0aXRsZS5zdHlsZS56SW5kZXggPSAyMDtcclxuXHRcdGVsZW1lbnQuYXBwZW5kQ2hpbGQodGl0bGUpO1xyXG5cclxuXHRcdHZhciB2YWx1ZUVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuXHRcdGVsZW1lbnQuYXBwZW5kQ2hpbGQodmFsdWVFbGVtZW50KTtcclxuXHRcdHZhbHVlRWxlbWVudC5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xyXG5cdFx0dmFsdWVFbGVtZW50LnN0eWxlLnBvc2l0aW9uID0gJ2Fic29sdXRlJztcclxuXHRcdHZhbHVlRWxlbWVudC5zdHlsZS5iYWNrZ3JvdW5kID0gJ3JnYmEoMCwgMCwgMCwgMC41KSc7XHJcblx0XHR2YWx1ZUVsZW1lbnQuc3R5bGUuYm9yZGVyID0gJzNweCByaWRnZSAjN2YzZjNmJztcclxuXHRcdHZhbHVlRWxlbWVudC5zdHlsZS5wYWRkaW5nID0gJzNweCc7XHJcblx0XHR2YXIgdmFsdWVFbGVtZW50cyA9IFtdO1xyXG5cdFx0Zm9yKHZhciBpID0gMDsgaSA8IDM7IGkrKyl7XHJcblx0XHRcdHZhciB0aXRsZUVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuXHRcdFx0dGl0bGVFbGVtZW50LmlubmVySFRNTCA9IFsnTWlzc2lvbiBUaW1lJywgJ0RlbHRhLVYnLCAnSWduaXRpb24mbmJzcDtDb3VudCddW2ldO1xyXG5cdFx0XHR0aXRsZUVsZW1lbnQuc3R5bGUuZm9udFdlaWdodCA9ICdib2xkJztcclxuXHRcdFx0dGl0bGVFbGVtZW50LnN0eWxlLnBhZGRpbmdSaWdodCA9ICcxZW0nO1xyXG5cdFx0XHR2YWx1ZUVsZW1lbnQuYXBwZW5kQ2hpbGQodGl0bGVFbGVtZW50KTtcclxuXHRcdFx0dmFyIHZhbHVlRWxlbWVudENoaWxkID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcblx0XHRcdHZhbHVlRWxlbWVudENoaWxkLnN0eWxlLnRleHRBbGlnbiA9ICdyaWdodCc7XHJcblx0XHRcdHZhbHVlRWxlbWVudHMucHVzaCh2YWx1ZUVsZW1lbnRDaGlsZCk7XHJcblx0XHRcdHZhbHVlRWxlbWVudC5hcHBlbmRDaGlsZCh2YWx1ZUVsZW1lbnRDaGlsZCk7XHJcblx0XHR9XHJcblxyXG5cdFx0c2V0U2l6ZSgpO1xyXG5cclxuXHRcdC8vIFJlZ2lzdGVyIGV2ZW50IGhhbmRsZXJzXHJcblx0XHR3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgc2V0U2l6ZSk7XHJcblx0XHRpY29uLm9uZHJhZ3N0YXJ0ID0gZnVuY3Rpb24oZXZlbnQpe1xyXG5cdFx0XHRldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG5cdFx0fTtcclxuXHRcdGljb24ub25jbGljayA9IGZ1bmN0aW9uKGV2ZW50KXtcclxuXHRcdFx0dmlzaWJsZSA9ICF2aXNpYmxlO1xyXG5cdFx0XHRpZih2aXNpYmxlKXtcclxuXHRcdFx0XHR2YWx1ZUVsZW1lbnQuc3R5bGUuZGlzcGxheSA9ICdibG9jayc7XHJcblx0XHRcdFx0ZWxlbWVudC5zdHlsZS5iYWNrZ3JvdW5kID0gJ3JnYmEoMCwgMCwgMCwgMC41KSc7XHJcblx0XHRcdH1cclxuXHRcdFx0ZWxzZXtcclxuXHRcdFx0XHR2YWx1ZUVsZW1lbnQuc3R5bGUuZGlzcGxheSA9ICdub25lJztcclxuXHRcdFx0XHRlbGVtZW50LnN0eWxlLmJhY2tncm91bmQgPSAncmdiYSgwLCAwLCAwLCAwKSc7XHJcblx0XHRcdFx0c2V0dGluZ3NDb250cm9sLmRvbUVsZW1lbnQuc3R5bGUudG9wID0gZWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS5ib3R0b20gKyAncHgnO1xyXG5cdFx0XHR9XHJcblx0XHR9O1xyXG5cdFx0aWNvbi5vbm1vdXNlZW50ZXIgPSBmdW5jdGlvbihldmVudCl7XHJcblx0XHRcdGlmKCF2aXNpYmxlKVxyXG5cdFx0XHRcdHRpdGxlLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xyXG5cdFx0XHRyaWdodFRpdGxlU2V0U2l6ZSh0aXRsZSwgaWNvbik7XHJcblx0XHR9O1xyXG5cdFx0aWNvbi5vbm1vdXNlbGVhdmUgPSBmdW5jdGlvbihldmVudCl7XHJcblx0XHRcdGlmKCF2aXNpYmxlKVxyXG5cdFx0XHRcdHRpdGxlLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XHJcblx0XHR9O1xyXG5cclxuXHRcdHRoaXMuc2V0VGV4dCA9IGZ1bmN0aW9uKHRleHQpe1xyXG5cdFx0XHRpZighdmlzaWJsZSlcclxuXHRcdFx0XHRyZXR1cm47XHJcblx0XHRcdGlmKCFzZWxlY3Rfb2JqKXtcclxuXHRcdFx0XHR2YWx1ZUVsZW1lbnRzWzNdLmlubmVySFRNTCA9IHZhbHVlRWxlbWVudHNbMl0gPSAnJztcclxuXHRcdFx0XHRyZXR1cm47XHJcblx0XHRcdH1cclxuXHRcdFx0dmFyIHRvdGFsU2Vjb25kcyA9IChzaW1UaW1lLmdldFRpbWUoKSAtIHN0YXJ0VGltZS5nZXRUaW1lKCkpIC8gMWUzO1xyXG5cdFx0XHR2YXIgc2Vjb25kcyA9IE1hdGguZmxvb3IodG90YWxTZWNvbmRzKSAlIDYwO1xyXG5cdFx0XHR2YXIgbWludXRlcyA9IE1hdGguZmxvb3IodG90YWxTZWNvbmRzIC8gNjApICUgNjA7XHJcblx0XHRcdHZhciBob3VycyA9IE1hdGguZmxvb3IodG90YWxTZWNvbmRzIC8gNjAgLyA2MCkgJSAyNDtcclxuXHRcdFx0dmFyIGRheXMgPSBNYXRoLmZsb29yKHRvdGFsU2Vjb25kcyAvIDYwIC8gNjAgLyAyNCk7XHJcblx0XHRcdHZhbHVlRWxlbWVudHNbMF0uaW5uZXJIVE1MID0gZGF5cyArICdkICcgKyB6ZXJvZmlsbChob3VycykgKyAnOicgKyB6ZXJvZmlsbChtaW51dGVzKSArICc6JyArIHplcm9maWxsKHNlY29uZHMpO1xyXG5cdFx0XHR2YXIgZGVsdGFWa20gPSBzZWxlY3Rfb2JqLnRvdGFsRGVsdGFWICogQVU7XHJcblx0XHRcdHZhciBkZWx0YVY7XHJcblx0XHRcdGlmKGRlbHRhVmttIDwgMTApXHJcblx0XHRcdFx0ZGVsdGFWID0gKGRlbHRhVmttICogMWUzKS50b0ZpeGVkKDEpICsgJ20vcyc7XHJcblx0XHRcdGVsc2VcclxuXHRcdFx0XHRkZWx0YVYgPSBkZWx0YVZrbS50b0ZpeGVkKDQpICsgJ2ttL3MnO1xyXG5cdFx0XHR2YWx1ZUVsZW1lbnRzWzFdLmlubmVySFRNTCA9IGRlbHRhVjtcclxuXHRcdFx0dmFsdWVFbGVtZW50c1syXS5pbm5lckhUTUwgPSBzZWxlY3Rfb2JqLmlnbml0aW9uQ291bnQ7XHJcblx0XHRcdHZhbHVlRWxlbWVudC5zdHlsZS5tYXJnaW5MZWZ0ID0gKGJ1dHRvbldpZHRoIC0gdmFsdWVFbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLndpZHRoKSArICdweCc7XHJcblx0XHRcdHNldHRpbmdzQ29udHJvbC5kb21FbGVtZW50LnN0eWxlLnRvcCA9IHZhbHVlRWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS5ib3R0b20gKyAncHgnO1xyXG5cdFx0fVxyXG5cdH0pKCk7XHJcblx0Y29udGFpbmVyLmFwcGVuZENoaWxkKCBzdGF0c0NvbnRyb2wuZG9tRWxlbWVudCApO1xyXG5cclxuXHRzZXR0aW5nc0NvbnRyb2wgPSBuZXcgKGZ1bmN0aW9uKCl7XHJcblx0XHRmdW5jdGlvbiBzZXRTaXplKCl7XHJcblx0XHRcdGVsZW1lbnQuc3R5bGUubGVmdCA9ICh3aW5kb3cuaW5uZXJXaWR0aCAtIGJ1dHRvbldpZHRoKSArICdweCc7XHJcblx0XHRcdHJpZ2h0VGl0bGVTZXRTaXplKHRpdGxlLCBpY29uKTtcclxuXHRcdH1cclxuXHRcdHZhciBidXR0b25Ub3AgPSAxNTQ7XHJcblx0XHR2YXIgYnV0dG9uSGVpZ2h0ID0gMzI7XHJcblx0XHR2YXIgYnV0dG9uV2lkdGggPSAzMjtcclxuXHRcdHRoaXMuZG9tRWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG5cdFx0dmFyIGVsZW1lbnQgPSB0aGlzLmRvbUVsZW1lbnQ7XHJcblx0XHRlbGVtZW50LnN0eWxlLnBvc2l0aW9uID0gJ2Fic29sdXRlJztcclxuXHRcdGVsZW1lbnQuc3R5bGUudGV4dEFsaWduID0gJ2xlZnQnO1xyXG5cdFx0ZWxlbWVudC5zdHlsZS50b3AgPSBidXR0b25Ub3AgKyAncHgnO1xyXG5cdFx0ZWxlbWVudC5zdHlsZS5sZWZ0ID0gMCArICdweCc7XHJcblx0XHRlbGVtZW50LnN0eWxlLnpJbmRleCA9IDc7XHJcblx0XHR2YXIgdmlzaWJsZSA9IGZhbHNlO1xyXG5cdFx0dmFyIGljb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbWcnKTtcclxuXHRcdGljb24uc3JjID0gc2V0dGluZ3NJY29uVXJsO1xyXG5cdFx0aWNvbi5zdHlsZS53aWR0aCA9IGJ1dHRvbldpZHRoICsgJ3B4JztcclxuXHRcdGljb24uc3R5bGUuaGVpZ2h0ID0gYnV0dG9uSGVpZ2h0ICsgJ3B4JztcclxuXHRcdGVsZW1lbnQuYXBwZW5kQ2hpbGQoaWNvbik7XHJcblxyXG5cdFx0dmFyIHRpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcblx0XHR0aXRsZS5pbm5lckhUTUwgPSAnU2V0dGluZ3MnO1xyXG5cdFx0dGl0bGUuc3R5bGUuZGlzcGxheSA9ICdub25lJztcclxuXHRcdHRpdGxlLnN0eWxlLnBvc2l0aW9uID0gJ2Fic29sdXRlJztcclxuXHRcdHRpdGxlLnN0eWxlLmJhY2tncm91bmQgPSAncmdiYSgwLCAwLCAwLCAwLjUpJztcclxuXHRcdHRpdGxlLnN0eWxlLnpJbmRleCA9IDIwO1xyXG5cdFx0ZWxlbWVudC5hcHBlbmRDaGlsZCh0aXRsZSk7XHJcblxyXG5cdFx0dmFyIHZhbHVlRWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG5cdFx0ZWxlbWVudC5hcHBlbmRDaGlsZCh2YWx1ZUVsZW1lbnQpO1xyXG5cdFx0dmFsdWVFbGVtZW50LnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XHJcblx0XHR2YWx1ZUVsZW1lbnQuc3R5bGUucG9zaXRpb24gPSAnYWJzb2x1dGUnO1xyXG5cdFx0dmFsdWVFbGVtZW50LnN0eWxlLmJhY2tncm91bmQgPSAncmdiYSgwLCAwLCAwLCAwLjUpJztcclxuXHRcdHZhbHVlRWxlbWVudC5zdHlsZS5ib3JkZXIgPSAnM3B4IHJpZGdlICM3ZjNmM2YnO1xyXG5cdFx0dmFsdWVFbGVtZW50LnN0eWxlLnBhZGRpbmcgPSAnM3B4JztcclxuXHRcdC8vIFRoZSBzZXR0aW5ncyB2YXJpYWJsZXMgYXJlIGZ1bmN0aW9uIGxvY2FsIHZhcmlhYmxlcywgc28gd2UgY2FuJ3QganVzdCBwYXNzIHRoaXMgcG9pbnRlclxyXG5cdFx0Ly8gYW5kIHBhcmFtZXRlciBuYW1lIGFuZCBkbyBzb21ldGhpbmcgbGlrZSBgdGhpc1tuYW1lXSA9ICF0aGlzW25hbWVdYC5cclxuXHRcdHZhciB0b2dnbGVGdW5jcyA9IFtcclxuXHRcdFx0ZnVuY3Rpb24oKXtncmlkX2VuYWJsZSA9ICFncmlkX2VuYWJsZX0sXHJcblx0XHRcdGZ1bmN0aW9uKCl7c3luY19yb3RhdGUgPSAhc3luY19yb3RhdGV9LFxyXG5cdFx0XHRmdW5jdGlvbigpe25saXBzX2VuYWJsZSA9ICFubGlwc19lbmFibGV9LFxyXG5cdFx0XHRmdW5jdGlvbigpe3VuaXRzX2ttID0gIXVuaXRzX2ttfVxyXG5cdFx0XTtcclxuXHRcdHZhciBjaGVja0VsZW1lbnRzID0gW107XHJcblx0XHRmb3IodmFyIGkgPSAwOyBpIDwgdG9nZ2xlRnVuY3MubGVuZ3RoOyBpKyspe1xyXG5cdFx0XHR2YXIgbGluZUVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuXHRcdFx0dmFyIGNoZWNrYm94ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW5wdXQnKTtcclxuXHRcdFx0Y2hlY2tib3gudHlwZSA9ICdjaGVja2JveCc7XHJcblx0XHRcdGNoZWNrYm94Lm9uY2xpY2sgPSB0b2dnbGVGdW5jc1tpXTtcclxuXHRcdFx0dmFyIGlkID0gJ3NldHRpbmdzX2NoZWNrXycgKyBpO1xyXG5cdFx0XHRjaGVja2JveC5zZXRBdHRyaWJ1dGUoJ2lkJywgaWQpO1xyXG5cdFx0XHRsaW5lRWxlbWVudC5hcHBlbmRDaGlsZChjaGVja2JveCk7XHJcblx0XHRcdGNoZWNrRWxlbWVudHMucHVzaChjaGVja2JveCk7XHJcblx0XHRcdHZhciBsYWJlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xhYmVsJyk7XHJcblx0XHRcdGxhYmVsLnNldEF0dHJpYnV0ZSgnZm9yJywgaWQpO1xyXG5cdFx0XHRsYWJlbC5pbm5lckhUTUwgPSBbXHJcblx0XHRcdFx0J1Nob3cmbmJzcDtncmlkJm5ic3A7KEcpJyxcclxuXHRcdFx0XHQnQ2hhc2UmbmJzcDtjYW1lcmEmbmJzcDsoSCknLFxyXG5cdFx0XHRcdCdOb25saW5lYXImbmJzcDtzY2FsZSZuYnNwOyhOKScsXHJcblx0XHRcdFx0J1VuaXRzIGluIEtNJm5ic3A7KEspJ11baV07XHJcblx0XHRcdGxpbmVFbGVtZW50LmFwcGVuZENoaWxkKGxhYmVsKTtcclxuXHRcdFx0bGluZUVsZW1lbnQuc3R5bGUuZm9udFdlaWdodCA9ICdib2xkJztcclxuXHRcdFx0bGluZUVsZW1lbnQuc3R5bGUucGFkZGluZ1JpZ2h0ID0gJzFlbSc7XHJcblx0XHRcdGxpbmVFbGVtZW50LnN0eWxlLndoaXRlU3BhY2UgPSAnbm93cmFwJztcclxuXHRcdFx0dmFsdWVFbGVtZW50LmFwcGVuZENoaWxkKGxpbmVFbGVtZW50KTtcclxuXHRcdH1cclxuXHJcblx0XHRzZXRTaXplKCk7XHJcblxyXG5cdFx0Ly8gUmVnaXN0ZXIgZXZlbnQgaGFuZGxlcnNcclxuXHRcdHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdyZXNpemUnLCBzZXRTaXplKTtcclxuXHRcdGljb24ub25kcmFnc3RhcnQgPSBmdW5jdGlvbihldmVudCl7XHJcblx0XHRcdGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcblx0XHR9O1xyXG5cdFx0aWNvbi5vbmNsaWNrID0gZnVuY3Rpb24oZXZlbnQpe1xyXG5cdFx0XHR2aXNpYmxlID0gIXZpc2libGU7XHJcblx0XHRcdGlmKHZpc2libGUpe1xyXG5cdFx0XHRcdHZhbHVlRWxlbWVudC5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJztcclxuXHRcdFx0XHRlbGVtZW50LnN0eWxlLmJhY2tncm91bmQgPSAncmdiYSgwLCAwLCAwLCAwLjUpJztcclxuXHRcdFx0fVxyXG5cdFx0XHRlbHNle1xyXG5cdFx0XHRcdHZhbHVlRWxlbWVudC5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xyXG5cdFx0XHRcdGVsZW1lbnQuc3R5bGUuYmFja2dyb3VuZCA9ICdyZ2JhKDAsIDAsIDAsIDApJztcclxuXHRcdFx0fVxyXG5cdFx0fTtcclxuXHRcdGljb24ub25tb3VzZWVudGVyID0gZnVuY3Rpb24oZXZlbnQpe1xyXG5cdFx0XHRpZighdmlzaWJsZSlcclxuXHRcdFx0XHR0aXRsZS5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJztcclxuXHRcdFx0cmlnaHRUaXRsZVNldFNpemUodGl0bGUsIGljb24pO1xyXG5cdFx0fTtcclxuXHRcdGljb24ub25tb3VzZWxlYXZlID0gZnVuY3Rpb24oZXZlbnQpe1xyXG5cdFx0XHRpZighdmlzaWJsZSlcclxuXHRcdFx0XHR0aXRsZS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xyXG5cdFx0fTtcclxuXHJcblx0XHR0aGlzLnNldFRleHQgPSBmdW5jdGlvbih0ZXh0KXtcclxuXHRcdFx0aWYoIXZpc2libGUpXHJcblx0XHRcdFx0cmV0dXJuO1xyXG5cdFx0XHRjaGVja0VsZW1lbnRzWzBdLmNoZWNrZWQgPSBncmlkX2VuYWJsZTtcclxuXHRcdFx0Y2hlY2tFbGVtZW50c1sxXS5jaGVja2VkID0gc3luY19yb3RhdGU7XHJcblx0XHRcdGNoZWNrRWxlbWVudHNbMl0uY2hlY2tlZCA9IG5saXBzX2VuYWJsZTtcclxuXHRcdFx0Y2hlY2tFbGVtZW50c1szXS5jaGVja2VkID0gdW5pdHNfa207XHJcblx0XHRcdHZhbHVlRWxlbWVudC5zdHlsZS5tYXJnaW5MZWZ0ID0gKGJ1dHRvbldpZHRoIC0gdmFsdWVFbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLndpZHRoKSArICdweCc7XHJcblx0XHR9XHJcblx0fSkoKTtcclxuXHRjb250YWluZXIuYXBwZW5kQ2hpbGQoIHNldHRpbmdzQ29udHJvbC5kb21FbGVtZW50ICk7XHJcblxyXG5cdGFsdGl0dWRlQ29udHJvbCA9IG5ldyAoZnVuY3Rpb24oKXtcclxuXHRcdHZhciBidXR0b25IZWlnaHQgPSAzMjtcclxuXHRcdHZhciBidXR0b25XaWR0aCA9IDMyO1xyXG5cdFx0dGhpcy5kb21FbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcblx0XHR2YXIgZWxlbWVudCA9IHRoaXMuZG9tRWxlbWVudDtcclxuXHRcdGVsZW1lbnQuc3R5bGUucG9zaXRpb24gPSAnYWJzb2x1dGUnO1xyXG5cdFx0ZWxlbWVudC5zdHlsZS50b3AgPSAnMmVtJztcclxuXHRcdGVsZW1lbnQuc3R5bGUubGVmdCA9ICc1MCUnO1xyXG5cdFx0ZWxlbWVudC5zdHlsZS5iYWNrZ3JvdW5kID0gJ3JnYmEoMCwwLDAsMC41KSc7XHJcblx0XHRlbGVtZW50LnN0eWxlLnpJbmRleCA9IDg7XHJcblx0XHR2YXIgdmlzaWJsZSA9IGZhbHNlO1xyXG5cclxuXHRcdC8vIFJlZ2lzdGVyIGV2ZW50IGhhbmRsZXJzXHJcblx0XHRlbGVtZW50Lm9uZHJhZ3N0YXJ0ID0gZnVuY3Rpb24oZXZlbnQpe1xyXG5cdFx0XHRldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG5cdFx0fTtcclxuXHJcblx0XHR0aGlzLnNldFRleHQgPSBmdW5jdGlvbih2YWx1ZSl7XHJcblx0XHRcdHZhciB0ZXh0O1xyXG5cdFx0XHRpZih2YWx1ZSA8IDFlNSlcclxuXHRcdFx0XHR0ZXh0ID0gdmFsdWUudG9GaXhlZCg0KSArICdrbSc7XHJcblx0XHRcdGVsc2UgaWYodmFsdWUgPCAxZTgpXHJcblx0XHRcdFx0dGV4dCA9ICh2YWx1ZSAvIDEwMDApLnRvRml4ZWQoNCkgKyAnTW0nO1xyXG5cdFx0XHRlbHNlXHJcblx0XHRcdFx0dGV4dCA9ICh2YWx1ZSAvIEFVKS50b0ZpeGVkKDQpICsgJ0FVJztcclxuXHRcdFx0ZWxlbWVudC5pbm5lckhUTUwgPSB0ZXh0O1xyXG5cdFx0XHRlbGVtZW50LnN0eWxlLm1hcmdpbkxlZnQgPSAtZWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS53aWR0aCAvIDIgKyAncHgnO1xyXG5cdFx0fTtcclxuXHR9KSgpO1xyXG5cdGNvbnRhaW5lci5hcHBlbmRDaGlsZCggYWx0aXR1ZGVDb250cm9sLmRvbUVsZW1lbnQgKTtcclxuXHJcblx0bWVzc2FnZUNvbnRyb2wgPSBuZXcgKGZ1bmN0aW9uKCl7XHJcblx0XHR0aGlzLmRvbUVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuXHRcdHZhciBlbGVtZW50ID0gdGhpcy5kb21FbGVtZW50O1xyXG5cdFx0ZWxlbWVudC5zdHlsZS5wb3NpdGlvbiA9ICdhYnNvbHV0ZSc7XHJcblx0XHRlbGVtZW50LnN0eWxlLnRvcCA9ICcyNSUnO1xyXG5cdFx0ZWxlbWVudC5zdHlsZS5sZWZ0ID0gJzUwJSc7XHJcblx0XHRlbGVtZW50LnN0eWxlLmZvbnRTaXplID0gJzIwcHgnO1xyXG5cdFx0ZWxlbWVudC5zdHlsZS5mb250V2VpZ2h0ID0gJ2JvbGQnO1xyXG5cdFx0ZWxlbWVudC5zdHlsZS50ZXh0U2hhZG93ID0gJzBweCAwcHggNXB4IHJnYmEoMCwwLDAsMSknO1xyXG5cdFx0ZWxlbWVudC5zdHlsZS56SW5kZXggPSAyMDtcclxuXHRcdHZhciBzaG93VGltZSA9IDA7XHJcblxyXG5cdFx0Ly8gUmVnaXN0ZXIgZXZlbnQgaGFuZGxlcnNcclxuXHRcdGVsZW1lbnQub25kcmFnc3RhcnQgPSBmdW5jdGlvbihldmVudCl7XHJcblx0XHRcdGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcblx0XHR9O1xyXG5cdFx0Ly8gRGlzYWJsZSB0ZXh0IHNlbGVjdGlvblxyXG5cdFx0ZWxlbWVudC5vbnNlbGVjdHN0YXJ0ID0gZnVuY3Rpb24oKXsgcmV0dXJuIGZhbHNlOyB9XHJcblxyXG5cdFx0dGhpcy5zZXRUZXh0ID0gZnVuY3Rpb24odGV4dCl7XHJcblx0XHRcdGVsZW1lbnQuaW5uZXJIVE1MID0gdGV4dDtcclxuXHRcdFx0ZWxlbWVudC5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJztcclxuXHRcdFx0ZWxlbWVudC5zdHlsZS5vcGFjaXR5ID0gJzEnO1xyXG5cdFx0XHRlbGVtZW50LnN0eWxlLm1hcmdpblRvcCA9IC1lbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLmhlaWdodCAvIDIgKyAncHgnO1xyXG5cdFx0XHRlbGVtZW50LnN0eWxlLm1hcmdpbkxlZnQgPSAtZWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS53aWR0aCAvIDIgKyAncHgnO1xyXG5cdFx0XHRzaG93VGltZSA9IDU7IC8vIFNlY29uZHMgdG8gc2hvdyBzaG91bGQgZGVwZW5kIG9uIHRleHQgbGVuZ3RoIVxyXG5cdFx0fTtcclxuXHJcblx0XHR0aGlzLnRpbWVTdGVwID0gZnVuY3Rpb24oZGVsdGFUaW1lKXtcclxuXHRcdFx0aWYoc2hvd1RpbWUgPCBkZWx0YVRpbWUpe1xyXG5cdFx0XHRcdGVsZW1lbnQuc3R5bGUuZGlzcGxheSA9ICdub25lJztcclxuXHRcdFx0XHRzaG93VGltZSA9IDA7XHJcblx0XHRcdFx0cmV0dXJuO1xyXG5cdFx0XHR9XHJcblx0XHRcdHNob3dUaW1lIC09IGRlbHRhVGltZTtcclxuXHRcdFx0aWYoc2hvd1RpbWUgPCAyKTtcclxuXHRcdFx0XHRlbGVtZW50LnN0eWxlLm9wYWNpdHkgPSAoc2hvd1RpbWUgLyAyKS50b1N0cmluZygpO1xyXG5cdFx0fVxyXG5cdH0pXHJcblx0Y29udGFpbmVyLmFwcGVuZENoaWxkKCBtZXNzYWdlQ29udHJvbC5kb21FbGVtZW50ICk7XHJcblxyXG5cdGZ1bmN0aW9uIE1lbnVDb250cm9sKHRpdGxlU3RyaW5nLCBpY29uU3JjLCBjb25maWcpe1xyXG5cdFx0dGhpcy5kb21FbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcblx0XHR2YXIgZWxlbWVudCA9IHRoaXMuZG9tRWxlbWVudDtcclxuXHRcdGVsZW1lbnQuc3R5bGUucG9zaXRpb24gPSAnYWJzb2x1dGUnO1xyXG5cdFx0ZWxlbWVudC5zdHlsZS50ZXh0QWxpZ24gPSAnbGVmdCc7XHJcblx0XHRlbGVtZW50LnN0eWxlLnRvcCA9IGNvbmZpZy5idXR0b25Ub3AgKyAncHgnO1xyXG5cdFx0ZWxlbWVudC5zdHlsZS5yaWdodCA9IDAgKyAncHgnO1xyXG5cdFx0ZWxlbWVudC5zdHlsZS56SW5kZXggPSA3O1xyXG5cdFx0dGhpcy5pY29uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW1nJyk7XHJcblx0XHR0aGlzLmljb24uc3JjID0gaWNvblNyYztcclxuXHRcdHRoaXMuaWNvbi5zdHlsZS53aWR0aCA9IGNvbmZpZy5idXR0b25XaWR0aCArICdweCc7XHJcblx0XHR0aGlzLmljb24uc3R5bGUuaGVpZ2h0ID0gY29uZmlnLmJ1dHRvbkhlaWdodCArICdweCc7XHJcblx0XHR2YXIgc2NvcGUgPSB0aGlzO1xyXG5cdFx0dGhpcy5pY29uTW91c2VPdmVyID0gZmFsc2U7XHJcblx0XHR0aGlzLmljb24ub25kcmFnc3RhcnQgPSBmdW5jdGlvbihldmVudCl7XHJcblx0XHRcdGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcblx0XHR9O1xyXG5cdFx0dGhpcy5pY29uLm9uY2xpY2sgPSBmdW5jdGlvbihldmVudCl7XHJcblx0XHRcdHNjb3BlLnNldFZpc2libGUoIXNjb3BlLnZpc2libGUpO1xyXG5cdFx0fTtcclxuXHRcdHRoaXMuaWNvbi5vbm1vdXNlZW50ZXIgPSBmdW5jdGlvbihldmVudCl7XHJcblx0XHRcdGlmKCFzY29wZS52aXNpYmxlKVxyXG5cdFx0XHRcdHNjb3BlLnRpdGxlLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xyXG5cdFx0XHRyaWdodFRpdGxlU2V0U2l6ZShzY29wZS50aXRsZSwgc2NvcGUuaWNvbik7XHJcblx0XHRcdHNjb3BlLmljb25Nb3VzZU92ZXIgPSB0cnVlO1xyXG5cdFx0fTtcclxuXHRcdHRoaXMuaWNvbi5vbm1vdXNlbGVhdmUgPSBmdW5jdGlvbihldmVudCl7XHJcblx0XHRcdGlmKCFzY29wZS52aXNpYmxlKVxyXG5cdFx0XHRcdHNjb3BlLnRpdGxlLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XHJcblx0XHRcdHNjb3BlLmljb25Nb3VzZU92ZXIgPSBmYWxzZTtcclxuXHRcdH07XHJcblx0XHRlbGVtZW50LmFwcGVuZENoaWxkKHRoaXMuaWNvbik7XHJcblxyXG5cdFx0dmFyIHRpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcblx0XHR0aXRsZS5pbm5lckhUTUwgPSB0aXRsZVN0cmluZztcclxuXHRcdHRpdGxlLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XHJcblx0XHR0aXRsZS5zdHlsZS5wb3NpdGlvbiA9ICdhYnNvbHV0ZSc7XHJcblx0XHR0aXRsZS5zdHlsZS5iYWNrZ3JvdW5kID0gJ3JnYmEoMCwgMCwgMCwgMC41KSc7XHJcblx0XHR0aXRsZS5zdHlsZS56SW5kZXggPSAyMDtcclxuXHRcdGVsZW1lbnQuYXBwZW5kQ2hpbGQodGl0bGUpO1xyXG5cdFx0dGhpcy50aXRsZSA9IHRpdGxlO1xyXG5cclxuXHRcdHRoaXMudmlzaWJsZSA9IGZhbHNlO1xyXG5cclxuXHRcdHZhciB2YWx1ZUVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuXHRcdHZhbHVlRWxlbWVudC5zdHlsZS5jc3NUZXh0ID0gXCJkaXNwbGF5OiBub25lOyBwb3NpdGlvbjogZml4ZWQ7IGxlZnQ6IDUwJTtcIlxyXG5cdFx0XHQrIFwid2lkdGg6IDMwMHB4OyB0b3A6IDUwJTsgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLDAsMCwwLjg1KTsgYm9yZGVyOiA1cHggcmlkZ2UgIzdmZmY3ZjtcIlxyXG5cdFx0XHQrIFwiZm9udC1zaXplOiAxNXB4OyB0ZXh0LWFsaWduOiBjZW50ZXI7IGZvbnQtZmFtaWx5OiBTYW5zLVNlcmlmXCI7XHJcblx0XHR0aGlzLnZhbHVlRWxlbWVudCA9IHZhbHVlRWxlbWVudDtcclxuXHJcblx0XHR2YXIgdGl0bGVFbGVtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcblx0XHR0aXRsZUVsZW0uc3R5bGUubWFyZ2luID0gXCIxNXB4XCI7XHJcblx0XHR0aXRsZUVsZW0uc3R5bGUucGFkZGluZyA9IFwiMTVweFwiO1xyXG5cdFx0dGl0bGVFbGVtLnN0eWxlLmZvbnRTaXplID0gJzI1cHgnO1xyXG5cdFx0dGl0bGVFbGVtLmlubmVySFRNTCA9IGNvbmZpZy5pbm5lclRpdGxlIHx8IHRpdGxlU3RyaW5nO1xyXG5cdFx0dGhpcy52YWx1ZUVsZW1lbnQuYXBwZW5kQ2hpbGQodGl0bGVFbGVtKTtcclxuXHJcblx0XHR0aGlzLmNsb3NlSWNvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2ltZycpO1xyXG5cdFx0dGhpcy5jbG9zZUljb24uc3JjID0gY2xvc2VJY29uVXJsO1xyXG5cdFx0dGhpcy5jbG9zZUljb24uc3R5bGUuY3NzVGV4dCA9ICdwb3NpdGlvbjogYWJzb2x1dGU7IHRvcDogMHB4OyByaWdodDogMHB4OyBib3JkZXI6IGluc2V0IDFweCAjN2Y3ZjdmOyc7XHJcblx0XHR0aGlzLmNsb3NlSWNvbi5vbmRyYWdzdGFydCA9IGZ1bmN0aW9uKGV2ZW50KXtcclxuXHRcdFx0ZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuXHRcdH07XHJcblx0XHR0aGlzLmNsb3NlSWNvbi5vbmNsaWNrID0gZnVuY3Rpb24oZXZlbnQpe1xyXG5cdFx0XHRzY29wZS5zZXRWaXNpYmxlKGZhbHNlKTtcclxuXHRcdH07XHJcblx0XHR0aGlzLnZhbHVlRWxlbWVudC5hcHBlbmRDaGlsZCh0aGlzLmNsb3NlSWNvbik7XHJcblxyXG5cdFx0dGhpcy5kb21FbGVtZW50LmFwcGVuZENoaWxkKHRoaXMudmFsdWVFbGVtZW50KTtcclxuXHR9O1xyXG5cclxuXHRNZW51Q29udHJvbC5wcm90b3R5cGUuc2V0VmlzaWJsZSA9IGZ1bmN0aW9uKHYpe1xyXG5cdFx0dGhpcy52aXNpYmxlID0gdjtcclxuXHRcdGlmKHRoaXMudmlzaWJsZSl7XHJcblx0XHRcdHRoaXMudmFsdWVFbGVtZW50LnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xyXG5cdFx0XHR2YXIgcmVjdCA9IHRoaXMudmFsdWVFbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xyXG5cdFx0XHR0aGlzLnZhbHVlRWxlbWVudC5zdHlsZS5tYXJnaW5MZWZ0ID0gLXJlY3Qud2lkdGggLyAyICsgXCJweFwiO1xyXG5cdFx0XHR0aGlzLnZhbHVlRWxlbWVudC5zdHlsZS5tYXJnaW5Ub3AgPSAtcmVjdC5oZWlnaHQgLyAyICsgXCJweFwiO1xyXG5cdFx0fVxyXG5cdFx0ZWxzZXtcclxuXHRcdFx0dGhpcy52YWx1ZUVsZW1lbnQuc3R5bGUuZGlzcGxheSA9ICdub25lJztcclxuXHRcdFx0aWYoIXRoaXMuaWNvbk1vdXNlT3ZlcilcclxuXHRcdFx0XHR0aGlzLnRpdGxlLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XHJcblx0XHR9XHJcblx0fTtcclxuXHJcblx0c2NlbmFyaW9TZWxlY3RvckNvbnRyb2wgPSBuZXcgKGZ1bmN0aW9uKCl7XHJcblx0XHR2YXIgY29uZmlnID0ge1xyXG5cdFx0XHRidXR0b25Ub3A6IDAsXHJcblx0XHRcdGJ1dHRvbkhlaWdodDogMzIsXHJcblx0XHRcdGJ1dHRvbldpZHRoOiAzMixcclxuXHRcdFx0aW5uZXJUaXRsZTogXCJTY2VuYXJpbyBTZWxlY3RvclwiLFxyXG5cdFx0fTtcclxuXHRcdHZhciBzY29wZSA9IHRoaXM7XHJcblx0XHRNZW51Q29udHJvbC5jYWxsKHRoaXMsICdTY2VuYXJpb3MnLCBtZW51SWNvblVybCwgY29uZmlnKTtcclxuXHJcblx0XHR0aGlzLnZhbHVlRWxlbWVudC5zdHlsZS5ib3JkZXIgPSBcIjVweCByaWRnZSAjZmZmZjdmXCI7XHJcblx0XHR2YXIgc2NlbmFyaW9zID0gW1xyXG5cdFx0XHR7dGl0bGU6IFwiRWFydGggb3JiaXRcIiwgcGFyZW50OiBlYXJ0aCwgc2VtaW1ham9yX2F4aXM6IDEwMDAwIC8gQVV9LFxyXG5cdFx0XHR7dGl0bGU6IFwiTW9vbiBvcmJpdFwiLCBwYXJlbnQ6IG1vb24sIHNlbWltYWpvcl9heGlzOiAzMDAwIC8gQVV9LFxyXG5cdFx0XHR7dGl0bGU6IFwiTWFycyBvcmJpdFwiLCBwYXJlbnQ6IG1hcnMsIHNlbWltYWpvcl9heGlzOiA1MDAwIC8gQVV9LFxyXG5cdFx0XHR7dGl0bGU6IFwiVmVudXMgb3JiaXRcIiwgcGFyZW50OiB2ZW51cywgc2VtaW1ham9yX2F4aXM6IDEwMDAwIC8gQVUsIGFzY2VuZGluZ19ub2RlOiBNYXRoLlBJfSxcclxuXHRcdFx0e3RpdGxlOiBcIkp1cGl0ZXIgb3JiaXRcIiwgcGFyZW50OiBqdXBpdGVyLCBzZW1pbWFqb3JfYXhpczogMTAwMDAwIC8gQVV9LFxyXG5cdFx0XTtcclxuXHRcdGZvcih2YXIgaSA9IDA7IGkgPCBzY2VuYXJpb3MubGVuZ3RoOyBpKyspe1xyXG5cdFx0XHR2YXIgZWxlbSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG5cdFx0XHRlbGVtLnN0eWxlLm1hcmdpbiA9IFwiMTVweFwiO1xyXG5cdFx0XHRlbGVtLnN0eWxlLnBhZGRpbmcgPSBcIjE1cHhcIjtcclxuXHRcdFx0ZWxlbS5zdHlsZS5ib3JkZXIgPSBcIjFweCBzb2xpZCAjZmZmZjAwXCI7XHJcblx0XHRcdGVsZW0uaW5uZXJIVE1MID0gc2NlbmFyaW9zW2ldLnRpdGxlO1xyXG5cdFx0XHRlbGVtLm9uY2xpY2sgPSAoZnVuY3Rpb24oc2NlbmFyaW8pe1xyXG5cdFx0XHRcdHJldHVybiBmdW5jdGlvbigpe1xyXG5cdFx0XHRcdFx0dmFyIGFzY2VuZGluZ19ub2RlID0gc2NlbmFyaW8uYXNjZW5kaW5nX25vZGUgfHwgMC47XHJcblx0XHRcdFx0XHR2YXIgZWNjZW50cmljaXR5ID0gc2NlbmFyaW8uZWNjZW50cmljaXR5IHx8IDAuO1xyXG5cdFx0XHRcdFx0dmFyIHJvdGF0aW9uID0gc2NlbmFyaW8ucm90YXRpb24gfHwgKGZ1bmN0aW9uKCl7XHJcblx0XHRcdFx0XHRcdHZhciByb3RhdGlvbiA9IEF4aXNBbmdsZVF1YXRlcm5pb24oMCwgMCwgMSwgYXNjZW5kaW5nX25vZGUgLSBNYXRoLlBJIC8gMik7XHJcblx0XHRcdFx0XHRcdHJvdGF0aW9uLm11bHRpcGx5KEF4aXNBbmdsZVF1YXRlcm5pb24oMCwgMSwgMCwgTWF0aC5QSSkpO1xyXG5cdFx0XHRcdFx0XHRyZXR1cm4gcm90YXRpb247XHJcblx0XHRcdFx0XHR9KSgpO1xyXG5cdFx0XHRcdFx0cm9ja2V0LnNldFBhcmVudChzY2VuYXJpby5wYXJlbnQpO1xyXG5cdFx0XHRcdFx0cm9ja2V0LnBvc2l0aW9uID0gbmV3IFRIUkVFLlZlY3RvcjMoMCwgMSAtIGVjY2VudHJpY2l0eSwgMClcclxuXHRcdFx0XHRcdFx0Lm11bHRpcGx5U2NhbGFyKHNjZW5hcmlvLnNlbWltYWpvcl9heGlzKS5hcHBseVF1YXRlcm5pb24ocm90YXRpb24pO1xyXG5cdFx0XHRcdFx0cm9ja2V0LnF1YXRlcm5pb24gPSByb3RhdGlvbi5jbG9uZSgpO1xyXG5cdFx0XHRcdFx0cm9ja2V0LnF1YXRlcm5pb24ubXVsdGlwbHkoQXhpc0FuZ2xlUXVhdGVybmlvbigxLCAwLCAwLCAtTWF0aC5QSSAvIDIpKTtcclxuXHRcdFx0XHRcdHJvY2tldC5hbmd1bGFyVmVsb2NpdHkgPSBuZXcgVEhSRUUuVmVjdG9yMygpO1xyXG5cdFx0XHRcdFx0dGhyb3R0bGVDb250cm9sLnNldFRocm90dGxlKDApO1xyXG5cdFx0XHRcdFx0cm9ja2V0LnNldE9yYml0aW5nVmVsb2NpdHkoc2NlbmFyaW8uc2VtaW1ham9yX2F4aXMsIHJvdGF0aW9uKTtcclxuXHRcdFx0XHRcdHJvY2tldC50b3RhbERlbHRhViA9IDAuO1xyXG5cdFx0XHRcdFx0cm9ja2V0Lmlnbml0aW9uQ291bnQgPSAwO1xyXG5cdFx0XHRcdFx0c2ltVGltZSA9IG5ldyBEYXRlKCk7XHJcblx0XHRcdFx0XHRyZWFsVGltZSA9IHNpbVRpbWU7XHJcblx0XHRcdFx0XHRzdGFydFRpbWUgPSBzaW1UaW1lO1xyXG5cdFx0XHRcdFx0bWVzc2FnZUNvbnRyb2wuc2V0VGV4dCgnU2NlbmFyaW8gJyArIHNjZW5hcmlvLnRpdGxlICsgJyBMb2FkZWQhJyk7XHJcblx0XHRcdFx0XHRzY29wZS50aXRsZS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xyXG5cdFx0XHRcdFx0c2NvcGUudmlzaWJsZSA9IGZhbHNlO1xyXG5cdFx0XHRcdFx0c2NvcGUudmFsdWVFbGVtZW50LnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9KShzY2VuYXJpb3NbaV0pO1xyXG5cdFx0XHR0aGlzLnZhbHVlRWxlbWVudC5hcHBlbmRDaGlsZChlbGVtKTtcclxuXHRcdH1cclxuXHJcblx0XHR0aGlzLnNldFZpc2libGUgPSBmdW5jdGlvbih2KXtcclxuXHRcdFx0TWVudUNvbnRyb2wucHJvdG90eXBlLnNldFZpc2libGUuY2FsbCh0aGlzLCB2KTtcclxuXHRcdFx0aWYodGhpcy52aXNpYmxlKXtcclxuXHRcdFx0XHRbc2F2ZUNvbnRyb2wsIGxvYWRDb250cm9sXS5tYXAoZnVuY3Rpb24oY29udHJvbCl7IGNvbnRyb2wuc2V0VmlzaWJsZShmYWxzZSk7IH0pOyAvLyBNdXR1YWxseSBleGNsdXNpdmVcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdH0pO1xyXG5cdGNvbnRhaW5lci5hcHBlbmRDaGlsZCggc2NlbmFyaW9TZWxlY3RvckNvbnRyb2wuZG9tRWxlbWVudCApO1xyXG5cclxuXHRmdW5jdGlvbiBzZXJpYWxpemVTdGF0ZSgpe1xyXG5cdFx0cmV0dXJuIHtcclxuXHRcdFx0c2ltVGltZTogc2ltVGltZSxcclxuXHRcdFx0c3RhcnRUaW1lOiBzdGFydFRpbWUsXHJcblx0XHRcdGJvZGllczogc3VuLnNlcmlhbGl6ZVRyZWUoKSxcclxuXHRcdH07XHJcblx0fVxyXG5cclxuXHRzYXZlQ29udHJvbCA9IG5ldyAoZnVuY3Rpb24oKXtcclxuXHRcdHZhciBjb25maWcgPSB7XHJcblx0XHRcdGJ1dHRvblRvcDogMzQsXHJcblx0XHRcdGJ1dHRvbkhlaWdodDogMzIsXHJcblx0XHRcdGJ1dHRvbldpZHRoOiAzMixcclxuXHRcdH07XHJcblx0XHR2YXIgc2NvcGUgPSB0aGlzO1xyXG5cdFx0TWVudUNvbnRyb2wuY2FsbCh0aGlzLCAnU2F2ZSBkYXRhJywgc2F2ZUljb25VcmwsIGNvbmZpZyk7XHJcblxyXG5cdFx0dmFyIGlucHV0Q29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcblx0XHRpbnB1dENvbnRhaW5lci5zdHlsZS5ib3JkZXIgPSBcIjFweCBzb2xpZCAjN2ZmZjdmXCI7XHJcblx0XHRpbnB1dENvbnRhaW5lci5zdHlsZS5tYXJnaW4gPSBcIjVweFwiO1xyXG5cdFx0aW5wdXRDb250YWluZXIuc3R5bGUucGFkZGluZyA9IFwiNXB4XCI7XHJcblx0XHR2YXIgaW5wdXRUaXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG5cdFx0aW5wdXRUaXRsZS5pbm5lckhUTUwgPSAnTmV3IFNhdmUgTmFtZSc7XHJcblx0XHR2YXIgaW5wdXRFbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW5wdXQnKTtcclxuXHRcdGlucHV0RWxlbWVudC5zZXRBdHRyaWJ1dGUoJ3R5cGUnLCAndGV4dCcpO1xyXG5cdFx0dmFyIGlucHV0QnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7XHJcblx0XHRpbnB1dEJ1dHRvbi5pbm5lckhUTUwgPSAnc2F2ZSdcclxuXHRcdGlucHV0QnV0dG9uLm9uY2xpY2sgPSBmdW5jdGlvbihldmVudCl7XHJcblx0XHRcdHZhciBzYXZlRGF0YSA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdXZWJHTE9yYml0ZXJTYXZlZERhdGEnKSA/IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oJ1dlYkdMT3JiaXRlclNhdmVkRGF0YScpKSA6IFtdO1xyXG5cdFx0XHRzYXZlRGF0YS5wdXNoKHt0aXRsZTogaW5wdXRFbGVtZW50LnZhbHVlLCBzdGF0ZTogc2VyaWFsaXplU3RhdGUoKX0pO1xyXG5cdFx0XHRsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnV2ViR0xPcmJpdGVyU2F2ZWREYXRhJywgSlNPTi5zdHJpbmdpZnkoc2F2ZURhdGEpKTtcclxuXHRcdFx0bWVzc2FnZUNvbnRyb2wuc2V0VGV4dCgnR2FtZSBTdGF0ZSBTYXZlZCEnKTtcclxuXHRcdFx0c2NvcGUudGl0bGUuc3R5bGUuZGlzcGxheSA9ICdub25lJztcclxuXHRcdFx0c2NvcGUudmlzaWJsZSA9IGZhbHNlO1xyXG5cdFx0XHRzY29wZS52YWx1ZUVsZW1lbnQuc3R5bGUuZGlzcGxheSA9ICdub25lJztcclxuXHRcdH07XHJcblx0XHRpbnB1dEVsZW1lbnQub25rZXlkb3duID0gZnVuY3Rpb24oZSl7XHJcblx0XHRcdGUuc3RvcFByb3BhZ2F0aW9uKCk7XHJcblx0XHR9XHJcblx0XHRpbnB1dENvbnRhaW5lci5hcHBlbmRDaGlsZChpbnB1dFRpdGxlKTtcclxuXHRcdGlucHV0Q29udGFpbmVyLmFwcGVuZENoaWxkKGlucHV0RWxlbWVudCk7XHJcblx0XHRpbnB1dENvbnRhaW5lci5hcHBlbmRDaGlsZChpbnB1dEJ1dHRvbik7XHJcblx0XHR0aGlzLnZhbHVlRWxlbWVudC5hcHBlbmRDaGlsZChpbnB1dENvbnRhaW5lcik7XHJcblxyXG5cdFx0dmFyIHNhdmVDb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuXHJcblx0XHRmdW5jdGlvbiB1cGRhdGVTYXZlRGF0YUxpc3QoKXtcclxuXHRcdFx0d2hpbGUoMCA8IHNhdmVDb250YWluZXIuY2hpbGRyZW4ubGVuZ3RoKSBzYXZlQ29udGFpbmVyLnJlbW92ZUNoaWxkKHNhdmVDb250YWluZXIuY2hpbGRyZW5bMF0pO1xyXG5cdFx0XHR2YXIgc2F2ZURhdGEgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnV2ViR0xPcmJpdGVyU2F2ZWREYXRhJykgPyBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdXZWJHTE9yYml0ZXJTYXZlZERhdGEnKSkgOiBbXTtcclxuXHRcdFx0Zm9yKHZhciBpID0gMDsgaSA8IHNhdmVEYXRhLmxlbmd0aDsgaSsrKXtcclxuXHRcdFx0XHR2YXIgZWxlbSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG5cdFx0XHRcdGVsZW0uc3R5bGUubWFyZ2luID0gXCI1cHhcIjtcclxuXHRcdFx0XHRlbGVtLnN0eWxlLnBhZGRpbmcgPSBcIjVweFwiO1xyXG5cdFx0XHRcdGVsZW0uc3R5bGUuYm9yZGVyID0gXCIxcHggc29saWQgIzAwZmYwMFwiO1xyXG5cdFx0XHRcdHZhciBsYWJlbEVsZW0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuXHRcdFx0XHRsYWJlbEVsZW0uaW5uZXJIVE1MID0gc2F2ZURhdGFbaV0udGl0bGU7XHJcblx0XHRcdFx0bGFiZWxFbGVtLnN0eWxlLmNzc1RleHQgPSBcIndpZHRoOiAxMDAlOyBtYXJnaW4tcmlnaHQ6IC0zMnB4OyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IHRleHQtYWxpZ246IG92ZXJmbG93OiBhdXRvO1wiO1xyXG5cdFx0XHRcdGVsZW0uYXBwZW5kQ2hpbGQobGFiZWxFbGVtKTtcclxuXHRcdFx0XHR2YXIgZGVsZXRlRWxlbSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2ltZycpO1xyXG5cdFx0XHRcdGRlbGV0ZUVsZW0uc2V0QXR0cmlidXRlKCdzcmMnLCB0cmFzaGNhblVybCk7XHJcblx0XHRcdFx0ZGVsZXRlRWxlbS5zdHlsZS53aWR0aCA9ICcyMHB4JztcclxuXHRcdFx0XHRkZWxldGVFbGVtLm9uY2xpY2sgPSAoZnVuY3Rpb24oaSl7XHJcblx0XHRcdFx0XHRyZXR1cm4gZnVuY3Rpb24oZSl7XHJcblx0XHRcdFx0XHRcdHNhdmVEYXRhLnNwbGljZShpLCAxKTtcclxuXHRcdFx0XHRcdFx0bG9jYWxTdG9yYWdlLnNldEl0ZW0oJ1dlYkdMT3JiaXRlclNhdmVkRGF0YScsIEpTT04uc3RyaW5naWZ5KHNhdmVEYXRhKSk7XHJcblx0XHRcdFx0XHRcdG1lc3NhZ2VDb250cm9sLnNldFRleHQoJ0dhbWUgU3RhdGUgRGVsZXRlZCEnKTtcclxuXHRcdFx0XHRcdFx0c2NvcGUudGl0bGUuc3R5bGUuZGlzcGxheSA9ICdub25lJztcclxuXHRcdFx0XHRcdFx0c2NvcGUudmlzaWJsZSA9IGZhbHNlO1xyXG5cdFx0XHRcdFx0XHRzY29wZS52YWx1ZUVsZW1lbnQuc3R5bGUuZGlzcGxheSA9ICdub25lJztcclxuXHRcdFx0XHRcdFx0ZS5zdG9wUHJvcGFnYXRpb24oKTtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9KShpKTtcclxuXHRcdFx0XHRlbGVtLmFwcGVuZENoaWxkKGRlbGV0ZUVsZW0pO1xyXG5cdFx0XHRcdGVsZW0ub25jbGljayA9IChmdW5jdGlvbihzYXZlKXtcclxuXHRcdFx0XHRcdHJldHVybiBmdW5jdGlvbigpe1xyXG5cdFx0XHRcdFx0XHRzYXZlLnN0YXRlID0gc2VyaWFsaXplU3RhdGUoKTtcclxuXHRcdFx0XHRcdFx0bG9jYWxTdG9yYWdlLnNldEl0ZW0oJ1dlYkdMT3JiaXRlclNhdmVkRGF0YScsIEpTT04uc3RyaW5naWZ5KHNhdmVEYXRhKSk7XHJcblx0XHRcdFx0XHRcdG1lc3NhZ2VDb250cm9sLnNldFRleHQoJ0dhbWUgU3RhdGUgU2F2ZWQhJyk7XHJcblx0XHRcdFx0XHRcdHNjb3BlLnRpdGxlLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XHJcblx0XHRcdFx0XHRcdHNjb3BlLnZpc2libGUgPSBmYWxzZTtcclxuXHRcdFx0XHRcdFx0c2NvcGUudmFsdWVFbGVtZW50LnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fSkoc2F2ZURhdGFbaV0pO1xyXG5cdFx0XHRcdHNhdmVDb250YWluZXIuYXBwZW5kQ2hpbGQoZWxlbSk7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHRcdHRoaXMudmFsdWVFbGVtZW50LmFwcGVuZENoaWxkKHNhdmVDb250YWluZXIpO1xyXG5cclxuXHRcdHRoaXMuc2V0VmlzaWJsZSA9IGZ1bmN0aW9uKHYpe1xyXG5cdFx0XHRpZih2KXtcclxuXHRcdFx0XHRbc2NlbmFyaW9TZWxlY3RvckNvbnRyb2wsIGxvYWRDb250cm9sXS5tYXAoZnVuY3Rpb24oY29udHJvbCl7IGNvbnRyb2wuc2V0VmlzaWJsZShmYWxzZSk7IH0pOyAvLyBNdXR1YWxseSBleGNsdXNpdmVcclxuXHRcdFx0XHR1cGRhdGVTYXZlRGF0YUxpc3QoKTtcclxuXHRcdFx0fVxyXG5cdFx0XHRNZW51Q29udHJvbC5wcm90b3R5cGUuc2V0VmlzaWJsZS5jYWxsKHRoaXMsIHYpO1xyXG5cdFx0fVxyXG5cdH0pO1xyXG5cdGNvbnRhaW5lci5hcHBlbmRDaGlsZCggc2F2ZUNvbnRyb2wuZG9tRWxlbWVudCApO1xyXG5cclxuXHRmdW5jdGlvbiBsb2FkU3RhdGUoc3RhdGUpe1xyXG5cdFx0c2ltVGltZSA9IG5ldyBEYXRlKHN0YXRlLnNpbVRpbWUpO1xyXG5cdFx0c3RhcnRUaW1lID0gbmV3IERhdGUoc3RhdGUuc3RhcnRUaW1lKTtcclxuXHRcdHZhciBib2RpZXMgPSBzdGF0ZS5ib2RpZXM7XHJcblx0XHRmb3IodmFyIGkgPSAwOyBpIDwgYm9kaWVzLmxlbmd0aDsgaSsrKXtcclxuXHRcdFx0dmFyIGJvZHkgPSBib2RpZXNbaV07XHJcblx0XHRcdGlmKGJvZHkubmFtZSBpbiBjZWxlc3RpYWxCb2RpZXMpe1xyXG5cdFx0XHRcdGNlbGVzdGlhbEJvZGllc1tib2R5Lm5hbWVdLmRlc2VyaWFsaXplKGJvZHkpO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0XHR0aHJvdHRsZUNvbnRyb2wuc2V0VGhyb3R0bGUocm9ja2V0LnRocm90dGxlKTtcclxuXHR9XHJcblxyXG5cdGxvYWRDb250cm9sID0gbmV3IChmdW5jdGlvbigpe1xyXG5cdFx0dmFyIGNvbmZpZyA9IHtcclxuXHRcdFx0YnV0dG9uVG9wOiAzNCAqIDIsXHJcblx0XHRcdGJ1dHRvbkhlaWdodDogMzIsXHJcblx0XHRcdGJ1dHRvbldpZHRoOiAzMixcclxuXHRcdH07XHJcblx0XHRNZW51Q29udHJvbC5jYWxsKHRoaXMsICdMb2FkIGRhdGEnLCBsb2FkSWNvblVybCwgY29uZmlnKTtcclxuXHRcdHZhciBzY29wZSA9IHRoaXM7XHJcblx0XHR0aGlzLnZhbHVlRWxlbWVudC5zdHlsZS5ib3JkZXIgPSBcIjVweCByaWRnZSAjZmY3ZmZmXCI7XHJcblxyXG5cdFx0dmFyIHNhdmVDb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuXHJcblx0XHRmdW5jdGlvbiB1cGRhdGVTYXZlRGF0YUxpc3QoKXtcclxuXHRcdFx0d2hpbGUoMCA8IHNhdmVDb250YWluZXIuY2hpbGRyZW4ubGVuZ3RoKSBzYXZlQ29udGFpbmVyLnJlbW92ZUNoaWxkKHNhdmVDb250YWluZXIuY2hpbGRyZW5bMF0pO1xyXG5cdFx0XHR2YXIgc2F2ZURhdGEgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnV2ViR0xPcmJpdGVyU2F2ZWREYXRhJykgPyBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdXZWJHTE9yYml0ZXJTYXZlZERhdGEnKSkgOiBbXTtcclxuXHRcdFx0Zm9yKHZhciBpID0gMDsgaSA8IHNhdmVEYXRhLmxlbmd0aDsgaSsrKXtcclxuXHRcdFx0XHR2YXIgZWxlbSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG5cdFx0XHRcdGVsZW0uc3R5bGUubWFyZ2luID0gXCI1cHhcIjtcclxuXHRcdFx0XHRlbGVtLnN0eWxlLnBhZGRpbmcgPSBcIjVweFwiO1xyXG5cdFx0XHRcdGVsZW0uc3R5bGUuYm9yZGVyID0gXCIxcHggc29saWQgI2ZmMDBmZlwiO1xyXG5cdFx0XHRcdHZhciBsYWJlbEVsZW0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuXHRcdFx0XHRsYWJlbEVsZW0uaW5uZXJIVE1MID0gc2F2ZURhdGFbaV0udGl0bGU7XHJcblx0XHRcdFx0bGFiZWxFbGVtLnN0eWxlLmNzc1RleHQgPSBcIndpZHRoOiAxMDAlOyBtYXJnaW4tcmlnaHQ6IC0zMnB4OyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IHRleHQtYWxpZ246IG92ZXJmbG93OiBhdXRvO1wiO1xyXG5cdFx0XHRcdGVsZW0uYXBwZW5kQ2hpbGQobGFiZWxFbGVtKTtcclxuXHRcdFx0XHR2YXIgZGVsZXRlRWxlbSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2ltZycpO1xyXG5cdFx0XHRcdGRlbGV0ZUVsZW0uc2V0QXR0cmlidXRlKCdzcmMnLCB0cmFzaGNhblVybCk7XHJcblx0XHRcdFx0ZGVsZXRlRWxlbS5zdHlsZS53aWR0aCA9ICcyMHB4JztcclxuXHRcdFx0XHRkZWxldGVFbGVtLm9uY2xpY2sgPSAoZnVuY3Rpb24oaSl7XHJcblx0XHRcdFx0XHRyZXR1cm4gZnVuY3Rpb24oZSl7XHJcblx0XHRcdFx0XHRcdHNhdmVEYXRhLnNwbGljZShpLCAxKTtcclxuXHRcdFx0XHRcdFx0bG9jYWxTdG9yYWdlLnNldEl0ZW0oJ1dlYkdMT3JiaXRlclNhdmVkRGF0YScsIEpTT04uc3RyaW5naWZ5KHNhdmVEYXRhKSk7XHJcblx0XHRcdFx0XHRcdG1lc3NhZ2VDb250cm9sLnNldFRleHQoJ0dhbWUgU3RhdGUgRGVsZXRlZCEnKTtcclxuXHRcdFx0XHRcdFx0c2NvcGUudGl0bGUuc3R5bGUuZGlzcGxheSA9ICdub25lJztcclxuXHRcdFx0XHRcdFx0c2NvcGUudmlzaWJsZSA9IGZhbHNlO1xyXG5cdFx0XHRcdFx0XHRzY29wZS52YWx1ZUVsZW1lbnQuc3R5bGUuZGlzcGxheSA9ICdub25lJztcclxuXHRcdFx0XHRcdFx0ZS5zdG9wUHJvcGFnYXRpb24oKTtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9KShpKTtcclxuXHRcdFx0XHRlbGVtLmFwcGVuZENoaWxkKGRlbGV0ZUVsZW0pO1xyXG5cdFx0XHRcdGVsZW0ub25jbGljayA9IChmdW5jdGlvbihzYXZlKXtcclxuXHRcdFx0XHRcdHJldHVybiBmdW5jdGlvbigpe1xyXG5cdFx0XHRcdFx0XHRsb2FkU3RhdGUoc2F2ZS5zdGF0ZSk7XHJcblx0XHRcdFx0XHRcdG1lc3NhZ2VDb250cm9sLnNldFRleHQoJ0dhbWUgU3RhdGUgTG9hZGVkIScpO1xyXG5cdFx0XHRcdFx0XHRzY29wZS50aXRsZS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xyXG5cdFx0XHRcdFx0XHRzY29wZS52aXNpYmxlID0gZmFsc2U7XHJcblx0XHRcdFx0XHRcdHNjb3BlLnZhbHVlRWxlbWVudC5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH0pKHNhdmVEYXRhW2ldKTtcclxuXHRcdFx0XHRzYXZlQ29udGFpbmVyLmFwcGVuZENoaWxkKGVsZW0pO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0XHR0aGlzLnZhbHVlRWxlbWVudC5hcHBlbmRDaGlsZChzYXZlQ29udGFpbmVyKTtcclxuXHJcblx0XHR0aGlzLnNldFZpc2libGUgPSBmdW5jdGlvbih2KXtcclxuXHRcdFx0aWYodil7XHJcblx0XHRcdFx0W3NjZW5hcmlvU2VsZWN0b3JDb250cm9sLCBzYXZlQ29udHJvbF0ubWFwKGZ1bmN0aW9uKGNvbnRyb2wpeyBjb250cm9sLnNldFZpc2libGUoZmFsc2UpOyB9KTsgLy8gTXV0dWFsbHkgZXhjbHVzaXZlXHJcblx0XHRcdFx0dXBkYXRlU2F2ZURhdGFMaXN0KCk7XHJcblx0XHRcdH1cclxuXHRcdFx0TWVudUNvbnRyb2wucHJvdG90eXBlLnNldFZpc2libGUuY2FsbCh0aGlzLCB2KTtcclxuXHRcdH1cclxuXHR9KTtcclxuXHRjb250YWluZXIuYXBwZW5kQ2hpbGQoIGxvYWRDb250cm9sLmRvbUVsZW1lbnQgKTtcclxuXHJcblx0d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoICdyZXNpemUnLCBvbldpbmRvd1Jlc2l6ZSwgZmFsc2UgKTtcclxuXHR3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lciggJ2tleWRvd24nLCBvbktleURvd24sIGZhbHNlICk7XHJcblx0d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoICdrZXl1cCcsIG9uS2V5VXAsIGZhbHNlICk7XHJcblx0d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoICdwYWdlc2hvdycsIGZ1bmN0aW9uKCl7XHJcblx0XHR2YXIgc3RhdGUgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnV2ViR0xPcmJpdGVyQXV0b1NhdmUnKTtcclxuXHRcdGlmKHN0YXRlKXtcclxuXHRcdFx0bG9hZFN0YXRlKEpTT04ucGFyc2Uoc3RhdGUpKTtcclxuXHRcdH1cclxuXHR9KTtcclxuXHR3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lciggJ2JlZm9yZXVubG9hZCcsIGZ1bmN0aW9uKCl7XHJcblx0XHRsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnV2ViR0xPcmJpdGVyQXV0b1NhdmUnLCBKU09OLnN0cmluZ2lmeShzZXJpYWxpemVTdGF0ZSgpKSk7XHJcblx0fSk7XHJcblxyXG5cdC8vIFN0YXJ0IHRoZSBjbG9jayBhZnRlciB0aGUgaW5pdGlhbGl6YXRpb24gaXMgZmluaXNoZWQsIG90aGVyd2lzZVxyXG5cdC8vIHRoZSB2ZXJ5IGZpcnN0IGZyYW1lIG9mIHNpbXVsYXRpb24gY2FuIGJlIGxvbmcuXHJcblx0c2ltVGltZSA9IG5ldyBEYXRlKCk7XHJcblx0cmVhbFRpbWUgPSBzaW1UaW1lO1xyXG5cdHN0YXJ0VGltZSA9IHNpbVRpbWU7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIG9uV2luZG93UmVzaXplKCkge1xyXG5cclxuXHR3aW5kb3dIYWxmWCA9IHdpbmRvdy5pbm5lcldpZHRoIC8gMjtcclxuXHR3aW5kb3dIYWxmWSA9IHdpbmRvdy5pbm5lckhlaWdodCAvIDI7XHJcblxyXG5cdGNhbWVyYS5hc3BlY3QgPSB3aW5kb3cuaW5uZXJXaWR0aCAvIHdpbmRvdy5pbm5lckhlaWdodDtcclxuXHRjYW1lcmEudXBkYXRlUHJvamVjdGlvbk1hdHJpeCgpO1xyXG5cclxuXHRyZW5kZXJlci5zZXRTaXplKCB3aW5kb3cuaW5uZXJXaWR0aCwgd2luZG93LmlubmVySGVpZ2h0ICk7XHJcblxyXG59XHJcblxyXG5mdW5jdGlvbiBhbmltYXRlKCkge1xyXG5cclxuXHRyZXF1ZXN0QW5pbWF0aW9uRnJhbWUoIGFuaW1hdGUgKTtcclxuXHJcblx0cmVuZGVyKCk7XHJcblx0c3RhdHMudXBkYXRlKCk7XHJcblxyXG59XHJcblxyXG4vLyBGaWxscyBsZWFkaW5nIHplcm8gaWYgdGhlIHZhbHVlIGlzIGxlc3MgdGhhbiAxMCwgbWFraW5nIHRoZSByZXR1cm5lZCBzdHJpbmcgYWx3YXlzIHR3byBjaGFyYWN0ZXJzIGxvbmcuXHJcbi8vIE5vdGUgdGhhdCB2YWx1ZXMgbm90IGxlc3MgdGhhbiAxMDAgb3IgbmVnYXRpdmUgdmFsdWVzIGFyZSBub3QgZ3VhcmFudGVlZCB0byBiZSB0d28gY2hhcmFjdGVycyB3aWRlLlxyXG4vLyBUaGlzIGZ1bmN0aW9uIGlzIGZvciBkYXRlIHRpbWUgZm9ybWF0dGluZyBwdXJwb3NlIG9ubHkuXHJcbmZ1bmN0aW9uIHplcm9maWxsKHYpe1xyXG5cdGlmKHYgPCAxMClcclxuXHRcdHJldHVybiBcIjBcIiArIHY7XHJcblx0ZWxzZVxyXG5cdFx0cmV0dXJuIHY7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHJlbmRlcigpIHtcclxuXHR2YXIgbm93ID0gbmV3IERhdGUoKTtcclxuXHR2YXIgcmVhbERlbHRhVGltZU1pbGxpU2VjID0gbm93LmdldFRpbWUoKSAtIHJlYWxUaW1lLmdldFRpbWUoKTtcclxuXHR2YXIgdGltZSA9IG5ldyBEYXRlKHNpbVRpbWUuZ2V0VGltZSgpICsgcmVhbERlbHRhVGltZU1pbGxpU2VjICogdGltZXNjYWxlKTtcclxuXHR2YXIgZGVsdGFUaW1lID0gKHRpbWUuZ2V0VGltZSgpIC0gc2ltVGltZS5nZXRUaW1lKCkpICogMWUtMztcclxuXHRyZWFsVGltZSA9IG5vdztcclxuXHRzaW1UaW1lID0gdGltZTtcclxuXHR0aW1lc2NhbGVDb250cm9sLnNldERhdGUodGltZS5nZXRGdWxsWWVhcigpICsgJy8nICsgemVyb2ZpbGwodGltZS5nZXRNb250aCgpICsgMSkgKyAnLycgKyB6ZXJvZmlsbCh0aW1lLmdldERhdGUoKSlcclxuXHRcdCsgJyAnICsgemVyb2ZpbGwodGltZS5nZXRIb3VycygpKSArICc6JyArIHplcm9maWxsKHRpbWUuZ2V0TWludXRlcygpKSArICc6JyArIHplcm9maWxsKHRpbWUuZ2V0U2Vjb25kcygpKSk7XHJcblx0c3BlZWRDb250cm9sLnNldFNwZWVkKCk7XHJcblx0c3RhdHNDb250cm9sLnNldFRleHQoKTtcclxuXHRzZXR0aW5nc0NvbnRyb2wuc2V0VGV4dCgpO1xyXG5cdG1lc3NhZ2VDb250cm9sLnRpbWVTdGVwKHJlYWxEZWx0YVRpbWVNaWxsaVNlYyAqIDFlLTMpO1xyXG5cclxuXHRjYW1lcmEubmVhciA9IE1hdGgubWluKDEsIGNhbWVyYUNvbnRyb2xzLnRhcmdldC5kaXN0YW5jZVRvKGNhbWVyYS5wb3NpdGlvbikgLyAxMCk7XHJcblx0Y2FtZXJhLnVwZGF0ZVByb2plY3Rpb25NYXRyaXgoKTtcclxuXHJcblx0dmFyIGFjY2VsZXJhdGlvbiA9IDVlLTEwO1xyXG5cdHZhciBkaXYgPSAxMDA7IC8vIFdlIHNob3VsZCBwaWNrIHN1YmRpdmlkZSBzaW11bGF0aW9uIHN0ZXAgY291bnQgYnkgYW5ndWxhciBzcGVlZCFcclxuXHRmdW5jdGlvbiBzaW11bGF0ZUJvZHkocGFyZW50KXtcclxuXHRcdHZhciBjaGlsZHJlbiA9IHBhcmVudC5jaGlsZHJlbjtcclxuXHRcdGZvcih2YXIgaSA9IDA7IGkgPCBjaGlsZHJlbi5sZW5ndGg7KXtcclxuXHRcdFx0dmFyIGEgPSBjaGlsZHJlbltpXTtcclxuXHRcdFx0dmFyIHNsID0gYS5wb3NpdGlvbi5sZW5ndGhTcSgpO1xyXG5cdFx0XHRpZihzbCAhPT0gMCl7XHJcblx0XHRcdFx0dmFyIGFuZ2xlQWNjZWxlcmF0aW9uID0gMWUtMDtcclxuXHRcdFx0XHR2YXIgYWNjZWwgPSBhLnBvc2l0aW9uLmNsb25lKCkubmVnYXRlKCkubm9ybWFsaXplKCkubXVsdGlwbHlTY2FsYXIoZGVsdGFUaW1lIC8gZGl2ICogYS5wYXJlbnQuR00gLyBzbCk7XHJcblx0XHRcdFx0aWYoc2VsZWN0X29iaiA9PT0gYSAmJiBzZWxlY3Rfb2JqLmNvbnRyb2xsYWJsZSAmJiB0aW1lc2NhbGUgPD0gMSl7XHJcblx0XHRcdFx0XHRpZihidXR0b25zLnVwKSBzZWxlY3Rfb2JqLmFuZ3VsYXJWZWxvY2l0eS5hZGQobmV3IFRIUkVFLlZlY3RvcjMoMCwgMCwgMSkuYXBwbHlRdWF0ZXJuaW9uKHNlbGVjdF9vYmoucXVhdGVybmlvbikubXVsdGlwbHlTY2FsYXIoYW5nbGVBY2NlbGVyYXRpb24gKiBkZWx0YVRpbWUgLyBkaXYpKTtcclxuXHRcdFx0XHRcdGlmKGJ1dHRvbnMuZG93bikgc2VsZWN0X29iai5hbmd1bGFyVmVsb2NpdHkuYWRkKG5ldyBUSFJFRS5WZWN0b3IzKDAsIDAsIC0xKS5hcHBseVF1YXRlcm5pb24oc2VsZWN0X29iai5xdWF0ZXJuaW9uKS5tdWx0aXBseVNjYWxhcihhbmdsZUFjY2VsZXJhdGlvbiAqIGRlbHRhVGltZSAvIGRpdikpO1xyXG5cdFx0XHRcdFx0aWYoYnV0dG9ucy5sZWZ0KSBzZWxlY3Rfb2JqLmFuZ3VsYXJWZWxvY2l0eS5hZGQobmV3IFRIUkVFLlZlY3RvcjMoMCwgMSwgMCkuYXBwbHlRdWF0ZXJuaW9uKHNlbGVjdF9vYmoucXVhdGVybmlvbikubXVsdGlwbHlTY2FsYXIoYW5nbGVBY2NlbGVyYXRpb24gKiBkZWx0YVRpbWUgLyBkaXYpKTtcclxuXHRcdFx0XHRcdGlmKGJ1dHRvbnMucmlnaHQpIHNlbGVjdF9vYmouYW5ndWxhclZlbG9jaXR5LmFkZChuZXcgVEhSRUUuVmVjdG9yMygwLCAtMSwgMCkuYXBwbHlRdWF0ZXJuaW9uKHNlbGVjdF9vYmoucXVhdGVybmlvbikubXVsdGlwbHlTY2FsYXIoYW5nbGVBY2NlbGVyYXRpb24gKiBkZWx0YVRpbWUgLyBkaXYpKTtcclxuXHRcdFx0XHRcdGlmKGJ1dHRvbnMuY291bnRlcmNsb2Nrd2lzZSkgc2VsZWN0X29iai5hbmd1bGFyVmVsb2NpdHkuYWRkKG5ldyBUSFJFRS5WZWN0b3IzKDEsIDAsIDApLmFwcGx5UXVhdGVybmlvbihzZWxlY3Rfb2JqLnF1YXRlcm5pb24pLm11bHRpcGx5U2NhbGFyKGFuZ2xlQWNjZWxlcmF0aW9uICogZGVsdGFUaW1lIC8gZGl2KSk7XHJcblx0XHRcdFx0XHRpZihidXR0b25zLmNsb2Nrd2lzZSkgc2VsZWN0X29iai5hbmd1bGFyVmVsb2NpdHkuYWRkKG5ldyBUSFJFRS5WZWN0b3IzKC0xLCAwLCAwKS5hcHBseVF1YXRlcm5pb24oc2VsZWN0X29iai5xdWF0ZXJuaW9uKS5tdWx0aXBseVNjYWxhcihhbmdsZUFjY2VsZXJhdGlvbiAqIGRlbHRhVGltZSAvIGRpdikpO1xyXG5cdFx0XHRcdFx0aWYoIWJ1dHRvbnMudXAgJiYgIWJ1dHRvbnMuZG93biAmJiAhYnV0dG9ucy5sZWZ0ICYmICFidXR0b25zLnJpZ2h0ICYmICFidXR0b25zLmNvdW50ZXJjbG9ja3dpc2UgJiYgIWJ1dHRvbnMuY2xvY2t3aXNlKXtcclxuXHRcdFx0XHRcdFx0Ly8gSW1tZWRpYXRlbHkgc3RvcCBtaWNyby1yb3RhdGlvbiBpZiB0aGUgYm9keSBpcyBjb250cm9sbGVkLlxyXG5cdFx0XHRcdFx0XHQvLyBUaGlzIGlzIGRvbmUgdG8gbWFrZSBpdCBzdGlsbCBpbiBsYXJnZXIgdGltZXNjYWxlLCBzaW5jZSBtaWNyby1yb3RhdGlvbiBjYW5ub3QgYmUgY2FuY2VsZWRcclxuXHRcdFx0XHRcdFx0Ly8gYnkgcHJvZHVjdCBvZiBhbmd1bGFyVmVsb2NpdHkgYW5kIHF1YXRlcm5pb24gd2hpY2ggdW5kZXJmbG93cyBieSBzcXVhcmUuXHJcblx0XHRcdFx0XHRcdC8vIFRoaW5rIHRoYXQgdGhlIHZlaGljbGUgaGFzIGEgbW9tZW50dW0gd2hlZWxzIHRoYXQgY2FuY2VscyBtaWNyby1yb3RhdGlvbiBjb250aW51b3VzbHkgd29ya2luZy5cclxuXHRcdFx0XHRcdFx0aWYoMWUtNiA8IHNlbGVjdF9vYmouYW5ndWxhclZlbG9jaXR5Lmxlbmd0aFNxKCkpXHJcblx0XHRcdFx0XHRcdFx0c2VsZWN0X29iai5hbmd1bGFyVmVsb2NpdHkuYWRkKHNlbGVjdF9vYmouYW5ndWxhclZlbG9jaXR5LmNsb25lKCkubm9ybWFsaXplKCkubXVsdGlwbHlTY2FsYXIoLWFuZ2xlQWNjZWxlcmF0aW9uICogZGVsdGFUaW1lIC8gZGl2KSk7XHJcblx0XHRcdFx0XHRcdGVsc2VcclxuXHRcdFx0XHRcdFx0XHRzZWxlY3Rfb2JqLmFuZ3VsYXJWZWxvY2l0eS5zZXQoMCwgMCwgMCk7XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRpZigwIDwgc2VsZWN0X29iai50aHJvdHRsZSl7XHJcblx0XHRcdFx0XHRcdHZhciBkZWx0YVYgPSBhY2NlbGVyYXRpb24gKiBzZWxlY3Rfb2JqLnRocm90dGxlICogZGVsdGFUaW1lIC8gZGl2O1xyXG5cdFx0XHRcdFx0XHRzZWxlY3Rfb2JqLnZlbG9jaXR5LmFkZChuZXcgVEhSRUUuVmVjdG9yMygxLCAwLCAwKS5hcHBseVF1YXRlcm5pb24oc2VsZWN0X29iai5xdWF0ZXJuaW9uKS5tdWx0aXBseVNjYWxhcihkZWx0YVYpKTtcclxuXHRcdFx0XHRcdFx0c2VsZWN0X29iai50b3RhbERlbHRhViArPSBkZWx0YVY7XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdHZhciBkdmVsbyA9IGFjY2VsLmNsb25lKCkubXVsdGlwbHlTY2FsYXIoMC41KTtcclxuXHRcdFx0XHR2YXIgdmVjMCA9IGEucG9zaXRpb24uY2xvbmUoKS5hZGQoYS52ZWxvY2l0eS5jbG9uZSgpLm11bHRpcGx5U2NhbGFyKGRlbHRhVGltZSAvIGRpdiAvIDIuKSk7XHJcblx0XHRcdFx0dmFyIGFjY2VsMSA9IHZlYzAuY2xvbmUoKS5uZWdhdGUoKS5ub3JtYWxpemUoKS5tdWx0aXBseVNjYWxhcihkZWx0YVRpbWUgLyBkaXYgKiBhLnBhcmVudC5HTSAvIHZlYzAubGVuZ3RoU3EoKSk7XHJcblx0XHRcdFx0dmFyIHZlbG8xID0gYS52ZWxvY2l0eS5jbG9uZSgpLmFkZChkdmVsbyk7XHJcblxyXG5cdFx0XHRcdGEudmVsb2NpdHkuYWRkKGFjY2VsMSk7XHJcblx0XHRcdFx0YS5wb3NpdGlvbi5hZGQodmVsbzEubXVsdGlwbHlTY2FsYXIoZGVsdGFUaW1lIC8gZGl2KSk7XHJcblx0XHRcdFx0aWYoMCA8IGEuYW5ndWxhclZlbG9jaXR5Lmxlbmd0aFNxKCkpe1xyXG5cdFx0XHRcdFx0dmFyIGF4aXMgPSBhLmFuZ3VsYXJWZWxvY2l0eS5jbG9uZSgpLm5vcm1hbGl6ZSgpO1xyXG5cdFx0XHRcdFx0Ly8gV2UgaGF2ZSB0byBtdWx0aXBseSBpbiB0aGlzIG9yZGVyIVxyXG5cdFx0XHRcdFx0YS5xdWF0ZXJuaW9uLm11bHRpcGx5UXVhdGVybmlvbnMoQXhpc0FuZ2xlUXVhdGVybmlvbihheGlzLngsIGF4aXMueSwgYXhpcy56LCBhLmFuZ3VsYXJWZWxvY2l0eS5sZW5ndGgoKSAqIGRlbHRhVGltZSAvIGRpdiksIGEucXVhdGVybmlvbik7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblx0XHRcdC8vIE9ubHkgY29udHJvbGxhYmxlIG9iamVjdHMgY2FuIGNoYW5nZSBvcmJpdGluZyBib2R5XHJcblx0XHRcdGlmKGEuY29udHJvbGxhYmxlKXtcclxuXHRcdFx0XHQvLyBDaGVjayBpZiB3ZSBhcmUgbGVhdmluZyBzcGhlcmUgb2YgaW5mbHVlbmNlIG9mIGN1cnJlbnQgcGFyZW50LlxyXG5cdFx0XHRcdGlmKGEucGFyZW50LnBhcmVudCAmJiBhLnBhcmVudC5zb2kgJiYgYS5wYXJlbnQuc29pICogMS4wMSA8IGEucG9zaXRpb24ubGVuZ3RoKCkpe1xyXG5cdFx0XHRcdFx0YS5wb3NpdGlvbi5hZGQocGFyZW50LnBvc2l0aW9uKTtcclxuXHRcdFx0XHRcdGEudmVsb2NpdHkuYWRkKHBhcmVudC52ZWxvY2l0eSk7XHJcblx0XHRcdFx0XHR2YXIgaiA9IGNoaWxkcmVuLmluZGV4T2YoYSk7XHJcblx0XHRcdFx0XHRpZigwIDw9IGopXHJcblx0XHRcdFx0XHRcdGNoaWxkcmVuLnNwbGljZShqLCAxKTtcclxuXHRcdFx0XHRcdGEucGFyZW50ID0gcGFyZW50LnBhcmVudDtcclxuXHRcdFx0XHRcdGEucGFyZW50LmNoaWxkcmVuLnB1c2goYSk7XHJcblx0XHRcdFx0XHRjb250aW51ZTsgLy8gQ29udGludWUgYnV0IG5vdCBpbmNyZW1lbnQgaVxyXG5cdFx0XHRcdH1cclxuXHRcdFx0XHR2YXIgc2tpcCA9IGZhbHNlO1xyXG5cdFx0XHRcdC8vIENoZWNrIGlmIHdlIGFyZSBlbnRlcmluZyBzcGhlcmUgb2YgaW5mbHVlbmNlIG9mIGFub3RoZXIgc2libGluZy5cclxuXHRcdFx0XHRmb3IodmFyIGogPSAwOyBqIDwgY2hpbGRyZW4ubGVuZ3RoOyBqKyspe1xyXG5cdFx0XHRcdFx0dmFyIGFqID0gY2hpbGRyZW5bal07XHJcblx0XHRcdFx0XHRpZihhaiA9PT0gYSlcclxuXHRcdFx0XHRcdFx0Y29udGludWU7XHJcblx0XHRcdFx0XHRpZighYWouc29pKVxyXG5cdFx0XHRcdFx0XHRjb250aW51ZTtcclxuXHRcdFx0XHRcdGlmKGFqLnBvc2l0aW9uLmRpc3RhbmNlVG8oYS5wb3NpdGlvbikgPCBhai5zb2kgKiAuOTkpe1xyXG5cdFx0XHRcdFx0XHRhLnBvc2l0aW9uLnN1Yihhai5wb3NpdGlvbik7XHJcblx0XHRcdFx0XHRcdGEudmVsb2NpdHkuc3ViKGFqLnZlbG9jaXR5KTtcclxuXHRcdFx0XHRcdFx0dmFyIGsgPSBjaGlsZHJlbi5pbmRleE9mKGEpO1xyXG5cdFx0XHRcdFx0XHRpZigwIDw9IGspXHJcblx0XHRcdFx0XHRcdFx0Y2hpbGRyZW4uc3BsaWNlKGssIDEpO1xyXG5cdFx0XHRcdFx0XHRhLnBhcmVudCA9IGFqO1xyXG5cdFx0XHRcdFx0XHRhai5jaGlsZHJlbi5wdXNoKGEpO1xyXG5cdFx0XHRcdFx0XHRza2lwID0gdHJ1ZTtcclxuXHRcdFx0XHRcdFx0YnJlYWs7XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdGlmKHNraXApXHJcblx0XHRcdFx0XHRjb250aW51ZTsgLy8gQ29udGludWUgYnV0IG5vdCBpbmNyZW1lbnQgaVxyXG5cdFx0XHR9XHJcblx0XHRcdHNpbXVsYXRlQm9keShhKTtcclxuXHRcdFx0aSsrO1xyXG5cdFx0fVxyXG5cdH1cclxuXHJcblx0Zm9yKHZhciBkID0gMDsgZCA8IGRpdjsgZCsrKXtcclxuXHRcdC8vIEFsbG93IHRyeWluZyB0byBpbmNyZWFzZSB0aHJvdHRsZSB3aGVuIHRpbWV3YXJwaW5nIGluIG9yZGVyIHRvIHNob3cgdGhlIG1lc3NhZ2VcclxuXHRcdGlmKGFjY2VsZXJhdGUpIHRocm90dGxlQ29udHJvbC5pbmNyZW1lbnQoZGVsdGFUaW1lIC8gZGl2KTtcclxuXHRcdGlmKGRlY2VsZXJhdGUpIHRocm90dGxlQ29udHJvbC5kZWNyZW1lbnQoZGVsdGFUaW1lIC8gZGl2KTtcclxuXHJcblx0XHRzaW11bGF0ZUJvZHkoc3VuKTtcclxuXHR9XHJcblx0c3VuLnVwZGF0ZSgpO1xyXG5cclxuXHR2YXIgaXJvdGF0ZSA9IEF4aXNBbmdsZVF1YXRlcm5pb24oLTEsIDAsIDAsIE1hdGguUEkgLyAyKTtcclxuXHQvLyBvZmZzZXQgc3VuIHBvc2l0aW9uXHJcblx0bGlnaHQucG9zaXRpb24uY29weShzdW4ubW9kZWwucG9zaXRpb24pO1xyXG5cclxuXHRncmlkcy52aXNpYmxlID0gZ3JpZF9lbmFibGU7XHJcblxyXG4vL1x0XHRcdFx0Y2FtZXJhLnVwLmNvcHkobmV3IFRIUkVFLlZlY3RvcjMoMCwwLDEpKTsgLy8gVGhpcyBkaWQndCB3b3JrIHdpdGggT3JiaXRDb250cm9sc1xyXG5cdGNhbWVyYUNvbnRyb2xzLnVwZGF0ZSgpO1xyXG5cclxuXHR2YXIgb2xkUG9zaXRpb24gPSBjYW1lcmEucG9zaXRpb24uY2xvbmUoKTtcclxuXHR2YXIgb2xkUXVhdGVybmlvbiA9IGNhbWVyYS5xdWF0ZXJuaW9uLmNsb25lKCk7XHJcblx0aWYoc3luY19yb3RhdGUgJiYgc2VsZWN0X29iail7XHJcblx0XHRjYW1lcmEucXVhdGVybmlvbi5jb3B5KFxyXG5cdFx0XHRzZWxlY3Rfb2JqLnF1YXRlcm5pb24uY2xvbmUoKVxyXG5cdFx0XHQubXVsdGlwbHkoQXhpc0FuZ2xlUXVhdGVybmlvbigwLCAxLCAwLCAtMSpNYXRoLlBJIC8gMikpKTtcclxuXHRcdGNhbWVyYS5wb3NpdGlvbi5jb3B5KG5ldyBUSFJFRS5WZWN0b3IzKDAsIDAuMiwgMSkubm9ybWFsaXplKCkubXVsdGlwbHlTY2FsYXIoY2FtZXJhLnBvc2l0aW9uLmxlbmd0aCgpKS5hcHBseVF1YXRlcm5pb24oY2FtZXJhLnF1YXRlcm5pb24pKTtcclxuXHR9XHJcblx0dmFyIHBvc2l0aW9uID0gY2FtZXJhLnBvc2l0aW9uLmNsb25lKCk7XHJcblx0Y2FtZXJhLnBvc2l0aW9uLnNldCgwLDAsMCk7XHJcblx0cmVuZGVyZXIucmVuZGVyKCBiYWNrZ3JvdW5kLCBjYW1lcmEpO1xyXG5cdGNhbWVyYS5wb3NpdGlvbi5jb3B5KHBvc2l0aW9uKTtcclxuXHRyZW5kZXJlci5yZW5kZXIoIHNjZW5lLCBjYW1lcmEgKTtcclxuXHJcblx0aWYobmF2YmFsbE1lc2ggJiYgc2VsZWN0X29iaiAmJiBzZWxlY3Rfb2JqLmNvbnRyb2xsYWJsZSl7XHJcblx0XHQvLyBGaXJzdCwgY2FsY3VsYXRlIHRoZSBxdWF0ZXJuaW9uIGZvciByb3RhdGluZyB0aGUgc3lzdGVtIHNvIHRoYXRcclxuXHRcdC8vIFggYXhpcyBwb2ludHMgbm9ydGgsIFkgYXhpcyBwb2ludHMgZWFzdCBhbmQgWiBheGlzIHBvaW50cyB6ZW5pdGguXHJcblx0XHR2YXIgbm9ydGggPSBuZXcgVEhSRUUuVmVjdG9yMygwLCAwLCAxKS5hcHBseVF1YXRlcm5pb24oc2VsZWN0X29iai5wYXJlbnQucXVhdGVybmlvbik7XHJcblx0XHR2YXIgdGFuZ2VudCA9IG5vcnRoLmNyb3NzKHNlbGVjdF9vYmoucG9zaXRpb24pLm5vcm1hbGl6ZSgpO1xyXG5cdFx0dmFyIHFiYWxsID0gbmV3IFRIUkVFLlF1YXRlcm5pb24oKTtcclxuXHRcdHZhciBtYXQgPSBuZXcgVEhSRUUuTWF0cml4NCgpO1xyXG5cdFx0dmFyIG5vcm1hbCA9IHNlbGVjdF9vYmoucG9zaXRpb24uY2xvbmUoKS5ub3JtYWxpemUoKS5uZWdhdGUoKTtcclxuXHRcdG1hdC5tYWtlQmFzaXModGFuZ2VudC5jbG9uZSgpLmNyb3NzKG5vcm1hbCksIHRhbmdlbnQsIG5vcm1hbCk7XHJcblx0XHRxYmFsbC5zZXRGcm9tUm90YXRpb25NYXRyaXggKG1hdCk7XHJcblxyXG5cdFx0bmF2YmFsbE1lc2gucXVhdGVybmlvbi5jb3B5KFxyXG5cdFx0XHRBeGlzQW5nbGVRdWF0ZXJuaW9uKDAsIDEsIDAsIC0xKk1hdGguUEkgLyAyKVxyXG5cdFx0XHQubXVsdGlwbHkoQXhpc0FuZ2xlUXVhdGVybmlvbigwLCAwLCAxLCBNYXRoLlBJKSlcclxuXHRcdFx0Lm11bHRpcGx5KHNlbGVjdF9vYmoucXVhdGVybmlvbi5jbG9uZSgpLmNvbmp1Z2F0ZSgpKVxyXG5cdFx0XHQubXVsdGlwbHkocWJhbGwpXHJcblx0XHRcdC5tdWx0aXBseShBeGlzQW5nbGVRdWF0ZXJuaW9uKDEsIDAsIDAsIE1hdGguUEkgLyAyKSlcclxuXHRcdFx0KTtcclxuXHRcdG5hdmJhbGxNZXNoLnBvc2l0aW9uLnkgPSAtd2luZG93LmlubmVySGVpZ2h0IC8gMiArIG5hdmJhbGxSYWRpdXM7XHJcblx0XHR2YXIgZ3JhZGU7XHJcblx0XHR2YXIgZmFjdG9yO1xyXG5cdFx0aWYobmV3IFRIUkVFLlZlY3RvcjMoMSwgMCwgMCkuYXBwbHlRdWF0ZXJuaW9uKHNlbGVjdF9vYmoucXVhdGVybmlvbikuZG90KHNlbGVjdF9vYmoudmVsb2NpdHkpIDwgMCl7XHJcblx0XHRcdGdyYWRlID0gcmV0cm9ncmFkZTtcclxuXHRcdFx0cHJvZ3JhZGUudmlzaWJsZSA9IGZhbHNlO1xyXG5cdFx0XHRmYWN0b3IgPSAtMS47XHJcblx0XHR9XHJcblx0XHRlbHNle1xyXG5cdFx0XHRncmFkZSA9IHByb2dyYWRlO1xyXG5cdFx0XHRyZXRyb2dyYWRlLnZpc2libGUgPSBmYWxzZTtcclxuXHRcdFx0ZmFjdG9yID0gMS47XHJcblx0XHR9XHJcblx0XHRncmFkZS52aXNpYmxlID0gdHJ1ZTtcclxuXHRcdGdyYWRlLnBvc2l0aW9uLnkgPSAtd2luZG93LmlubmVySGVpZ2h0IC8gMiArIG5hdmJhbGxSYWRpdXMgKyBmYWN0b3IgKiBuZXcgVEhSRUUuVmVjdG9yMygwLCAxLCAwKS5hcHBseVF1YXRlcm5pb24oc2VsZWN0X29iai5xdWF0ZXJuaW9uKS5kb3Qoc2VsZWN0X29iai52ZWxvY2l0eSkgLyBzZWxlY3Rfb2JqLnZlbG9jaXR5Lmxlbmd0aCgpICogbmF2YmFsbFJhZGl1cztcclxuXHRcdGdyYWRlLnBvc2l0aW9uLnggPSBmYWN0b3IgKiBuZXcgVEhSRUUuVmVjdG9yMygwLCAwLCAxKS5hcHBseVF1YXRlcm5pb24oc2VsZWN0X29iai5xdWF0ZXJuaW9uKS5kb3Qoc2VsZWN0X29iai52ZWxvY2l0eSkgLyBzZWxlY3Rfb2JqLnZlbG9jaXR5Lmxlbmd0aCgpICogbmF2YmFsbFJhZGl1cztcclxuXHRcdGNhbWVyYS5wb3NpdGlvbi5zZXQoMCwwLDApO1xyXG5cdFx0Y2FtZXJhLnF1YXRlcm5pb24uc2V0KDEsMCwwLDApO1xyXG5cdFx0cmVuZGVyZXIucmVuZGVyKCBvdmVybGF5LCBvdmVybGF5Q2FtZXJhKTtcclxuXHR9XHJcblxyXG5cdC8vIFJlc3RvcmUgdGhlIG9yaWdpbmFsIHN0YXRlIGJlY2F1c2UgY2FtZXJhQ29udHJvbHMgZXhwZWN0IHRoZXNlIHZhcmlhYmxlcyB1bmNoYW5nZWRcclxuXHRjYW1lcmEucXVhdGVybmlvbi5jb3B5KG9sZFF1YXRlcm5pb24pO1xyXG5cdGNhbWVyYS5wb3NpdGlvbi5jb3B5KG9sZFBvc2l0aW9uKTtcclxuXHJcblx0aWYoc2VsZWN0X29iaiAmJiBzZWxlY3Rfb2JqLnBhcmVudCl7XHJcblx0XHRhbHRpdHVkZUNvbnRyb2wuc2V0VGV4dChzZWxlY3Rfb2JqLnBvc2l0aW9uLmxlbmd0aCgpICogQVUgLSBzZWxlY3Rfb2JqLnBhcmVudC5yYWRpdXMpO1xyXG5cdH1cclxuXHRlbHNlXHJcblx0XHRhbHRpdHVkZUNvbnRyb2wuc2V0VGV4dCgwKTtcclxufVxyXG5cclxuZnVuY3Rpb24gb25LZXlEb3duKCBldmVudCApIHtcclxuXHR2YXIgY2hhciA9IFN0cmluZy5mcm9tQ2hhckNvZGUoZXZlbnQud2hpY2ggfHwgZXZlbnQua2V5Q29kZSkudG9Mb3dlckNhc2UoKTtcclxuXHJcblx0c3dpdGNoICggY2hhciApIHtcclxuXHJcblx0XHRjYXNlICdpJzpcclxuXHRcdFx0aWYoc2VsZWN0X29iaiA9PT0gbnVsbClcclxuXHRcdFx0XHRzZWxlY3Rfb2JqID0gc3VuLmNoaWxkcmVuWzBdO1xyXG5cdFx0XHRlbHNle1xyXG5cdFx0XHRcdC8vIFNvbWUgb2JqZWN0cyBkbyBub3QgaGF2ZSBhbiBvcmJpdFxyXG5cdFx0XHRcdGlmKHNlbGVjdF9vYmoub3JiaXQpXHJcblx0XHRcdFx0XHRzZWxlY3Rfb2JqLm9yYml0Lm1hdGVyaWFsID0gc2VsZWN0X29iai5vcmJpdE1hdGVyaWFsO1xyXG5cdFx0XHRcdHZhciBvYmpzID0gc2VsZWN0X29iai5jaGlsZHJlbjtcclxuXHRcdFx0XHRpZigwIDwgb2Jqcy5sZW5ndGgpe1xyXG5cdFx0XHRcdFx0c2VsZWN0X29iaiA9IG9ianNbMF07XHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdGVsc2V7XHJcblx0XHRcdFx0XHR2YXIgc2VsZWN0ZWQgPSBmYWxzZTtcclxuXHRcdFx0XHRcdHZhciBwcmV2ID0gc2VsZWN0X29iajtcclxuXHRcdFx0XHRcdGZvcih2YXIgcGFyZW50ID0gc2VsZWN0X29iai5wYXJlbnQ7IHBhcmVudDsgcGFyZW50ID0gcGFyZW50LnBhcmVudCl7XHJcblx0XHRcdFx0XHRcdG9ianMgPSBwYXJlbnQuY2hpbGRyZW47XHJcblx0XHRcdFx0XHRcdGZvcih2YXIgaSA9IDA7IGkgPCBvYmpzLmxlbmd0aDsgaSsrKXtcclxuXHRcdFx0XHRcdFx0XHR2YXIgbyA9IG9ianNbaV07XHJcblx0XHRcdFx0XHRcdFx0aWYobyA9PT0gcHJldiAmJiBpICsgMSA8IG9ianMubGVuZ3RoKXtcclxuXHRcdFx0XHRcdFx0XHRcdHNlbGVjdF9vYmogPSBvYmpzW2krMV07XHJcblx0XHRcdFx0XHRcdFx0XHRzZWxlY3RlZCA9IHRydWU7XHJcblx0XHRcdFx0XHRcdFx0XHRicmVhaztcclxuXHRcdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFx0aWYoc2VsZWN0ZWQpXHJcblx0XHRcdFx0XHRcdFx0YnJlYWs7XHJcblx0XHRcdFx0XHRcdHByZXYgPSBwYXJlbnQ7XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRpZighcGFyZW50KVxyXG5cdFx0XHRcdFx0XHRzZWxlY3Rfb2JqID0gc3VuO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0XHRpZihzZWxlY3Rfb2JqLm9yYml0KVxyXG5cdFx0XHRcdHNlbGVjdF9vYmoub3JiaXQubWF0ZXJpYWwgPSBzZWxlY3RlZE9yYml0TWF0ZXJpYWw7XHJcblx0XHRcdGJyZWFrO1xyXG5cclxuXHRcdGNhc2UgJ2MnOlxyXG5cdFx0XHRjZW50ZXJfc2VsZWN0ID0gIWNlbnRlcl9zZWxlY3Q7XHJcblx0XHRcdGJyZWFrO1xyXG5cclxuXHRcdGNhc2UgJ24nOiAvLyB0b2dnbGUgTkxJUFNcclxuXHRcdFx0bmxpcHNfZW5hYmxlID0gIW5saXBzX2VuYWJsZTtcclxuXHRcdFx0YnJlYWs7XHJcblxyXG5cdFx0Y2FzZSAnZyc6XHJcblx0XHRcdGdyaWRfZW5hYmxlID0gIWdyaWRfZW5hYmxlO1xyXG5cdFx0XHRicmVhaztcclxuXHJcblx0XHRjYXNlICdoJzpcclxuXHRcdFx0c3luY19yb3RhdGUgPSAhc3luY19yb3RhdGU7XHJcblx0XHRcdGJyZWFrO1xyXG5cclxuXHRcdGNhc2UgJ2snOlxyXG5cdFx0XHR1bml0c19rbSA9ICF1bml0c19rbTtcclxuXHRcdFx0YnJlYWs7XHJcblx0fVxyXG5cclxuXHRpZihzZWxlY3Rfb2JqICYmIHNlbGVjdF9vYmouY29udHJvbGxhYmxlKSBzd2l0Y2goIGNoYXIgKXtcclxuXHRcdGNhc2UgJ3cnOiAvLyBwcm9ncmFkZVxyXG5cdFx0XHRidXR0b25zLnVwID0gdHJ1ZTtcclxuLy9cdFx0XHRcdFx0XHRwcm9ncmFkZSA9IHRydWU7XHJcblx0XHRcdGJyZWFrO1xyXG5cdFx0Y2FzZSAncyc6IC8vIHJldHJvZ3JhZGVcclxuXHRcdFx0YnV0dG9ucy5kb3duID0gdHJ1ZTtcclxuLy9cdFx0XHRcdFx0XHRyZXRyb2dyYWRlID0gdHJ1ZTtcclxuXHRcdFx0YnJlYWs7XHJcblx0XHRjYXNlICdxJzogLy8gbm9ybWFsXHJcblx0XHRcdGJ1dHRvbnMuY291bnRlcmNsb2Nrd2lzZSA9IHRydWU7XHJcbi8vXHRcdFx0XHRcdFx0bm9ybWFsID0gdHJ1ZTtcclxuXHRcdFx0YnJlYWs7XHJcblx0XHRjYXNlICdlJzogLy8gbm9ybWFsIG5lZ2F0aXZlXHJcblx0XHRcdGJ1dHRvbnMuY2xvY2t3aXNlID0gdHJ1ZTtcclxuLy9cdFx0XHRcdFx0XHRhbnRpbm9ybWFsID0gdHJ1ZTtcclxuXHRcdFx0YnJlYWs7XHJcblx0XHRjYXNlICdhJzogLy8gb3JiaXQgcGxhbmUgbm9ybWFsXHJcblx0XHRcdGJ1dHRvbnMubGVmdCA9IHRydWU7XHJcbi8vXHRcdFx0XHRcdFx0aW5jbGluZSA9IHRydWU7XHJcblx0XHRcdGJyZWFrO1xyXG5cdFx0Y2FzZSAnZCc6IC8vIG9yYml0IHBsYW5lIG5vcm1hbCBuZWdhdGl2ZVxyXG5cdFx0XHRidXR0b25zLnJpZ2h0ID0gdHJ1ZTtcclxuLy9cdFx0XHRcdFx0XHRhbnRpaW5jbGluZSA9IHRydWU7XHJcblx0XHRcdGJyZWFrO1xyXG5cdFx0Y2FzZSAneic6XHJcblx0XHRcdHRocm90dGxlQ29udHJvbC5zZXRUaHJvdHRsZSgxKTtcclxuXHRcdFx0YnJlYWs7XHJcblx0XHRjYXNlICd4JzpcclxuXHRcdFx0dGhyb3R0bGVDb250cm9sLnNldFRocm90dGxlKDApO1xyXG5cdFx0XHRicmVhaztcclxuXHR9XHJcblxyXG5cdC8vIEFubm95aW5nIGJyb3dzZXIgaW5jb21wYXRpYmlsaXRpZXNcclxuXHR2YXIgY29kZSA9IGV2ZW50LndoaWNoIHx8IGV2ZW50LmtleUNvZGU7XHJcblx0Ly8gQWxzbyBzdXBwb3J0IG51bXBhZCBwbHVzIGFuZCBtaW51c1xyXG5cdGlmKGNvZGUgPT09IDEwNyB8fCBjb2RlID09PSAxODcgJiYgZXZlbnQuc2hpZnRLZXkpXHJcblx0XHR0aW1lc2NhbGVDb250cm9sLmluY3JlbWVudCgpO1xyXG5cdGlmKGNvZGUgPT09IDEwOSB8fCBjb2RlID09PSAxODkpXHJcblx0XHR0aW1lc2NhbGVDb250cm9sLmRlY3JlbWVudCgpO1xyXG5cdGlmKGNvZGUgPT09IDE2KVxyXG5cdFx0YWNjZWxlcmF0ZSA9IHRydWU7XHJcblx0aWYoY29kZSA9PT0gMTcpXHJcblx0XHRkZWNlbGVyYXRlID0gdHJ1ZTtcclxufVxyXG5cclxuZnVuY3Rpb24gb25LZXlVcCggZXZlbnQgKSB7XHJcblx0c3dpdGNoICggU3RyaW5nLmZyb21DaGFyQ29kZShldmVudC53aGljaCB8fCBldmVudC5rZXlDb2RlKS50b0xvd2VyQ2FzZSgpICkge1xyXG5cdFx0Y2FzZSAndyc6IC8vIHByb2dyYWRlXHJcblx0XHRcdGJ1dHRvbnMudXAgPSBmYWxzZTtcclxuLy9cdFx0XHRcdFx0XHRwcm9ncmFkZSA9IGZhbHNlO1xyXG5cdFx0XHRicmVhaztcclxuXHRcdGNhc2UgJ3MnOlxyXG5cdFx0XHRidXR0b25zLmRvd24gPSBmYWxzZTtcclxuLy9cdFx0XHRcdFx0XHRyZXRyb2dyYWRlID0gZmFsc2U7XHJcblx0XHRcdGJyZWFrO1xyXG5cdFx0Y2FzZSAncSc6IC8vIHByb2dyYWRlXHJcblx0XHRcdGJ1dHRvbnMuY291bnRlcmNsb2Nrd2lzZSA9IGZhbHNlO1xyXG4vL1x0XHRcdFx0XHRcdG5vcm1hbCA9IGZhbHNlO1xyXG5cdFx0XHRicmVhaztcclxuXHRcdGNhc2UgJ2UnOlxyXG5cdFx0XHRidXR0b25zLmNsb2Nrd2lzZSA9IGZhbHNlO1xyXG4vL1x0XHRcdFx0XHRcdGFudGlub3JtYWwgPSBmYWxzZTtcclxuXHRcdFx0YnJlYWs7XHJcblx0XHRjYXNlICdhJzogLy8gb3JiaXQgcGxhbmUgbm9ybWFsXHJcblx0XHRcdGJ1dHRvbnMubGVmdCA9IGZhbHNlO1xyXG4vL1x0XHRcdFx0XHRcdGluY2xpbmUgPSBmYWxzZTtcclxuXHRcdFx0YnJlYWs7XHJcblx0XHRjYXNlICdkJzogLy8gb3JiaXQgcGxhbmUgbm9ybWFsIG5lZ2F0aXZlXHJcblx0XHRcdGJ1dHRvbnMucmlnaHQgPSBmYWxzZTtcclxuLy9cdFx0XHRcdFx0XHRhbnRpaW5jbGluZSA9IGZhbHNlO1xyXG5cdFx0XHRicmVhaztcclxuXHR9XHJcblx0Ly8gQW5ub3lpbmcgYnJvd3NlciBpbmNvbXBhdGliaWxpdGllc1xyXG5cdHZhciBjb2RlID0gZXZlbnQud2hpY2ggfHwgZXZlbnQua2V5Q29kZTtcclxuXHRpZihjb2RlID09PSAxNilcclxuXHRcdGFjY2VsZXJhdGUgPSBmYWxzZTtcclxuXHRpZihjb2RlID09PSAxNylcclxuXHRcdGRlY2VsZXJhdGUgPSBmYWxzZTtcclxufVxyXG5cclxuaW5pdCgpO1xyXG5hbmltYXRlKCk7XHJcbn0pKClcclxuIl0sInNvdXJjZVJvb3QiOiIifQ==